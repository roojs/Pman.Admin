{
 "items" : [
  {
   "$ xns" : "Roo",
   "Boolean background" : true,
   "String region" : "center",
   "String title" : "Notify Servers",
   "items" : [
    {
     "$ xns" : "Roo",
     "* prop" : "layout",
     "items" : [
      {
       "$ xns" : "Roo",
       "* prop" : "south",
       "Boolean split" : true,
       "Number height" : 200,
       "xtype" : "LayoutRegion"
      },
      {
       "$ xns" : "Roo",
       "* prop" : "center",
       "xtype" : "LayoutRegion"
      },
      {
       "$ xns" : "Roo",
       "items" : [
        {
         "$ xns" : "Roo",
         "* prop" : "layout",
         "items" : [
          {
           "$ xns" : "Roo",
           "* prop" : "center",
           "xtype" : "LayoutRegion"
          },
          {
           "$ xns" : "Roo",
           "* prop" : "east",
           "hidden" : true,
           "width" : 200,
           "xtype" : "LayoutRegion"
          },
          {
           "$ xns" : "Roo",
           "* prop" : "south",
           "height" : 60,
           "xtype" : "LayoutRegion"
          },
          {
           "$ xns" : "Roo",
           "autoScroll" : true,
           "fitContainer" : true,
           "fitToFrame" : true,
           "items" : [
            {
             "$ xns" : "Roo",
             "* prop" : "toolbar",
             "items" : [
              {
               "$ xns" : "Roo.Toolbar",
               "xtype" : "Fill"
              },
              {
               "$ xns" : "Roo.Toolbar",
               "listeners" : {
                "click" : [
                 "function (_self, e)",
                 "{",
                 "    if (!_this.imageView.getSelectedNodes().length) {",
                 "     Roo.MessageBox.alert(\"Error\", \"Select an Image\");",
                 "     return;",
                 "   }",
                 "   var id  = _this.imageView.getNodeData(_this.imageView.getSelectedNodes()[0]).id;",
                 "   _this.imageView.el.mask('Deleting');",
                 "   ",
                 "   Roo.Ajax.request({",
                 "      url : baseURL + '/Roo/Images.php',",
                 "      params : {",
                 "         _delete : id",
                 "      },",
                 "      method : 'POST',",
                 "      success : function() {",
                 "          _this.imageView.loadImages();",
                 "      },",
                 "      failure : function() {",
                 "           _this.imageView.el.unmask();",
                 "           Roo.MessageBox.alert(\"Error\", \"Error deleting image\");",
                 "           return;",
                 "      }",
                 "  });",
                 " }"
                ]
               },
               "text" : "Delete Selected File or  Image",
               "xtype" : "Button"
              }
             ],
             "xtype" : "Toolbar"
            },
            {
             "$ loadImages" : [
              "function() {",
              "    var imgbase = typeof(publicBaseURL) != 'undefined' ? publicBaseURL : rootURL + '/crm.php';",
              "",
              "     this.load({",
              "        url : baseURL + '/Roo/Images.php',",
              "        method : 'GET',",
              "        params : {",
              "           ontable : 'crm_person',",
              "           onid : _this.viewPerson.id,",
              "           'query[imagesize]' : '150x150',",
              "           'query[imageBaseURL]' : imgbase,",
              "           limit : 150",
              "        },",
              "        text : 'Loading'",
              "   });",
              "   ",
              "}",
              ""
             ],
             "$ xns" : "Roo",
             "items" : [
              {
               "$ html" : [
                "'<div class=\"thumb-wrap\"> ' + ",
                "  '<div class=\"thumb\"><img  src=\"{url_thumb}\" class=\"thumb-img\"></div>' + ",
                "  '<div class=\"thumblabel\" qtip=\"{linkurl}\">{title}<br/>{linkurl}</div>' + ",
                "'</div>'"
               ],
               "$ xns" : "Roo",
               "* prop" : "tpl",
               "xtype" : "Template"
              }
             ],
             "jsonRoot" : "data",
             "listeners" : {
              "beforerender" : [
               "function (_self, data)",
               "{",
               "   _this.imageView = _self;",
               "   ",
               "   if (this.stylesheet) {",
               "      return;",
               "   }",
               "   this.el.addClass('thumb-browser');",
               "",
               "   ",
               "   this.stylesheet = Roo.util.CSS.createStyleSheet(",
               "        {",
               "          '.thumb-browser .thumb-wrap' : {",
               "                border:'3px solid #EEE',",
               "                'float':'left',",
               "                height:'190px',",
               "                margin:'2px',",
               "                'padding-left':'5px',",
               "                'padding-top':'5px',",
               "                width:'160px'",
               "            },",
               "            '.thumb-browser .x-view-selected' : {",
               "              border:'3px solid #333'",
               "          ",
               "            },",
               "            '.thumblabel' : {",
               "                'font-size': '11px',",
               "                'font-family' : 'tahoma, verdana, helvetica',",
               "                'max-width': '153px',",
               "                    'overflow': 'hidden',",
               "                    'white-space': 'nowrap'",
               "            }",
               "",
               "        }, Roo.id()",
               "        );",
               "   ",
               "}"
              ],
              "dblclick" : [
               "function (_self, index, node, e)",
               "{",
               "       ",
               "       if (!node) {",
               "        return;",
               "        }",
               "       var snode = false;",
               "       try {",
               "            snode =  _this.imageView.getNodeData(node);",
               "        } catch (e) {}",
               "        ",
               "         ",
               "        if (!snode) {",
               "            return;",
               "        }",
               "        new Pman.Download({",
               "            url : baseURL + '/Images/Download/' + snode.id + '/'  + snode.shorten_name",
               "          }); ",
               "}"
              ],
              "selectionchange" : [
               "function (_self, selections)",
               "{",
               "     ",
               "     var snode = false;",
               "     if (selections && selections.length) {",
               "        try {",
               "           var snode =  _this.imageView.getNodeData(selections[0]);",
               "        } catch (e) {}",
               "    }",
               "     ",
               "    if (!snode) {",
               "         _this.imagePanel.layout.getRegion('east').hide();",
               "        return;",
               "    }",
               "    _this.imagePanel.layout.getRegion('east').show();    ",
               " ",
               "    _this.imageForm.setValues(snode);",
               "}"
              ]
             },
             "singleSelect" : true,
             "xtype" : "JsonView"
            }
           ],
           "region" : "center",
           "xtype" : "ContentPanel"
          },
          {
           "$ xns" : "Roo",
           "items" : [
            {
             "$ progressUrl" : "baseURL  + '/Core/UploadProgress.php'",
             "$ url" : "baseURL + '/Roo/Images.php'",
             "$ xns" : "Roo.form",
             "fileUpload" : true,
             "items" : [
              {
               "$ xns" : "Roo.form",
               "items" : [
                {
                 "$ xns" : "Roo.form",
                 "Number/String width" : 600,
                 "items" : [
                  {
                   "$ xns" : "Roo.form",
                   "allowBlank" : false,
                   "fieldLabel" : "Upload Image or File",
                   "inputType" : "file",
                   "listeners" : {
                    "change" : [
                     "function (_self, newValue, oldValue)",
                     "{",
                     "    ",
                     "}"
                    ]
                   },
                   "name" : "imageUpload",
                   "width" : 250,
                   "xtype" : "TextField"
                  },
                  {
                   "$ xns" : "Roo.form",
                   "name" : "onid",
                   "xtype" : "Hidden"
                  },
                  {
                   "$ xns" : "Roo.form",
                   "name" : "ontable",
                   "value" : "crm_person",
                   "xtype" : "Hidden"
                  }
                 ],
                 "xtype" : "Column"
                }
               ],
               "xtype" : "Row"
              }
             ],
             "labelWidth" : 200,
             "listeners" : {
              "actioncomplete" : [
               "function (_self, action)",
               "{",
               "// only action this will handle is submit?",
               "// should test for errors..",
               "    if (action.failureType) {",
               "        _this.uploadForm.el.unmask();",
               "        _this.uploadSending = false;",
               "        Roo.MessageBox.alert(\"Error\", \"Upload Failed\");",
               "        return false;",
               "    ",
               "    }",
               "      ",
               "    ",
               "    if (action.type =='submit') {",
               "         _this.uploadForm.reset();",
               "           _this.uploadSending = false;",
               "          _this.uploadForm.el.unmask();         ",
               "          _this.imageView.loadImages();",
               "         return;",
               "    }",
               "     ",
               "}"
              ],
              "actionfailed" : [
               "function (_self, action)",
               "{",
               "",
               "   _this.uploadForm.el.unmask();",
               "   _this.uploadForm.reset();",
               "    _this.uploadSending = false;",
               "    Roo.MessageBox.alert(\"Error\", \"Upload Failed\");",
               "    _this.imageView.loadImages();",
               "    ",
               "  ",
               "}"
              ],
              "rendered" : [
               "function (form)",
               "{",
               "  _this.uploadForm = form;",
               "}"
              ]
             },
             "style" : "margin: 10px;",
             "xtype" : "Form"
            }
           ],
           "region" : "south",
           "xtype" : "ContentPanel"
          },
          {
           "$ xns" : "Roo",
           "items" : [
            {
             "$ url" : "baseURL + '/Roo/Images.php'",
             "$ xns" : "Roo.form",
             "items" : [
              {
               "$ xns" : "Roo.form",
               "fieldLabel" : "Title",
               "height" : 50,
               "name" : "title",
               "width" : 150,
               "xtype" : "TextArea"
              },
              {
               "$ xns" : "Roo.form",
               "alwaysQuery" : true,
               "displayField" : "name",
               "editable" : false,
               "emptyText" : "Select type",
               "fieldLabel" : "Image Type",
               "forceSelection" : true,
               "items" : [
                {
                 "$ sortInfo" : "{ direction : 'ASC', field: 'id' }",
                 "$ xns" : "Roo.data",
                 "* prop" : "store",
                 "items" : [
                  {
                   "$ url" : "baseURL + '/Roo/core_enum.php'",
                   "$ xns" : "Roo.data",
                   "* prop" : "proxy",
                   "method" : "GET",
                   "xtype" : "HttpProxy"
                  },
                  {
                   "$ fields" : "[]",
                   "$ xns" : "Roo.data",
                   "* prop" : "reader",
                   "id" : "id",
                   "root" : "data",
                   "totalProperty" : "total",
                   "xtype" : "JsonReader"
                  }
                 ],
                 "listeners" : {
                  "|beforeload" : [
                   "function (_self, o){",
                   "    o.params = o.params || {};",
                   "    // set more here",
                   "       // set more here",
                   "    o.params.etype=\"Image Types\";",
                   "}",
                   ""
                  ]
                 },
                 "remoteSort" : true,
                 "xtype" : "Store"
                }
               ],
               "listWidth" : 200,
               "loadingText" : "Searching...",
               "minChars" : 2,
               "name" : "imgtype",
               "pageSize" : 20,
               "qtip" : "Select Image Type",
               "queryParam" : "query[name]",
               "selectOnFocus" : true,
               "tpl" : "<div class=\"x-grid-cell-text x-btn button\"><b>{name}</b> </div>",
               "triggerAction" : "all",
               "typeAhead" : true,
               "valueField" : "name",
               "width" : 150,
               "xtype" : "ComboBox"
              },
              {
               "$ xns" : "Roo.form",
               "fieldLabel" : "Mimetype",
               "name" : "mimetype",
               "readOnly" : true,
               "width" : 150,
               "xtype" : "TextField"
              },
              {
               "$ xns" : "Roo.form",
               "fieldLabel" : "Filesize",
               "name" : "filesize",
               "readOnly" : true,
               "width" : 75,
               "xtype" : "TextField"
              },
              {
               "$ xns" : "Roo.form",
               "name" : "id",
               "xtype" : "Hidden"
              },
              {
               "$ xns" : "Roo",
               "listeners" : {
                "click" : [
                 "function (_self, e)",
                 "{",
                 "",
                 "    var lr =  _this.imagePanel.layout.getRegion('east');",
                 "    lr.el.mask(\"Saving\");",
                 "   _this.imageForm.submit();",
                 "}"
                ]
               },
               "text" : "Update Image Details",
               "xtype" : "Button"
              }
             ],
             "labelAlign" : "top",
             "listeners" : {
              "actionfailed" : [
               "function (_self, action)",
               "{",
               "        var lr =  _this.imagePanel.layout.getRegion('east');",
               "        lr.el.unmask();",
               "   if (action.failureType ==  Roo.form.Action.CLIENT_INVALID) {",
               "    Roo.MessageBox.alert(\"Error\", \"Correct All the errors in Red\");",
               "    return;",
               "   }",
               "    Roo.MessageBox.alert(\"Error\", \"Problem sending to server\");",
               "}"
              ],
              "|actioncomplete" : [
               "function(_self,action)",
               "{",
               "    if (action.type == 'setdata') {",
               "       //_this.dialog.el.mask(\"Loading\");",
               "       //this.load({ method: 'GET', params: { '_id' : _this.data.id }});",
               "       return;",
               "    }",
               "    if (action.type == 'load') {",
               "",
               "        return;",
               "    }",
               "    if (action.type =='submit') {",
               "         _this.selectAfterLoad = this.findField('id').getValue();",
               "           var lr =  _this.imagePanel.layout.getRegion('east');",
               "        lr.el.unmask();",
               "        _this.imageView.loadImages();",
               "         return;",
               "    }",
               "}",
               ""
              ],
              "|rendered" : [
               "function (form)",
               "{",
               "",
               "    _this.imageForm= form;",
               "}",
               ""
              ]
             },
             "method" : "POST",
             "style" : "margin:10px;",
             "xtype" : "Form"
            }
           ],
           "region" : "east",
           "xtype" : "ContentPanel"
          }
         ],
         "xtype" : "BorderLayout"
        }
       ],
       "listeners" : {
        "activate" : [
         "function (_self)",
         "{",
         "   _this.imagePanel = _self;",
         "    ",
         "   ",
         " ",
         "   ",
         "//   console.log('activate');",
         "   if (typeof(_this.imageView) == 'undefined') {",
         "     return;",
         "   }",
         "   _this.imageView.el.unmask();",
         "   if (_this.viewPerson) {",
         "       _this.imageView.loadImages();",
         "   } else {",
         "      _this.imageView.el.mask(\"Select a Person First\");",
         "   }",
         "   ",
         "   if (_this.hasUploadWatch) {",
         "     return;",
         "   }",
         "    _this.hasUploadWatch =true;",
         "    _this.uploadSending =false;",
         "    window.setInterval( function() {",
         "        // prevent warning in editor..",
         "        if (!_this.uploadForm) {return; }",
         "         ",
         "        ",
         "        var val = _this.uploadForm.findField('imageUpload').getValue();",
         "        if (!val || !val.length) {",
         "            return;",
         "        }",
         "         var id = _this.viewPerson.id * 1;",
         "        if (!id) {",
         "            Roo.MessageBox.alert(\"Error\", \"Select a person first\");",
         "           _this.uploadForm.reset();",
         "            return;",
         "        }",
         "        if (_this.uploadSending) {",
         "            return;",
         "        }",
         "         _this.uploadSending =true;",
         "        _this.uploadForm.findField('onid').setValue(_this.viewPerson.id);",
         "        _this.uploadForm.el.mask(\"Sending\");",
         "        _this.uploadForm.submit.defer(100, _this.uploadForm);",
         "   ",
         "  }, 1000)  ",
         "   ",
         "}"
        ]
       },
       "region" : "center",
       "title" : "Images / PDF",
       "xtype" : "NestedLayoutPanel"
      },
      {
       "$ xns" : "Roo",
       "Boolean background" : true,
       "fitContainer" : true,
       "fitToframe" : true,
       "items" : [
        {
         "$ xns" : "Roo.grid",
         "* prop" : "grid",
         "autoExpandColumn" : "hostname",
         "items" : [
          {
           "$ xns" : "Roo",
           "* prop" : "toolbar",
           "items" : [
            {
             "$ xns" : "Roo.Toolbar",
             "String text" : "Add",
             "listeners" : {
              "click" : [
               "function() ",
               "{",
               "    Pman.Dialog.CoreNotifyServer.show(",
               "         {}, function() {",
               "        _this.sgrid.footer.onClick('first');",
               "    }); ",
               "}"
              ]
             },
             "xtype" : "Button"
            },
            {
             "$ xns" : "Roo.Toolbar",
             "xtype" : "Fill"
            },
            {
             "$ xns" : "Roo.Toolbar",
             "String text" : "Remove",
             "listeners" : {
              "click" : [
               "function (_self, e)",
               "{",
               "       Pman.genericDelete(_this.spanel, 'core_notify_server');",
               "}"
              ]
             },
             "xtype" : "Button"
            }
           ],
           "xtype" : "Toolbar"
          },
          {
           "$ sortInfo" : "{ field : 'hostname', direction: 'ASC' }",
           "$ xns" : "Roo.data",
           "* prop" : "dataSource",
           "items" : [
            {
             "$ url" : "baseURL + '/Roo/core_notify_server'",
             "$ xns" : "Roo.data",
             "* prop" : "proxy",
             "Number timeout" : 120000,
             "method" : "GET",
             "xtype" : "HttpProxy"
            },
            {
             "$ xns" : "Roo.data",
             "* prop" : "reader",
             "id" : "id",
             "root" : "data",
             "totalProperty" : "total",
             "xtype" : "JsonReader"
            }
           ],
           "listeners" : {
            "beforeload" : [
             "function (_self, options)",
             "{",
             "   options.params._with_queue_size  =1 ;",
             "    ",
             "}"
            ]
           },
           "remoteSort" : true,
           "xtype" : "Store"
          },
          {
           "$ xns" : "Roo",
           "* prop" : "footer",
           "displayInfo" : true,
           "displayMsg" : "Displaying Servers {0} - {1} of {2}",
           "emptyMsg" : "No Servers found",
           "pageSize" : 25,
           "xtype" : "PagingToolbar"
          },
          {
           "$ renderer" : [
            "function(v) {",
            "    var state = v> 0 ?  '-checked' : '';",
            "",
            "    return '<img class=\"x-grid-check-icon' + state + '\" src=\"' + Roo.BLANK_IMAGE_URL + '\"/>';",
            "}"
           ],
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "dataIndex" : "is_active",
           "header" : "Is Active",
           "width" : 100,
           "xtype" : "ColumnModel"
          },
          {
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "dataIndex" : "hostname",
           "header" : "Hostname",
           "width" : 150,
           "xtype" : "ColumnModel"
          },
          {
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "dataIndex" : "helo",
           "header" : "Helo",
           "width" : 150,
           "xtype" : "ColumnModel"
          },
          {
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "dataIndex" : "poolname",
           "header" : "Pool",
           "width" : 150,
           "xtype" : "ColumnModel"
          },
          {
           "$ Function renderer" : [
            "function(v,x,r) {",
            "",
            "    return r.data.in_queue || 0;",
            "}"
           ],
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "dataIndex" : "in_queue",
           "header" : "In Queue",
           "width" : 150,
           "xtype" : "ColumnModel"
          },
          {
           "$ renderer" : "function(v) { return String.format('{0}', v ? v.format('d/M/Y  H:i:s') : ''); }",
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "dataIndex" : "last_send",
           "header" : "Last Sent",
           "width" : 120,
           "xtype" : "ColumnModel"
          }
         ],
         "listeners" : {
          "rowclick" : [
           "function (_self, rowIndex, e)",
           "{",
           "    (function() { ",
           "        _this.bgrid.footer.onClick('first');",
           "    }).defer(100);",
           "}"
          ],
          "|render" : [
           "function() ",
           "{",
           "    _this.sgrid = this; ",
           "    //_this.dialog = Pman.Dialog.FILL_IN",
           "    if (_this.spanel.active) {",
           "       this.footer.onClick('first');",
           "    }",
           "}"
          ],
          "|rowdblclick" : [
           "function (_self, rowIndex, e)",
           "{",
           "    ",
           "    Pman.Dialog.CoreNotifyServer.show(",
           "         this.getDataSource().getAt(rowIndex).data, function() {",
           "        _this.sgrid.footer.onClick('first');",
           "    }); ",
           "}",
           ""
          ]
         },
         "loadMask" : true,
         "xtype" : "Grid"
        }
       ],
       "listeners" : {
        "|activate" : [
         "function() {",
         "    _this.spanel = this;",
         "    if (_this.sgrid) {",
         "        _this.sgrid.footer.onClick('first');",
         "    }",
         "}"
        ]
       },
       "region" : "center",
       "tableName" : "core_notify_server",
       "title" : "Servers",
       "xtype" : "GridPanel"
      },
      {
       "$ xns" : "Roo",
       "Boolean background" : true,
       "fitContainer" : true,
       "fitToframe" : true,
       "items" : [
        {
         "$ xns" : "Roo.grid",
         "* prop" : "grid",
         "autoExpandColumn" : "error_str",
         "items" : [
          {
           "$ xns" : "Roo",
           "* prop" : "toolbar",
           "items" : [
            {
             "$ xns" : "Roo.Toolbar",
             "xtype" : "Fill"
            },
            {
             "$ xns" : "Roo.Toolbar",
             "String text" : "Remove",
             "listeners" : {
              "click" : [
               "function (_self, e)",
               "{",
               "    Pman.Delete.progress(_this.bpanel, 'core_notify_blacklist');",
               "}"
              ]
             },
             "xtype" : "Button"
            }
           ],
           "xtype" : "Toolbar"
          },
          {
           "$ sortInfo" : "{ field : 'person_id_name', direction: 'ASC' }",
           "$ xns" : "Roo.data",
           "* prop" : "dataSource",
           "items" : [
            {
             "$ url" : "baseURL + '/Roo/core_notify_blacklist'",
             "$ xns" : "Roo.data",
             "* prop" : "proxy",
             "method" : "GET",
             "xtype" : "HttpProxy"
            },
            {
             "$ xns" : "Roo.data",
             "* prop" : "reader",
             "id" : "id",
             "root" : "data",
             "totalProperty" : "total",
             "xtype" : "JsonReader"
            }
           ],
           "listeners" : {
            "beforeload" : [
             "function (_self, opts)",
             "{",
             "    if(!_this.sgrid.getSelectionModel().getSelected()) {",
             "        return false;",
             "    }",
             "    ",
             "    opts.params.server_id =    _this.sgrid.getSelectionModel().getSelected().data.id;",
             "}"
            ]
           },
           "remoteSort" : true,
           "xtype" : "Store"
          },
          {
           "$ xns" : "Roo",
           "* prop" : "footer",
           "displayInfo" : true,
           "displayMsg" : "Displaying Blacklists {0} - {1} of {2}",
           "emptyMsg" : "No Blacklists found",
           "pageSize" : 25,
           "xtype" : "PagingToolbar"
          },
          {
           "$ renderer" : "function(v) { return String.format('{0}', v ? v.format('d/M/Y H:i:s') : ''); }",
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "Boolean sortable" : true,
           "dataIndex" : "added_dt",
           "header" : "Added",
           "width" : 120,
           "xtype" : "ColumnModel"
          },
          {
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "Boolean sortable" : true,
           "dataIndex" : "domain_id_domain",
           "header" : "Domain",
           "width" : 150,
           "xtype" : "ColumnModel"
          },
          {
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "Boolean sortable" : true,
           "dataIndex" : "error_str",
           "header" : "Error",
           "width" : 150,
           "xtype" : "ColumnModel"
          }
         ],
         "listeners" : {
          "|render" : [
           "function() ",
           "{",
           "    _this.bgrid = this; ",
           "    //_this.dialog = Pman.Dialog.FILL_IN",
           "    ",
           "}"
          ]
         },
         "loadMask" : true,
         "xtype" : "Grid"
        }
       ],
       "listeners" : {
        "|activate" : [
         "function() {",
         "    _this.bpanel = this;",
         "   ",
         "}"
        ]
       },
       "region" : "south",
       "tableName" : "core_notify_recur",
       "title" : "Recurrent Notifications",
       "xtype" : "GridPanel"
      }
     ],
     "xtype" : "BorderLayout"
    }
   ],
   "xtype" : "NestedLayoutPanel"
  }
 ],
 "modOrder" : "900",
 "name" : "Pman.Tab.CoreNotifyServers",
 "named_strings" : {
  "filesize_fieldLabel" : "b18c29b8470190a02813415a04a2191f",
  "imageUpload_fieldLabel" : "ea72bacd2fdfa818907bb9559e6905a1",
  "imgtype_emptyText" : "8535bcc0f05358a583bb432bbadf7e0d",
  "imgtype_fieldLabel" : "8e16a71b3d8217eb80b39b7d8dec4296",
  "imgtype_loadingText" : "1243daf593fa297e07ab03bf06d925af",
  "imgtype_qtip" : "471ddaf9e80da04dd5a3a54daa0239b0",
  "mimetype_fieldLabel" : "529701d5ccccf8a1c604c27f48ce7d82",
  "ontable_value" : "1d05bbecb1dd9127ccc9a5efaf492a2c",
  "title_fieldLabel" : "b78a3223503896721cca1303f776159b"
 },
 "parent" : "Pman.Tab.AdminWatchNotify",
 "path" : "/home/leon/gitlive/web.MediaOutreach/Pman/Admin/Pman.Tab.CoreNotifyServers.bjs",
 "permname" : "",
 "strings" : {
  "1063e38cb53d94d386f21227fcd84717" : "Remove",
  "11f7b456ca765e9f556f653090045ae7" : "Images / PDF",
  "1203cd27e4d1ab6f1296728c021d9c1a" : "Is Active",
  "1243daf593fa297e07ab03bf06d925af" : "Searching...",
  "1d05bbecb1dd9127ccc9a5efaf492a2c" : "crm_person",
  "2023301a71db57f37d50da7d045b881a" : "Displaying Servers {0} - {1} of {2}",
  "2ddb157d4780e8883fbde96f354c57d2" : "Displaying Blacklists {0} - {1} of {2}",
  "471ddaf9e80da04dd5a3a54daa0239b0" : "Select Image Type",
  "529701d5ccccf8a1c604c27f48ce7d82" : "Mimetype",
  "55cfeeacad2f92b9fea0a1bbb6449fac" : "Update Image Details",
  "774ff60df30a64fad1d29f6c2daa8691" : "No Servers found",
  "825bd435c12978e8492330c2a0d823db" : "Helo",
  "8535bcc0f05358a583bb432bbadf7e0d" : "Select type",
  "8e16a71b3d8217eb80b39b7d8dec4296" : "Image Type",
  "902b0d55fddef6f8d651fe1035b7d4bd" : "Error",
  "ac659513b2353187192e88c5d1988228" : "Servers",
  "b18c29b8470190a02813415a04a2191f" : "Filesize",
  "b26686c0a708faee42861d8b905e882e" : "Last Sent",
  "b78a3223503896721cca1303f776159b" : "Title",
  "be6838286e448ad65c5b55d690e2c38b" : "In Queue",
  "c348b06d2667edd048ded3c1b1878cc1" : "Recurrent Notifications",
  "c5dd93dd1011986763b5925e0af25e08" : "No Blacklists found",
  "c8f4b8c435b3d99a66e1b91bec60737c" : "Hostname",
  "c9d03748d1a54666b5c7a5187109301b" : "Delete Selected File or  Image",
  "def36b726efed529b13ba240dd331a12" : "Pool",
  "e3974584afa867d8619253bc669d6197" : "Notify Servers",
  "ea72bacd2fdfa818907bb9559e6905a1" : "Upload Image or File",
  "eae639a70006feff484a39363c977e24" : "Domain",
  "ec211f7c20af43e742bf2570c3cb84f9" : "Add",
  "f29ddbfb905eb2593fdcdfb243f9af85" : "Added"
 },
 "title" : "Pman.Tab.CoreNotifyServers"
}