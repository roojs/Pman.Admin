{
    "id": "roo-file-275",
    "name": "Pman.Tab.AdminTranslations",
    "parent": "Pman.Tab.Admin",
    "title": "Admin - Translations",
    "path": "/home/edward/gitlive/Pman.Admin/Pman.Tab.AdminTranslations.bjs",
    "items": [
        {
            "region": "center",
            "title": "Translate App",
            "xtype": "NestedLayoutPanel",
            "|xns": "Roo",
            "items": [
                {
                    "|xns": "Roo",
                    "xtype": "BorderLayout",
                    "*prop": "layout",
                    "items": [
                        {
                            "*prop": "center",
                            "alwaysShowTabs": true,
                            "tabPosition": "top",
                            "xtype": "LayoutRegion",
                            "|xns": "Roo"
                        },
                        {
                            "listeners": {
                                "|activate": "function() {\n    _this.panel = this;\n    if (_this.grid) {\n       _this.grid.getDataSource().reload(); \n    }\n}"
                            },
                            "background": true,
                            "fitContainer": true,
                            "fitToframe": true,
                            "region": "center",
                            "title": "Text in interface",
                            "xtype": "GridPanel",
                            "|xns": "Roo",
                            "items": [
                                {
                                    "listeners": {
                                        "|render": "function() { \n    _this.grid = this; \n    //_this.dialog = Pman.Dialog.FILL_IN\n    if (_this.panel.active) {\n      _this.grid.getDataSource().reload(); \n    }\n}",
                                        "|beforeedit": "function(e) {\n    console.log('beforeedit');\n    //if (e.record.get('origtxt').indexOf('<') > -1) {\n                       // console.log(\"HTML EDITOR!!\");\n                     \n                    //    return false;\n                    //}\n                    if (e.record.get('txt').replace(/\\s+/, '').length) {\n                        return true;\n                    }\n                    if (e.record.get('suggest').length) {\n                        e.record.set('txt', e.record.get('suggest'));\n                    //    _this.saveRec(e.record);\n                        return;\n                    }\n                    \n                    \n                    \n                   \n                    var tl = e.record.get('id').split('/')[0];\n                  \n                    tl = (tl == 'zh_HK') ? 'zh-TW' : tl; \n                    tl = tl.replace('_', '-');\n                    var rec = e.record;\n                    \n                    \n                    \n                    Pman.gtranslate(e.record.get('origtxt'), 'en', tl, function(result) { \n                        if (typeof(result) == 'object') { //error\n                            return; \n                           }\n                        \n                        if (_this.grid.activeEditor) {\n                            _this.grid.activeEditor.setValue(result);\n                        } else {\n                            rec.set('txt',result);\n                            //_this.saveRec(rec);\n                        }\n\n                        //\n                        \n                        \n                        //console.log(result.translation);\n                    });\n                    \n                   \n                    \n                    return true;\n                } ",
                                        "|afteredit": "function (e)\n{\n    var saveRec  = function(rec)\n    {\n        var g = _this.grid;\n\n        //g.getView().el.mask('Saving');\n        new Pman.Request({\n            url : baseURL + '/Admin/Translations.php',\n            method: 'POST',\n            params : {\n                id : rec.get('id'),\n                txt : rec.get('txt'),\n                lang :  _this.langCombo.getValue(),\n                module :  _this.modCombo.getValue()\n            },\n            success : function()\n            {\n                //g.getView().el.unmask();\n                //g.getDataSource().reload();\n            },\n            failure : function()\n            {\n                Roo.MessageBox.alert(\"Error\", \"There was a problem saving the data - try reloading\");\n               // g.getView().el.unmask();\n            }\n            \n    });\n        };\n    \n    saveRec.defer(1000, _this, [ e.record ]);\n}",
                                        "celldblclick": "function (_self, rowIndex, columnIndex, e)\n{\n    var di  = this.colModel.config[columnIndex].dataIndex;\n    if (di != 'reset_tx') {\n        return;\n    }\n    rec = this.ds.getAt(rowIndex);\n    \n      var g = _this.grid;\n \n    new Pman.Request({\n        url : baseURL + '/Admin/Translations.php',\n        method: 'POST',\n        params : {\n            id : rec.get('id'),\n            txt : '',\n            lang :  _this.langCombo.getValue(),\n            module :  _this.modCombo.getValue()\n        },\n        success : function()\n        {\n            //g.getView().el.unmask();\n            //g.getDataSource().reload();\n            rec.set('txt', '');\n        },\n        failure : function()\n        {\n            Roo.MessageBox.alert(\"Error\", \"There was a problem saving the data - try reloading\");\n           // g.getView().el.unmask();\n        }\n        \n    });\n       \n    \n}"
                                    },
                                    "*prop": "grid",
                                    "autoExpandColumn": "txt",
                                    "clicksToEdit": 1,
                                    "loadMask": true,
                                    "xtype": "EditorGrid",
                                    "|xns": "Roo.grid",
                                    "items": [
                                        {
                                            "listeners": {
                                                "|beforeload": "function (_self, opts)\n{\n\n                        if (!_this.langCombo || !_this.langCombo.getValue().length) {\n                            return false;\n                        }\n                        if (!_this.modCombo || !_this.modCombo.getValue().length) {\n                            return false;\n                        }\n                        opts.params = {\n                            lang :  _this.langCombo.getValue(),\n                            module :  _this.modCombo.getValue()\n                        };\n}",
                                                "loadexception": "function (self, ret, load, jsonData)\n{\n    Roo.MessageBox.alert(\"Error\", jsonData);\n}"
                                            },
                                            "*prop": "dataSource",
                                            "xtype": "Store",
                                            "|reader": "Pman.Readers.Category",
                                            "|xns": "Roo.data",
                                            "items": [
                                                {
                                                    "*prop": "proxy",
                                                    "xtype": "HttpProxy",
                                                    "method": "GET",
                                                    "|url": "baseURL + '/Admin/Translations.php'",
                                                    "listeners": {},
                                                    "|xns": "Roo.data"
                                                },
                                                {
                                                    "xtype": "JsonReader",
                                                    "|xns": "Roo.data",
                                                    "*prop": "reader",
                                                    "root": "data",
                                                    "totalProperty": "total",
                                                    "id": "id",
                                                    "|fields": "[                    'id',             'tablename',             'tableid',             'colname',             'txt',             'lang',             { name:'updated', type:'date', dateFormat: 'Y-m-d H:i:s' },             { name:'origupdated', type:'date', dateFormat: 'Y-m-d H:i:s' },             'origtxt',             'msum',             'suggest'                  ]",
                                                    "listeners": {}
                                                }
                                            ]
                                        },
                                        {
                                            "*prop": "toolbar",
                                            "xtype": "Toolbar",
                                            "listeners": {},
                                            "|xns": "Roo",
                                            "items": [
                                                {
                                                    "xtype": "ComboBox",
                                                    "listeners": {
                                                        "|render": "function (_self)\n{\n  _this.modCombo = _self;\n}",
                                                        "|select": "function (combo, record, index)\n{\n  _this.grid.getDataSource().reload(); \n}"
                                                    },
                                                    "valueField": "module",
                                                    "displayField": "module",
                                                    "width": 200,
                                                    "typeAhead": false,
                                                    "editable": false,
                                                    "mode": "local",
                                                    "triggerAction": "all",
                                                    "emptyText": "Select Module",
                                                    "selectOnFocus": true,
                                                    "|xns": "Roo.form",
                                                    "items": [
                                                        {
                                                            "*prop": "store",
                                                            "xtype": "SimpleStore",
                                                            "|data": "(function() {             \n        var modlist = [];             \n        AppModules = typeof(AppModules) == 'undefined' ? '' : AppModules;\n        Roo.each( AppModules.split(','), function(mod) {            \n                 modlist.push( [ mod ] );            \n      });             \n      return modlist;\n   })()",
                                                            "|fields": "['module']",
                                                            "|xns": "Roo.data"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "xtype": "ComboBox",
                                                    "listeners": {
                                                        "|select": "function (combo, record, index)\n{\n  _this.grid.getDataSource().reload(); \n}",
                                                        "|render": "function (_self)\n{\n  _this.langCombo=_self;\n}"
                                                    },
                                                    "valueField": "lang",
                                                    "displayField": "ldisp",
                                                    "width": 200,
                                                    "typeAhead": false,
                                                    "editable": false,
                                                    "mode": "local",
                                                    "triggerAction": "all",
                                                    "emptyText": "Select Language",
                                                    "selectOnFocus": true,
                                                    "|xns": "Roo.form",
                                                    "items": [
                                                        {
                                                            "xtype": "SimpleStore",
                                                            "|xns": "Roo.data",
                                                            "*prop": "store",
                                                            "listeners": {},
                                                            "|fields": "['lang', 'ldisp']",
                                                            "|data": "[                                                [ 'zh_HK' , '\\u7E41\\u4E2D - Trad. Chin. (HK)' ],                         [ 'zh_CN', '\\u7C21\\u4E2D - Simp. Chin.' ]                     ]"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "|xns": "Roo.Toolbar",
                                                    "xtype": "Fill"
                                                },
                                                {
                                                    "listeners": {
                                                        "click": "function (_self, e)\n{\n    new Pman.Download({\n        grid: _this.grid\n    \n    });\n}"
                                                    },
                                                    "text": "Download",
                                                    "xtype": "Button",
                                                    "|xns": "Roo.Toolbar"
                                                }
                                            ]
                                        },
                                        {
                                            "xtype": "ColumnModel",
                                            "header": "Name",
                                            "width": 150,
                                            "dataIndex": "colname",
                                            "|renderer": "function(v,x,r) {                         var c = '#666';                         if (r.get('updated') < r.get('origupdated')) {                             c = 'red';                         }                                                  return '<div style=\"color:'+c+'\";>' +r.get('tableid')+ ':' + v + '</div>';                                              }",
                                            "listeners": {},
                                            "|xns": "Roo.grid",
                                            "*prop": "colModel[]"
                                        },
                                        {
                                            "xtype": "ColumnModel",
                                            "header": "Original",
                                            "width": 300,
                                            "dataIndex": "origtxt",
                                            "|renderer": "function(v,x,r) {                         var c = '#666';                         if (r.get('updated') < r.get('origupdated')) {                             c = 'red';                         }                         return '<div style=\"color:' + c+ '\">' +                                  Ext.util.Format.htmlEncode(v) + '</div>';                                              }",
                                            "listeners": {},
                                            "|xns": "Roo.grid",
                                            "*prop": "colModel[]"
                                        },
                                        {
                                            "*prop": "colModel[]",
                                            "dataIndex": "reset_tx",
                                            "header": "Reset",
                                            "width": 50,
                                            "xtype": "ColumnModel",
                                            "|renderer": "function(v,x,r) {    \n    return  '<img src=\"' + rootURL + '/Pman/templates/images/edit-clear.gif' + '\" width=\"16\" height=\"16\">';\n}",
                                            "|xns": "Roo.grid"
                                        },
                                        {
                                            "*prop": "colModel[]",
                                            "dataIndex": "txt",
                                            "header": "Translated (Click to Edit)",
                                            "width": 150,
                                            "xtype": "ColumnModel",
                                            "|renderer": "function(v,x,r) {                                                   var c = '#666';                         if (r.get('updated') < r.get('origupdated')) {                             c = 'red';                         }                                                  return '<div style=\"color:' + c+ '\">' + Ext.util.Format.htmlEncode(v) + '</div>';                     }",
                                            "|xns": "Roo.grid",
                                            "items": [
                                                {
                                                    "xtype": "GridEditor",
                                                    "*prop": "editor",
                                                    "|xns": "Roo.grid",
                                                    "listeners": {},
                                                    "items": [
                                                        {
                                                            "xtype": "TextField",
                                                            "*prop": "field",
                                                            "|xns": "Roo.form",
                                                            "listeners": {}
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "listeners": {
                                "|activate": "function() {\n    _this.langpanel = this;\n    if (_this.langgrid) {\n        _this.langgrid.ds.load({});\n    }\n}"
                            },
                            "background": true,
                            "fitContainer": true,
                            "fitToframe": true,
                            "region": "center",
                            "tableName": "i18n",
                            "title": "Languages and Countries",
                            "xtype": "GridPanel",
                            "|xns": "Roo",
                            "items": [
                                {
                                    "listeners": {
                                        "|render": "function() \n{\n    _this.langgrid = this; \n    //_this.dialog = Pman.Dialog.FILL_IN\n    if (_this.langpanel.active) {\n       this.ds.load({});\n    }\n}",
                                        "afteredit": "function (e)\n{\n    var saveRec  = function(rec)\n    {\n        var g = _this.grid;\n\n        //g.getView().el.mask('Saving');\n        Ext.Ajax.request({\n            url : baseURL + '/Roo/I18n.php',\n            method: 'POST',\n            params : {\n                id : rec.get('id'),\n                lval : rec.get('lval')\n            },\n            success : function()\n            {\n                //g.getView().el.unmask();\n                //g.getDataSource().reload();\n            },\n            failure : function()\n            {\n                Ext.Msg.alert(\"Error\", \"There was a problem saving the data - try reloading\");\n               // g.getView().el.unmask();\n            }\n            \n    });\n        };\n    \n    saveRec.defer(1000, _this, [ e.record ]);\n}",
                                        "beforeedit": "function(e) {\n    console.log('beforeedit');\n    //if (e.record.get('origtxt').indexOf('<') > -1) {\n                       // console.log(\"HTML EDITOR!!\");\n             \n            //    return false;\n            //}\n            if (e.record.get('lval').replace(/\\s+/, '').length) {\n                return true;\n            }\n            \n            \n            var tl = _this.langgridCombo.getValue();\n          \n            tl = (tl == 'zh_HK') ? 'zh-TW' : tl; \n            tl = tl.replace('_', '-');\n            var rec = e.record;\n            \n            \n            \n            Pman.gtranslate(e.record.get('lval_en'), 'en', tl, function(result) { \n                if (typeof(result) == 'object') { //error\n                    return; \n                   }\n                \n                if (_this.grid.activeEditor) {\n                    _this.grid.activeEditor.setValue(result);\n                } else {\n                    rec.set('lval',result);\n                    //_this.saveRec(rec);\n                }\n\n                //\n                \n                \n                //console.log(result.translation);\n            });\n            \n           \n            \n            return true;\n        } ",
                                        "cellclick": "function (_self, rowIndex, columnIndex, e)\n{\n    if(_this.langgrid.colModel.getDataIndex(columnIndex) !== 'is_active'){\n        return;\n    }\n    \n    var s = _this.langgrid.ds.getAt(rowIndex);\n    \n    if(!s || s.data.id * 1 < 0){\n        return;\n    }\n    \n    s.data.is_active = s.data.is_active ? 0 : 1;\n    \n    s.data.commit();\n    \n    \n}"
                                    },
                                    "*prop": "grid",
                                    "autoExpandColumn": "lval",
                                    "clicksToEdit": 1,
                                    "loadMask": true,
                                    "xtype": "EditorGrid",
                                    "|xns": "Roo.grid",
                                    "items": [
                                        {
                                            "listeners": {
                                                "beforeload": "function (_self, options)\n{\n   options  =options ||  {};\n   options.params =options.params|| {};\n   options.params.ltype = _this.langtypeCombo.getValue();\n   options.params.inlang = _this.langgridCombo.getValue();\n   options.params['query[_with_en]'] = 1;\n   if (!options.params.ltype.length || !options.params.inlang.length) {\n       return false;\n   }\n   \n   options.params.limit = 9999;\n   \n}"
                                            },
                                            "*prop": "dataSource",
                                            "remoteSort": true,
                                            "xtype": "Store",
                                            "|sortInfo": "{ field : 'lkey', direction: 'ASC' }",
                                            "|xns": "Roo.data",
                                            "items": [
                                                {
                                                    "*prop": "proxy",
                                                    "xtype": "HttpProxy",
                                                    "method": "GET",
                                                    "|url": "baseURL + '/Roo/i18n.php'",
                                                    "|xns": "Roo.data"
                                                },
                                                {
                                                    "|xns": "Roo.data",
                                                    "xtype": "JsonReader",
                                                    "totalProperty": "total",
                                                    "root": "data",
                                                    "*prop": "reader",
                                                    "id": "id",
                                                    "|fields": "[\n    {\n        'name': 'id',\n        'type': 'int'\n    },\n    {\n        'name': 'ltype',\n        'type': 'string'\n    },\n    {\n        'name': 'lkey',\n        'type': 'string'\n    },\n    {\n        'name': 'inlang',\n        'type': 'string'\n    },\n    {\n        'name': 'lval',\n        'type': 'string'\n    }\n]"
                                                }
                                            ]
                                        },
                                        {
                                            "*prop": "toolbar",
                                            "xtype": "Toolbar",
                                            "|xns": "Roo",
                                            "items": [
                                                {
                                                    "listeners": {
                                                        "|render": "function (_self)\n{\n  _this.langtypeCombo = _self;\n}",
                                                        "|select": "function (combo, record, index)\n{\n  _this.langgrid.getDataSource().reload(); \n}"
                                                    },
                                                    "displayField": "lval",
                                                    "editable": false,
                                                    "emptyText": "Select Translation of",
                                                    "mode": "local",
                                                    "selectOnFocus": true,
                                                    "triggerAction": "all",
                                                    "typeAhead": false,
                                                    "valueField": "lkey",
                                                    "width": 200,
                                                    "xtype": "ComboBox",
                                                    "|xns": "Roo.form",
                                                    "items": [
                                                        {
                                                            "*prop": "store",
                                                            "xtype": "SimpleStore",
                                                            "|data": "[\n   [ 'l', 'Language Names' ],\n   [ 'c', 'Country Names' ],\n    [ 'm', 'Currency Names' ]\n]",
                                                            "|fields": "['lkey','lval']",
                                                            "|xns": "Roo.data"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "listeners": {
                                                        "|select": "function (combo, record, index)\n{\n  _this.langgrid.getDataSource().reload(); \n}",
                                                        "|render": "function (_self)\n{\n  _this.langgridCombo=_self;\n}"
                                                    },
                                                    "displayField": "ldisp",
                                                    "editable": false,
                                                    "emptyText": "Select Language",
                                                    "mode": "local",
                                                    "selectOnFocus": true,
                                                    "triggerAction": "all",
                                                    "typeAhead": false,
                                                    "valueField": "lang",
                                                    "width": 200,
                                                    "xtype": "ComboBox",
                                                    "|xns": "Roo.form",
                                                    "items": [
                                                        {
                                                            "xtype": "SimpleStore",
                                                            "|xns": "Roo.data",
                                                            "*prop": "store",
                                                            "listeners": {},
                                                            "|fields": "['lang', 'ldisp']",
                                                            "|data": "[                                                [ 'zh_HK' , '\\u7E41\\u4E2D - Trad. Chin. (HK)' ],                         [ 'zh_CN', '\\u7C21\\u4E2D - Simp. Chin.' ]                     ]"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "*prop": "colModel[]",
                                            "dataIndex": "lkey",
                                            "header": "Code",
                                            "width": 50,
                                            "xtype": "ColumnModel",
                                            "|renderer": "function(v) { return String.format('{0}', v); }",
                                            "|xns": "Roo.grid"
                                        },
                                        {
                                            "*prop": "colModel[]",
                                            "dataIndex": "lval_en",
                                            "header": "English",
                                            "width": 150,
                                            "xtype": "ColumnModel",
                                            "|renderer": "function(v) { return String.format('{0}', v); }",
                                            "|xns": "Roo.grid"
                                        },
                                        {
                                            "*prop": "colModel[]",
                                            "dataIndex": "lval",
                                            "header": "Translation",
                                            "width": 200,
                                            "xtype": "ColumnModel",
                                            "|renderer": "function(v) { return String.format('{0}', v); }",
                                            "|xns": "Roo.grid",
                                            "items": [
                                                {
                                                    "xtype": "GridEditor",
                                                    "*prop": "editor",
                                                    "|xns": "Roo.grid",
                                                    "listeners": {},
                                                    "items": [
                                                        {
                                                            "xtype": "TextField",
                                                            "*prop": "field",
                                                            "|xns": "Roo.form",
                                                            "listeners": {}
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "*prop": "colModel[]",
                                            "dataIndex": "is_active",
                                            "header": "Active?",
                                            "width": 150,
                                            "xtype": "ColumnModel",
                                            "|renderer": "function(v,x,r) { \n\n    return '<img class=\"x-grid-check-icon' + (v*1 ? '-checked' : '')  + '\" src=\"' + Roo.BLANK_IMAGE_URL + '\"/>';\n                                        \n    \n}",
                                            "|xns": "Roo.grid"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ],
    "permname": "Admin.Translations",
    "modOrder": "950"
}