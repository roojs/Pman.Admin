{
    "name" : "Pman.Tab.AdminNotify",
    "parent" : "Pman.Tab.AdminWatchNotify",
    "title" : "Pman.Tab.AdminNotify",
    "path" : "/home/edward/gitlive/Pman.Admin/Pman.Tab.AdminNotify.bjs",
    "permname" : "",
    "modOrder" : "001",
    "items" : [
        {
            "listeners" : {
                "|activate" : "function() {\n    _this.panel = this;\n    if (_this.grid) {\n        _this.grid.footer.onClick('first');\n    }\n    \n}"
            },
            "fitToframe" : true,
            "background" : true,
            "region" : "center",
            "title" : "Current Notifications",
            "xtype" : "GridPanel",
            "fitContainer" : true,
            "$ xns" : "Roo",
            "tableName" : "core_notify",
            "items" : [
                {
                    "listeners" : {
                        "|render" : "function() \n{\n    _this.grid = this; \n    //_this.dialog = Pman.Dialog.FILL_IN\n    if (_this.panel.active) {\n       this.footer.onClick('first');\n    }\n}"
                    },
                    "autoExpandColumn" : "person_id_name",
                    "xtype" : "Grid",
                    "loadMask" : true,
                    "$ xns" : "Roo.grid",
                    "* prop" : "grid",
                    "items" : [
                        {
                            "listeners" : {
                                "beforeload" : "function (_self, options)\n{\n    if (!_this.toggleBtn.pressed) {\n        options.params['event_id'] = 0;\n    }\n    if (!_this.personCombo) {\n        return false;\n    }\n    var p = _this.personCombo.getValue();\n    if (p*1) { \n        options.params.person_id = p;\n    }\n    \n}"
                            },
                            "xtype" : "Store",
                            "remoteSort" : true,
                            "$ sortInfo" : "{ field : 'act_when', direction: 'DESC' }",
                            "$ xns" : "Roo.data",
                            "* prop" : "dataSource",
                            "items" : [
                                {
                                    "$ url" : "baseURL + '/Roo/core_notify.php'",
                                    "method" : "GET",
                                    "xtype" : "HttpProxy",
                                    "$ xns" : "Roo.data",
                                    "* prop" : "proxy"
                                },
                                {
                                    "id" : "id",
                                    "root" : "data",
                                    "xtype" : "JsonReader",
                                    "$ xns" : "Roo.data",
                                    "$ fields" : "[\n    {\n        'name': 'id',\n        'type': 'int'\n    },\n    {\n        'name': 'act_when',\n        'type': 'date',\n        'dateFormat': 'Y-m-d'\n    },\n    {\n        'name': 'onid',\n        'type': 'int'\n    },\n    {\n        'name': 'ontable',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id',\n        'type': 'int'\n    },\n    {\n        'name': 'msgid',\n        'type': 'string'\n    },\n    {\n        'name': 'sent',\n        'type': 'date',\n        'dateFormat': 'Y-m-d'\n    },\n    {\n        'name': 'event_id',\n        'type': 'int'\n    },\n    {\n        'name': 'person_id_id',\n        'type': 'int'\n    },\n    {\n        'name': 'person_id_office_id',\n        'type': 'int'\n    },\n    {\n        'name': 'person_id_name',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_phone',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_fax',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_email',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_company_id',\n        'type': 'int'\n    },\n    {\n        'name': 'person_id_role',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_active',\n        'type': 'int'\n    },\n    {\n        'name': 'person_id_remarks',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_passwd',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_owner_id',\n        'type': 'int'\n    },\n    {\n        'name': 'person_id_lang',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_no_reset_sent',\n        'type': 'int'\n    },\n    {\n        'name': 'person_id_action_type',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_project_id',\n        'type': 'int'\n    },\n    {\n        'name': 'person_id_deleted_by',\n        'type': 'int'\n    },\n    {\n        'name': 'person_id_deleted_dt',\n        'type': 'date'\n    },\n    {\n        'name': 'event_id_id',\n        'type': 'int'\n    },\n    {\n        'name': 'event_id_person_name',\n        'type': 'string'\n    },\n    {\n        'name': 'event_id_event_when',\n        'type': 'date'\n    },\n    {\n        'name': 'event_id_action',\n        'type': 'string'\n    },\n    {\n        'name': 'event_id_ipaddr',\n        'type': 'string'\n    },\n    {\n        'name': 'event_id_on_id',\n        'type': 'int'\n    },\n    {\n        'name': 'event_id_on_table',\n        'type': 'string'\n    },\n    {\n        'name': 'event_id_person_id',\n        'type': 'int'\n    },\n    {\n        'name': 'event_id_remarks',\n        'type': 'string'\n    }\n]",
                                    "* prop" : "reader",
                                    "totalProperty" : "total"
                                }
                            ]
                        },
                        {
                            "pageSize" : 25,
                            "xtype" : "PagingToolbar",
                            "emptyMsg" : "No core_notify found",
                            "$ xns" : "Roo",
                            "displayInfo" : true,
                            "displayMsg" : "Displaying core_notify{0} - {1} of {2}",
                            "* prop" : "footer"
                        },
                        {
                            "xtype" : "Toolbar",
                            "$ xns" : "Roo",
                            "* prop" : "toolbar",
                            "items" : [
                                {
                                    "listeners" : {
                                        "render" : "function (_self)\n{\n   _this.personCombo = _self;\n}",
                                        "select" : "function (combo, record, index)\n{\n   _this.grid.footer.onClick('first');\n}"
                                    },
                                    "listWidth" : 400,
                                    "triggerAction" : "all",
                                    "forceSelection" : true,
                                    "selectOnFocus" : true,
                                    "pageSize" : 20,
                                    "displayField" : "person_id_name",
                                    "emptyText" : "Select person",
                                    "hiddenName" : "id",
                                    "minChars" : 2,
                                    "valueField" : "person_id",
                                    "xtype" : "ComboBox",
                                    "allowBlank" : true,
                                    "editable" : true,
                                    "width" : 300,
                                    "$ xns" : "Roo.form",
                                    "name" : "name",
                                    "qtip" : "Select core_notify",
                                    "queryParam" : "query[person_id_name]",
                                    "tpl" : "<div class=\"x-grid-cell-text x-btn button\"><b>{person_id_name}</b> {person_id_email}</div>",
                                    "loadingText" : "Searching...",
                                    "items" : [
                                        {
                                            "listeners" : {
                                                "|beforeload" : "function (_self, o){\n    o.params = o.params || {};\n    o.params._distinct='person_id';\n    o.params._columns='person_id,person_id_name,person_id_email';\n    o.params['!person_id_name'] = '';\n    \n    // set more here\n}\n"
                                            },
                                            "xtype" : "Store",
                                            "remoteSort" : true,
                                            "$ sortInfo" : "{ direction : 'ASC', field: 'person_id_name' }",
                                            "$ xns" : "Roo.data",
                                            "* prop" : "store",
                                            "items" : [
                                                {
                                                    "$ url" : "baseURL + '/Roo/core_notify.php'",
                                                    "method" : "GET",
                                                    "xtype" : "HttpProxy",
                                                    "$ xns" : "Roo.data",
                                                    "* prop" : "proxy"
                                                },
                                                {
                                                    "id" : "id",
                                                    "root" : "data",
                                                    "xtype" : "JsonReader",
                                                    "$ xns" : "Roo.data",
                                                    "$ fields" : "[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"ontable\",\"type\":\"string\"}]",
                                                    "* prop" : "reader",
                                                    "totalProperty" : "total"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "xtype" : "Fill",
                                    "$ xns" : "Roo.Toolbar"
                                },
                                {
                                    "listeners" : {
                                        "|click" : "function()\n{\n    Pman.genericDelete(_this, 'core_notify'); \n}\n        "
                                    },
                                    "text" : "Delete",
                                    "xtype" : "Button",
                                    "cls" : "x-btn-text-icon",
                                    "$ icon" : "rootURL + '/Pman/templates/images/trash.gif'",
                                    "$ xns" : "Roo.Toolbar"
                                },
                                {
                                    "listeners" : {
                                        "toggle" : "function (_self, pressed)\n{\n    this.setText(pressed ? \"Hide Completed\" : \"Show Completed\");\n    _this.grid.footer.onClick('first');\n}",
                                        "render" : "function (_self)\n{\n    _this.toggleBtn = _self;\n}"
                                    },
                                    "text" : "Show Completed",
                                    "enableToggle" : true,
                                    "xtype" : "Button",
                                    "$ xns" : "Roo.Toolbar"
                                }
                            ]
                        },
                        {
                            "xtype" : "ColumnModel",
                            "sortable" : true,
                            "header" : "id#",
                            "width" : 50,
                            "$ renderer" : "function(v) { return String.format('{0}', v ); }",
                            "$ xns" : "Roo.grid",
                            "* prop" : "colModel[]",
                            "dataIndex" : "id"
                        },
                        {
                            "xtype" : "ColumnModel",
                            "sortable" : true,
                            "header" : "Method",
                            "width" : 200,
                            "$ renderer" : "function(v,x,r) \n{ \n    var vv = (typeof(r.data.evtype_align) != 'undefined' && r.data.evtype_align) ? r.data.evtype_align : v;\n    return String.format('{0}', vv ); \n}",
                            "$ xns" : "Roo.grid",
                            "* prop" : "colModel[]",
                            "dataIndex" : "evtype"
                        },
                        {
                            "xtype" : "ColumnModel",
                            "sortable" : true,
                            "header" : "Act when",
                            "width" : 150,
                            "$ renderer" : "function(v) { return String.format('{0}', v ? v.format('d/M/Y H:i:s') : ''); }",
                            "$ xns" : "Roo.grid",
                            "* prop" : "colModel[]",
                            "dataIndex" : "act_when"
                        },
                        {
                            "xtype" : "ColumnModel",
                            "sortable" : true,
                            "header" : "Sent",
                            "width" : 150,
                            "$ renderer" : "function(v,x,r) {\n    if (r.data.event_id *1 == 0) {\n        return '';\n    }\n     return String.format('{0}', v ? v.format('d/M/Y H:i:s') : '');\n  }",
                            "$ xns" : "Roo.grid",
                            "* prop" : "colModel[]",
                            "dataIndex" : "sent"
                        },
                        {
                            "xtype" : "ColumnModel",
                            "header" : "Ontable",
                            "width" : 150,
                            "$ renderer" : "function(v,x,r) { return String.format('{0}:{1}', v,r.data.onid); }",
                            "$ xns" : "Roo.grid",
                            "* prop" : "colModel[]",
                            "dataIndex" : "ontable"
                        },
                        {
                            "xtype" : "ColumnModel",
                            "header" : "Who to notify",
                            "width" : 100,
                            "$ renderer" : "function(v,x,r) {\n     return String.format('{0} <u>&lt;{1}&gt;</u>', v, r.data.person_id_email); \n }",
                            "$ xns" : "Roo.grid",
                            "* prop" : "colModel[]",
                            "dataIndex" : "person_id_name"
                        },
                        {
                            "xtype" : "ColumnModel",
                            "header" : "Triggered by",
                            "width" : 100,
                            "$ renderer" : "function(v,x,r) {\n     return String.format(\n            '{0} : {1} {2}', \n            r.data.trigger_event_id_on_table, \n            r.data.trigger_event_id_on_id, \n            r.data.trigger_event_id_remarks\n        ); \n }",
                            "$ xns" : "Roo.grid",
                            "* prop" : "colModel[]",
                            "dataIndex" : "trigger_event_id"
                        },
                        {
                            "xtype" : "ColumnModel",
                            "width" : 200,
                            "header" : "Msgid",
                            "$ renderer" : "function(v) { return String.format('{0}', v); }",
                            "$ xns" : "Roo.grid",
                            "* prop" : "colModel[]",
                            "dataIndex" : "msgid"
                        },
                        {
                            "xtype" : "ColumnModel",
                            "header" : "Event",
                            "width" : 300,
                            "$ renderer" : "function(v) { return String.format('<span qtip=\"{0}\">{0}</span>', v); }",
                            "$ xns" : "Roo.grid",
                            "* prop" : "colModel[]",
                            "dataIndex" : "event_id_remarks"
                        }
                    ]
                }
            ]
        }
    ]
}