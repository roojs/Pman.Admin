{
 "items" : [
  {
   "$ xns" : "Roo",
   "Boolean modal" : true,
   "closable" : false,
   "collapsible" : false,
   "height" : 400,
   "items" : [
    {
     "$ xns" : "Roo.layout",
     "* prop" : "center",
     "String tabPosition" : "top",
     "xtype" : "Region"
    },
    {
     "$ xns" : "Roo.panel",
     "String title" : "Staff Details",
     "items" : [
      {
       "$ url" : "baseURL + '/Roo/core_person'",
       "$ xns" : "Roo.form",
       "Number labelWidth" : 120,
       "items" : [
        {
         "$ xns" : "Roo.form",
         "allowBlank" : true,
         "fieldLabel" : "Name",
         "name" : "name",
         "width" : 250,
         "xtype" : "TextField"
        },
        {
         "$ xns" : "Roo.form",
         "allowBlank" : false,
         "fieldLabel" : "Email",
         "name" : "email",
         "width" : 250,
         "xtype" : "TextField"
        },
        {
         "$ xns" : "Roo.form",
         "fieldLabel" : "Role / Position",
         "name" : "role",
         "width" : 250,
         "xtype" : "TextField"
        },
        {
         "$ xns" : "Roo.form",
         "fieldLabel" : "Phone",
         "name" : "phone",
         "width" : 150,
         "xtype" : "TextField"
        },
        {
         "$ xns" : "Roo.form",
         "name" : "company_id",
         "xtype" : "Hidden"
        },
        {
         "$ xns" : "Roo.form",
         "allowBlank" : true,
         "displayField" : "name",
         "editable" : false,
         "emptyText" : "Department / Office",
         "fieldLabel" : "Department / Office",
         "forceSelection" : true,
         "hiddenName" : "office_id",
         "items" : [
          {
           "$ sortInfo" : "{ direction : 'ASC', field: 'id' }",
           "$ xns" : "Roo.data",
           "* prop" : "store",
           "items" : [
            {
             "$ url" : "baseURL + '/Roo/core_office'",
             "$ xns" : "Roo.data",
             "* prop" : "proxy",
             "method" : "GET",
             "xtype" : "HttpProxy"
            },
            {
             "$ fields" : "[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"}]",
             "$ xns" : "Roo.data",
             "* prop" : "reader",
             "id" : "id",
             "root" : "data",
             "totalProperty" : "total",
             "xtype" : "JsonReader"
            }
           ],
           "listeners" : {
            "|beforeload" : [
             "function (_self, o){",
             "    o.params = o.params || {};",
             "    var coid = _this.form.findField('company_id').getValue();",
             "    o.params.company_id = coid;",
             "}",
             ""
            ]
           },
           "remoteSort" : true,
           "xtype" : "Store"
          }
         ],
         "listWidth" : 400,
         "listeners" : {
          "beforequery" : [
           "function (combo, query, forceAll, cancel, e)",
           "{",
           "        var coid = _this.form.findField('company_id').getValue();",
           "        if (coid < 1 ) {",
           "            Roo.MessageBox.alert(\"Error\", \"Select An Company First\");",
           "            return false;",
           "        }",
           "}"
          ]
         },
         "loadingText" : "Searching...",
         "minChars" : 2,
         "name" : "office_id_name",
         "pageSize" : 20,
         "qtip" : "Select Office",
         "queryParam" : "query[name]",
         "selectOnFocus" : true,
         "tpl" : "<div class=\"x-grid-cell-text x-btn button\"><b>{name}</b> </div>",
         "triggerAction" : "all",
         "typeAhead" : true,
         "valueField" : "id",
         "width" : 250,
         "xtype" : "ComboBox"
        },
        {
         "$ xns" : "Roo.form",
         "Boolean checked" : true,
         "String fieldLabel" : "Active",
         "String inputValue" : 1,
         "String name" : "active",
         "String valueOff" : 0,
         "xtype" : "Checkbox"
        },
        {
         "$ xns" : "Roo.form",
         "name" : "id",
         "xtype" : "Hidden"
        },
        {
         "$ xns" : "Roo.form",
         "Number labelWidth" : 200,
         "String legend" : "Change / Set Password",
         "String/Object/Function style" : "width:370px",
         "items" : [
          {
           "$ xns" : "Roo.form",
           "fieldLabel" : "New password",
           "name" : "passwd1",
           "string inputType" : "password",
           "width" : 150,
           "xtype" : "SecurePass"
          },
          {
           "$ xns" : "Roo.form",
           "String inputType" : "password",
           "allowBlank" : true,
           "fieldLabel" : "Password (type again to confirm)",
           "name" : "passwd2",
           "width" : 150,
           "xtype" : "TextField"
          },
          {
           "$ xns" : "Roo.form",
           "Boolean checked" : true,
           "String fieldLabel" : "Secure passwords",
           "String inputValue" : 1,
           "String name" : "secure_password",
           "String valueOff" : 0,
           "listeners" : {
            "check" : [
             "function (_self, checked)",
             "{",
             "    this.form.findField('passwd1').insecure = false;",
             "        ",
             "    if(!checked){",
             "        this.form.findField('passwd1').insecure = true;",
             "    }",
             "}"
            ]
           },
           "xtype" : "Checkbox"
          }
         ],
         "xtype" : "FieldSet"
        }
       ],
       "listeners" : {
        "|actioncomplete" : [
         "function(_self,action)",
         "{",
         "    if (action.type == 'setdata') {",
         "        _this.dialog.layout.getRegion('center').showPanel(0);",
         "       //_this.dialog.el.mask(\"Loading\");",
         "       if ( _this.data.id* 1 > 0) { ",
         "            this.load({ method: 'GET', params: { '_id' : _this.data.id }});",
         "            return;",
         "        }",
         "        this.findField('company_id').setValue(Pman.Login.authUser.company_id);",
         "       return;",
         "    }",
         "    if (action.type == 'load') {",
         "        _this.dialog.el.unmask();",
         "        return;",
         "    }",
         "    if (action.type =='submit') {",
         "    ",
         "        _this.dialog.el.unmask();",
         "        _this.dialog.hide();",
         "    ",
         "         if (_this.callback) {",
         "            _this.callback.call(_this, _this.form.getValues());",
         "         }",
         "         _this.form.reset();",
         "         return;",
         "    }",
         "}",
         ""
        ],
        "|rendered" : [
         "function (form)",
         "{",
         "    _this.form= form;",
         "}",
         ""
        ]
       },
       "method" : "POST",
       "style" : "margin:10px;",
       "xtype" : "Form"
      }
     ],
     "region" : "center",
     "xtype" : "Content"
    },
    {
     "$ xns" : "Roo.panel",
     "background" : true,
     "fitContainer" : true,
     "fitToframe" : true,
     "items" : [
      {
       "$ xns" : "Roo.grid",
       "* prop" : "grid",
       "autoExpandColumn" : "data",
       "items" : [
        {
         "$ sortInfo" : "{ field : 'name', direction: 'ASC' }",
         "$ xns" : "Roo.data",
         "* prop" : "dataSource",
         "items" : [
          {
           "$ url" : "baseURL + '/Roo/core_person_settings'",
           "$ xns" : "Roo.data",
           "* prop" : "proxy",
           "method" : "GET",
           "xtype" : "HttpProxy"
          },
          {
           "$ xns" : "Roo.data",
           "* prop" : "reader",
           "id" : "id",
           "root" : "data",
           "totalProperty" : "total",
           "xtype" : "JsonReader"
          }
         ],
         "listeners" : {
          "beforeload" : [
           "function (_self, o)",
           "{",
           "  ",
           "    o.params = o.params ? o.params : {};",
           "    o.params.person_id =  _this.form.findField('id').getValue();",
           "    ",
           "   ",
           "}"
          ]
         },
         "remoteSort" : true,
         "xtype" : "Store"
        },
        {
         "$ xns" : "Roo",
         "* prop" : "footer",
         "displayInfo" : true,
         "displayMsg" : "Displaying Settings  {0} - {1} of {2}",
         "emptyMsg" : "No Settings Found",
         "pageSize" : 25,
         "xtype" : "PagingToolbar"
        },
        {
         "$ xns" : "Roo",
         "* prop" : "toolbar",
         "items" : [
          {
           "$ xns" : "Roo.Toolbar",
           "xtype" : "Fill"
          },
          {
           "$ icon" : "rootURL + '/Pman/templates/images/trash.gif'",
           "$ xns" : "Roo.Toolbar",
           "cls" : "x-btn-text-icon",
           "listeners" : {
            "|click" : [
             "function()",
             "{",
             "     Pman.genericDelete(_this, 'core_person_settings'); ",
             "}",
             "        "
            ]
           },
           "text" : "Delete",
           "xtype" : "Button"
          }
         ],
         "xtype" : "Toolbar"
        },
        {
         "$ xns" : "Roo.grid",
         "* prop" : "colModel[]",
         "dataIndex" : "scope",
         "header" : "Module",
         "sortable" : true,
         "width" : 120,
         "xtype" : "ColumnModel"
        },
        {
         "$ renderer" : "function(v) { return String.format('{0}', v); }",
         "$ xns" : "Roo.grid",
         "* prop" : "colModel[]",
         "dataIndex" : "description",
         "header" : "Description",
         "sortable" : true,
         "width" : 150,
         "xtype" : "ColumnModel"
        },
        {
         "$ renderer" : "function(v) { return String.format('{0}', v); }",
         "$ xns" : "Roo.grid",
         "* prop" : "colModel[]",
         "dataIndex" : "data",
         "header" : "Value",
         "sortable" : true,
         "width" : 200,
         "xtype" : "ColumnModel"
        },
        {
         "$ xns" : "Roo.grid",
         "* prop" : "sm",
         "listeners" : {
          "afterselectionchange" : [
           "function (_self)",
           "{",
           "    // load project members.",
           "}"
          ]
         },
         "singleSelect" : true,
         "xtype" : "RowSelectionModel"
        }
       ],
       "listeners" : {
        "|render" : [
         "function() ",
         "{",
         "    _this.grid = this; ",
         "    //_this.dialog = Pman.Dialog.FILL_IN",
         "    if (_this.panel.active) {",
         "       this.footer.onClick('first');",
         "    }",
         "}"
        ],
        "|rowdblclick" : [
         "function (_self, rowIndex, e)",
         "{",
         "    if (!_this.dialog) {",
         "         return;",
         "     }",
         "    _this.dialog.show( this.getDataSource().getAt(rowIndex).data, function() {",
         "        _this.grid.footer.onClick('refresh');",
         "    }); ",
         "}",
         ""
        ]
       },
       "loadMask" : true,
       "xtype" : "Grid"
      }
     ],
     "listeners" : {
      "|activate" : [
       "function() {",
       "    _this.panel = this;",
       " ",
       "    if (_this.grid) {",
       "        _this.grid.footer.onClick('first');",
       "    }",
       "}"
      ]
     },
     "region" : "center",
     "title" : "System Settings",
     "xtype" : "Grid"
    },
    {
     "$ xns" : "Roo.panel",
     "Boolean fitToFrame" : true,
     "background" : true,
     "fitContainer" : true,
     "items" : [
      {
       "$ xns" : "Roo.grid",
       "* prop" : "grid",
       "autoExpandColumn" : "user_agent",
       "items" : [
        {
         "$ sortInfo" : "{ field : 'last_access_dt', direction: 'DESC' }",
         "$ xns" : "Roo.data",
         "* prop" : "dataSource",
         "items" : [
          {
           "$ url" : "baseURL + '/Roo/core_person_window'",
           "$ xns" : "Roo.data",
           "* prop" : "proxy",
           "method" : "GET",
           "xtype" : "HttpProxy"
          },
          {
           "$ xns" : "Roo.data",
           "* prop" : "reader",
           "id" : "id",
           "root" : "data",
           "totalProperty" : "total",
           "xtype" : "JsonReader"
          }
         ],
         "listeners" : {
          "beforeload" : [
           "function (_self, o)",
           "{",
           "  ",
           "    o.params = o.params ? o.params : {};",
           "    o.params.person_id =  _this.form.findField('id').getValue();",
           "    ",
           "   ",
           "}"
          ]
         },
         "remoteSort" : true,
         "xtype" : "Store"
        },
        {
         "$ xns" : "Roo",
         "* prop" : "footer",
         "displayInfo" : true,
         "displayMsg" : "Displaying Sessions  {0} - {1} of {2}",
         "emptyMsg" : "No Settings Found",
         "pageSize" : 25,
         "xtype" : "PagingToolbar"
        },
        {
         "$ xns" : "Roo",
         "* prop" : "toolbar",
         "items" : [
          {
           "$ xns" : "Roo.Toolbar",
           "xtype" : "Fill"
          },
          {
           "$ icon" : "rootURL + '/Pman/templates/images/trash.gif'",
           "$ xns" : "Roo.Toolbar",
           "cls" : "x-btn-text-icon",
           "listeners" : {
            "|click" : [
             "function()",
             "{",
             "      new Pman.Request({",
             "        method : 'POST',",
             "        url : baseURL + '/Roo/Core_person_window',",
             "        params : {",
             "            status : 'KILL',",
             "            person_id : _this.data.id",
             "        },",
             "        success : function()",
             "        {",
             "            _this.sesgrid.footer.onClick('refresh');",
             "        }",
             "    });",
             "}",
             "        "
            ]
           },
           "text" : "Force Logout of User",
           "xtype" : "Button"
          }
         ],
         "xtype" : "Toolbar"
        },
        {
         "$ xns" : "Roo.grid",
         "* prop" : "colModel[]",
         "dataIndex" : "app_id",
         "header" : "Application",
         "sortable" : true,
         "width" : 120,
         "xtype" : "ColumnModel"
        },
        {
         "$ renderer" : "function(v) { return String.format('{0}', v); }",
         "$ xns" : "Roo.grid",
         "* prop" : "colModel[]",
         "dataIndex" : "ip",
         "header" : "IP Address",
         "sortable" : true,
         "width" : 80,
         "xtype" : "ColumnModel"
        },
        {
         "$ renderer" : [
          "function(v) { ",
          "    return String.format('{0}', v ? v.format(\"d/M H:i\")  : ''); ",
          "}"
         ],
         "$ xns" : "Roo.grid",
         "* prop" : "colModel[]",
         "dataIndex" : "login_dt",
         "header" : "Logged in",
         "sortable" : true,
         "width" : 80,
         "xtype" : "ColumnModel"
        },
        {
         "$ renderer" : [
          "function(v) { ",
          "    return String.format('{0}', v ? v.format(\"d/M H:i\")  : ''); ",
          "}"
         ],
         "$ xns" : "Roo.grid",
         "* prop" : "colModel[]",
         "dataIndex" : "last_access_dt",
         "header" : "Last Access",
         "sortable" : true,
         "width" : 80,
         "xtype" : "ColumnModel"
        },
        {
         "$ renderer" : "function(v) { return String.format('{0}', v); }",
         "$ xns" : "Roo.grid",
         "* prop" : "colModel[]",
         "dataIndex" : "status",
         "header" : "Status",
         "sortable" : true,
         "width" : 40,
         "xtype" : "ColumnModel"
        },
        {
         "$ renderer" : "function(v) { return String.format('{0}', v); }",
         "$ xns" : "Roo.grid",
         "* prop" : "colModel[]",
         "dataIndex" : "window_id",
         "header" : "Session WID",
         "sortable" : true,
         "width" : 80,
         "xtype" : "ColumnModel"
        },
        {
         "$ renderer" : "function(v) { return String.format('{0}', v); }",
         "$ xns" : "Roo.grid",
         "* prop" : "colModel[]",
         "dataIndex" : "user_agent",
         "header" : "Browser",
         "sortable" : true,
         "width" : 150,
         "xtype" : "ColumnModel"
        }
       ],
       "listeners" : {
        "|render" : [
         "function() ",
         "{",
         "    _this.sesgrid = this; ",
         "    //_this.dialog = Pman.Dialog.FILL_IN",
         "    if (_this.sespanel.active) {",
         "       this.footer.onClick('first');",
         "    }",
         "}"
        ]
       },
       "loadMask" : true,
       "xtype" : "Grid"
      }
     ],
     "listeners" : {
      "|activate" : [
       "function() {",
       "    _this.sespanel = this;",
       " ",
       "   ",
       " if (_this.sesgrid) {",
       "        _this.sesgrid.footer.onClick('first');",
       "    }",
       "}"
      ]
     },
     "region" : "center",
     "title" : "User Sessions",
     "xtype" : "Grid"
    },
    {
     "$ xns" : "Roo",
     "* prop" : "buttons[]",
     "listeners" : {
      "click" : [
       "function (_self, e)",
       "{",
       "    _this.dialog.hide();",
       "}"
      ]
     },
     "text" : "Cancel",
     "xtype" : "Button"
    },
    {
     "$ xns" : "Roo",
     "* prop" : "buttons[]",
     "listeners" : {
      "click" : [
       "function (_self, e)",
       "{",
       "    // do some checks?",
       "     if (_this.form.findField('passwd1')) {",
       "        ",
       "        var p1 = _this.form.findField('passwd1').getValue();",
       "        var p2 = _this.form.findField('passwd2').getValue();",
       "        ",
       "        if (_this.sendAfterSave && !p1.length) {",
       "            Roo.MessageBox.alert(\"Error\", \"You must create a password to send introduction mail\");",
       "            return;",
       "        }",
       "        ",
       "        if (Pman.Login.authUser.id < 0 && !p1.length) {",
       "            Roo.MessageBox.alert(\"Error\", \"You must create a password for the admin account\");",
       "            return;",
       "        }",
       "        ",
       "        ",
       "        if (p1.length || p2.length) {",
       "            if (p1 != p2) {",
       "                Roo.MessageBox.alert(\"Error\", \"Passwords do not match\");",
       "                return;",
       "            }",
       "        }",
       "        ",
       "    ",
       "    }",
       "    ",
       " ",
       "    _this.form.doAction(\"submit\");",
       "",
       "}"
      ]
     },
     "text" : "Save",
     "xtype" : "Button"
    },
    {
     "$ xns" : "Roo",
     "background" : false,
     "fitContainer" : true,
     "fitToframe" : true,
     "items" : [
      {
       "$ xns" : "Roo.grid",
       "* prop" : "grid",
       "autoExpandColumn" : "name",
       "items" : [
        {
         "$ xns" : "Roo",
         "* prop" : "toolbar",
         "items" : [
          {
           "$ xns" : "Roo.form",
           "listeners" : {
            "keyup" : [
             "function (_self, e)",
             "{",
             "       _this.beatgrid.view.refresh(true);",
             "    ",
             "",
             "}"
            ],
            "render" : [
             "function (_self)",
             "{",
             "  _this.beatfilter = _self;",
             "}"
            ]
           },
           "width" : 100,
           "xtype" : "TextField"
          },
          {
           "$ icon" : "rootURL + '/Pman/templates/images/edit-clear.gif'",
           "$ xns" : "Roo.Toolbar",
           "cls" : "x-btn-icon",
           "listeners" : {
            "|click" : [
             "function (_self, e)",
             "{",
             "    _this.beatfilter.setValue('');",
             "     _this.beatgrid.view.refresh(true);",
             "    ",
             "}"
            ]
           },
           "xtype" : "Button"
          },
          {
           "$ xns" : "Roo.Toolbar",
           "xtype" : "Fill"
          },
          {
           "$ xns" : "Roo.Toolbar",
           "listeners" : {
            "click" : [
             "function (_self, e)",
             "{",
             "    ",
             "    ",
             "    _this.beatgrid.ds.each(function(rec) {",
             "            rec.set('member', 0);",
             "            rec.commit();",
             "           ",
             "    ",
             "",
             "    });",
             "",
             "}"
            ]
           },
           "text" : "Reset",
           "xtype" : "Button"
          },
          {
           "$ xns" : "Roo.Toolbar",
           "listeners" : {
            "click" : [
             "function (_self, e)",
             "{",
             "    ",
             "     // determine if we need to show it..",
             "     var val =_this.beatfilter.getValue().toLowerCase();",
             "     var re = false;",
             "     if (val.length) {",
             "         re = new RegExp(val);",
             "        ",
             "     }",
             "     ",
             "    ",
             "    ",
             "    _this.beatgrid.ds.each(function(rec) {",
             "        if (!re) {        ",
             "            rec.set('member',  1);",
             "            rec.commit();",
             "            return;",
             "        }",
             "         var hg = rec.data.hgroup.toLowerCase();",
             "         var n = rec.data.name.toLowerCase();",
             "          if (!hg.match(re) && !n.match(re)) {",
             "            return; // do not select it..",
             "         }",
             "    ",
             "          rec.set('member',  1);",
             "        rec.commit();",
             "           ",
             "    ",
             "",
             "    });",
             "",
             "}"
            ]
           },
           "text" : "Select All",
           "xtype" : "Button"
          }
         ],
         "xtype" : "Toolbar"
        },
        {
         "$ sortInfo" : "{ field : 'hgroup,name', direction: 'ASC' }",
         "$ xns" : "Roo.data",
         "* prop" : "dataSource",
         "items" : [
          {
           "$ url" : "baseURL + '/Roo/core_group.php'",
           "$ xns" : "Roo.data",
           "* prop" : "proxy",
           "method" : "GET",
           "xtype" : "HttpProxy"
          },
          {
           "$ fields" : [
            "[",
            "",
            "]"
           ],
           "$ xns" : "Roo.data",
           "* prop" : "reader",
           "id" : "id",
           "root" : "data",
           "totalProperty" : "total",
           "xtype" : "JsonReader"
          }
         ],
         "listeners" : {
          "beforeload" : [
           "function (_self, options)",
           "{",
           "    options.params = options.params || {};",
           "    options.params.parent_id_name = 'News Beat';",
           "    ",
           "    options.params['!hgroup'] = '';",
           "    options.params['is_journalist_db'] = 1;",
           "    options.params['query[with_empty_member]'] = 1; // this sets member=0 (blank list..)",
           "    ",
           "    ",
           "  ",
           "    options.params.limit = 999;",
           "}"
          ],
          "load" : [
           "function (_self, records, options)",
           "{",
           "    var beatsField = _this.form.findField('beats');",
           "    // beat list is loaded..",
           "    ",
           "    // if no beat is available => clear beats field",
           "    if (!records.length) {",
           "       ",
           "        beatsField.setValue('');",
           "        return;",
           "    }",
           "    ",
           "    ",
           "    ",
           "   ",
           "    var beats = beatsField.getValue();    ",
           "",
           "    if (beats.length) {",
           "",
           "        var crecs = beats.split(',');",
           "        ",
           "        var avail = [];",
           "        ",
           "        // tick the available beats ",
           "        Roo.each(records, function(r) {",
           "        ",
           "            if ( crecs.indexOf(''+r.data.id) > -1) {",
           "                r.set('member', 1);",
           "            }",
           "            avail.push(''+r.data.id);",
           "            ",
           "        });",
           "        ",
           "        // remove the unavailable beats from beats field",
           "        var crec_new = [];",
           "        Roo.each(crecs, function(r) {",
           "            if (avail.indexOf(r) > -1) {",
           "                crec_new.push(r);",
           "            }",
           "        });",
           "      ",
           "        beatsField.setValue( crec_new.join(','));",
           "        ",
           "        ",
           "    }",
           "}"
          ]
         },
         "remoteSort" : true,
         "xtype" : "Store"
        },
        {
         "$ renderer" : [
          "function(v) {  ",
          "    var state = v> 0 ?  '-checked' : '';",
          "",
          "    return '<img class=\"x-grid-check-icon' + state + '\" src=\"' + Roo.BLANK_IMAGE_URL + '\"/>';",
          "                ",
          " }"
         ],
         "$ xns" : "Roo.grid",
         "* prop" : "colModel[]",
         "dataIndex" : "member",
         "header" : "Select",
         "width" : 75,
         "xtype" : "ColumnModel"
        },
        {
         "$ renderer" : "function(v,x,r) { return String.format('{0}', v ? v : ''); }",
         "$ xns" : "Roo.grid",
         "* prop" : "colModel[]",
         "dataIndex" : "display_name",
         "header" : "Group",
         "xtype" : "ColumnModel"
        }
       ],
       "listeners" : {
        "cellclick" : [
         "function (_self, ri, ci , e)",
         "{",
         "   if (ci != 0) {return; }",
         "   ",
         "    var rec = this.ds.getAt(ri);",
         "    rec.set('member', (rec.data.member * 1) ? 0 : 1);",
         "    rec.commit();",
         "",
         "    ",
         "    var cfg = [];",
         "    ",
         "    _this.beatgrid.ds.each(function(r) {",
         "        if (r.data.member*1 < 1) {",
         "            return;",
         "        }",
         "        cfg.push(r.data.id);",
         "    });",
         "",
         "    _this.form.findField('beats').setValue( cfg.join(','));",
         "}"
        ],
        "rowclass" : [
         "function (gridview, rowcfg)",
         "{",
         "     //Roo.log(rowcfg);",
         "     // determine if we need to show it..",
         "     var val=_this.beatfilter.getValue().toLowerCase();",
         "     rowcfg.rowClass= '';",
         "     if (!val.length) {",
         "        return; // always show..",
         "     }",
         "     var match = false;",
         "     var hg = rowcfg.record.data.hgroup.toLowerCase();",
         "     var n = rowcfg.record.data.name.toLowerCase();     ",
         "     var re = new RegExp(val);",
         "     ",
         "     if (hg.match(re) || n.match(re)) {",
         "        return; // display it..",
         "     }",
         "     //Roo.log('display none');",
         "     if (rowcfg.record.data.member * 1 > 0) {",
         "       // return;",
         "     }",
         "     rowcfg.rowClass = 'display-none';",
         "     ",
         "     ",
         "}"
        ],
        "|render" : [
         "function() ",
         "{",
         "    _this.beatgrid = this;",
         "}"
        ]
       },
       "loadMask" : true,
       "xtype" : "Grid"
      }
     ],
     "listeners" : {
      "render" : [
       "function (_self)",
       "{",
       "    _this.beatsPanel = this;",
       "}"
      ]
     },
     "region" : "center",
     "tableName" : "pressrelease_category",
     "title" : "Beats",
     "xtype" : "GridPanel",
     "| showHide" : [
      "function() {",
      "    _this.dialog.layout.getRegion('center').hidePanel(this);",
      "    var pt = _this.form.getValues().package_type;",
      "    if (pt != 'specialist') {",
      "        return;",
      "    }",
      "    _this.dialog.layout.getRegion('center').unhidePanel(this);",
      "    _this.beatgrid.ds.load({});",
      "    ",
      "    ",
      "}"
     ]
    }
   ],
   "resizable" : false,
   "title" : "Edit / Create Staff Details",
   "width" : 650,
   "xtype" : "LayoutDialog"
  }
 ],
 "modOrder" : "001",
 "name" : "Pman.Dialog.AdminPerson",
 "named_strings" : {
  "active_fieldLabel" : "4d3d769b812b6faa6b76e1a8abaece2d",
  "email_fieldLabel" : "ce8ae9da5b7cd6c3df2929543a9af92d",
  "name_fieldLabel" : "49ee3087348e8d44e1feda1917443987",
  "office_id_name_emptyText" : "be5f40c0d2692cf4e9f8be8d389737a5",
  "office_id_name_fieldLabel" : "be5f40c0d2692cf4e9f8be8d389737a5",
  "office_id_name_loadingText" : "1243daf593fa297e07ab03bf06d925af",
  "office_id_name_qtip" : "c373dd4bd4ba0b5d3e0c7522c5629880",
  "passwd1_fieldLabel" : "3544848f820b9d94a3f3871a382cf138",
  "passwd2_fieldLabel" : "315fce99b77b7f392bf68d5eb14f88c7",
  "phone_fieldLabel" : "bcc254b55c4a1babdf1dcb82c207506b",
  "role_fieldLabel" : "8a25a3ae30ab6e8ceb5b8c4009a3336f",
  "secure_password_fieldLabel" : "abb1d799e06329cb0c38276ea918300b"
 },
 "parent" : "",
 "path" : "/home/leon/gitlive/web.MediaOutreach/Pman/Admin/Pman.Dialog.AdminPerson.bjs",
 "permname" : "",
 "strings" : {
  "03937134cedab9078be39a77ee3a48a0" : "Group",
  "0e6c5b4e85b8cc4a30d236ebe9ccc9b8" : "Displaying Sessions  {0} - {1} of {2}",
  "1243daf593fa297e07ab03bf06d925af" : "Searching...",
  "2b0d7f748b64304e6657207cb03cd8f2" : "Edit / Create Staff Details",
  "315fce99b77b7f392bf68d5eb14f88c7" : "Password (type again to confirm)",
  "3544848f820b9d94a3f3871a382cf138" : "New password",
  "45e96c0a422ce8a1a6ec1bd5eb9625c6" : "Select All",
  "47acf620062218fa3d0cf65f34904ad6" : "Beats",
  "49ee3087348e8d44e1feda1917443987" : "Name",
  "4d3d769b812b6faa6b76e1a8abaece2d" : "Active",
  "526d688f37a86d3c3f27d0c5016eb71d" : "Reset",
  "5b8c99dad1893a85076709b2d3c2d2d0" : "IP Address",
  "662de0725ac8055bff7edae51fbf3c78" : "No Settings Found",
  "689202409e48743b914713f96d93947c" : "Value",
  "6b446bfa60f46e619a691f253177ec9a" : "Force Logout of User",
  "7573b7fd7836c9118dbfb69f3abf3858" : "Change / Set Password",
  "7e17f8478e121357b78646ca5b5d5ac9" : "Displaying Settings  {0} - {1} of {2}",
  "8a25a3ae30ab6e8ceb5b8c4009a3336f" : "Role / Position",
  "8c5e39fcbdc7303f11a578a76e32f7f5" : "Logged in",
  "91d522fe68c9ac8ac16026371421018f" : "Last Access",
  "a5da1d5de4f3a80e2acf5227283c630d" : "Staff Details",
  "abb1d799e06329cb0c38276ea918300b" : "Secure passwords",
  "b5a7adde1af5c87d7fd797b6245c2a39" : "Description",
  "bcc254b55c4a1babdf1dcb82c207506b" : "Phone",
  "be5f40c0d2692cf4e9f8be8d389737a5" : "Department / Office",
  "c373dd4bd4ba0b5d3e0c7522c5629880" : "Select Office",
  "c9cc8cce247e49bae79f15173ce97354" : "Save",
  "ce8ae9da5b7cd6c3df2929543a9af92d" : "Email",
  "db6c58b8634d4607cdcb13bb181ea2ff" : "User Sessions",
  "e0626222614bdee31951d84c64e5e9ff" : "Select",
  "e4709a73a287a5f033f5b1b5142cb74d" : "System Settings",
  "e498749f3c42246d50b15c81c101d988" : "Application",
  "e55f75a29310d7b60f7ac1d390c8ae42" : "Module",
  "ea4788705e6873b424c65e91c2846b19" : "Cancel",
  "ec53a8c4f07baed5d8825072c89799be" : "Status",
  "ef15fd2f45e6bb5ce57587895ba64f93" : "Browser",
  "f2a6c498fb90ee345d997f888fce3b18" : "Delete",
  "f4a52a00bee9faf2bc6183e0ac12ba12" : "Session WID"
 },
 "title" : ""
}