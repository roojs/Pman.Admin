{
 "name" : "Pman.Tab.AdminEmailTemplates",
 "parent" : "Pman.Tab.Admin",
 "title" : "Manage Email Templates",
 "path" : "/home/edward/gitlive/Pman.Admin/Pman.Tab.AdminEmailTemplates.bjs",
 "permname" : "",
 "modOrder" : "999",
 "strings" : {
  "ec211f7c20af43e742bf2570c3cb84f9" : "Add",
  "c7d299bf3f9e37c77ab646f7e5366696" : "core_email",
  "00d6e06d2f3c092b4f5e1e708a360b0f" : "Displaying Message{0} - {1} of {2}",
  "9076cbba1d9ef79280b4f39e2aa0d115" : "Nothing found",
  "b78a3223503896721cca1303f776159b" : "Title",
  "68b00d723d37122f64da8d9939f836f0" : "BCC Group",
  "9e11143e29a031212f2cdefcf61f39e9" : "View Message",
  "f49559cda3fb906fbd7736f8b8a0e37d" : "Email Template",
  "01bd6a16732dfa2b760dc8566c58afae" : "Download to Excel",
  "4a4a8fe0c6dfb6bd2a41755d15eb6f0b" : "From Name",
  "4ca679a383343ab3d4ca1cd7c91b43f7" : "From Email",
  "5fb63579fc981698f97d55bfecb213ea" : "Copy",
  "f2a6c498fb90ee345d997f888fce3b18" : "Delete",
  "49ee3087348e8d44e1feda1917443987" : "Name"
 },
 "items" : [
  {
   "region" : "center",
   "title" : "Email Template",
   "xtype" : "NestedLayoutPanel",
   "$ xns" : "Roo",
   "items" : [
    {
     "xtype" : "BorderLayout",
     "$ xns" : "Roo",
     "* prop" : "layout",
     "items" : [
      {
       "autoScroll" : false,
       "xtype" : "LayoutRegion",
       "$ xns" : "Roo",
       "split" : true,
       "* prop" : "center"
      },
      {
       "autoScroll" : false,
       "xtype" : "LayoutRegion",
       "$ xns" : "Roo",
       "split" : true,
       "height" : 300,
       "* prop" : "south",
       "titlebar" : true
      },
      {
       "listeners" : {
        "|activate" : "function() {\n    _this.panel = this;\n    if (_this.grid) {\n        _this.grid.footer.onClick('first');\n    }\n}"
       },
       "background" : true,
       "region" : "center",
       "fitToframe" : true,
       "title" : "core_email",
       "xtype" : "GridPanel",
       "fitContainer" : true,
       "$ xns" : "Roo",
       "tableName" : "core_email",
       "items" : [
        {
         "listeners" : {
          "|rowdblclick" : "function (_self, rowIndex, e)\n{\n    if (!_this.dialog) { \n        return;\n        }\n    var data = this.getDataSource().getAt(rowIndex).data;\n    _this.dialog.show( {id : data.id, module : 'core_email'} , function() {\n        _this.grid.footer.onClick('first');\n    }); \n}\n",
          "|render" : "function() \n{\n    _this.grid = this; \n    _this.dialog = Pman.Dialog.CoreEmail;\n    if (_this.panel.active) {\n       _this.grid.footer.onClick('first');\n    }\n}",
          "rowclick" : "function (_self, rowIndex, e)\n{\n   // _this.grid.ds.load({});\n    _this.viewPanel.view.store.load({});\n}"
         },
         "autoExpandColumn" : "subject",
         "xtype" : "Grid",
         "loadMask" : true,
         "$ xns" : "Roo.grid",
         "* prop" : "grid",
         "items" : [
          {
           "xtype" : "RowSelectionModel",
           "singleSelect" : true,
           "$ xns" : "Roo.grid",
           "* prop" : "sm"
          },
          {
           "listeners" : {
            "beforeload" : "function (_self, options)\n{\n    options.params = options.params || {};\n    \n    var s = _this.searchBox.getValue();\n    \n    if(s.length){\n        options.params['search[nameortitle]'] = s;\n    }\n\n}"
           },
           "xtype" : "Store",
           "remoteSort" : true,
           "$ sortInfo" : "{ field : 'name', direction: 'ASC' }",
           "$ xns" : "Roo.data",
           "* prop" : "dataSource",
           "items" : [
            {
             "$ url" : "baseURL + '/Roo/Core_email.php'",
             "method" : "GET",
             "xtype" : "HttpProxy",
             "$ xns" : "Roo.data",
             "* prop" : "proxy"
            },
            {
             "id" : "id",
             "root" : "data",
             "xtype" : "JsonReader",
             "$ fields" : "[\n    {\n        \"name\":\"name\",\n        \"type\":\"string\"\n    },\n    {\n        \"name\":\"subject\",\n        \"type\":\"string\"\n    }\n]",
             "$ xns" : "Roo.data",
             "* prop" : "reader",
             "totalProperty" : "total"
            }
           ]
          },
          {
           "pageSize" : 25,
           "xtype" : "PagingToolbar",
           "emptyMsg" : "Nothing found",
           "$ xns" : "Roo",
           "displayMsg" : "Displaying Message{0} - {1} of {2}",
           "displayInfo" : true,
           "* prop" : "footer",
           "items" : [
            {
             "listeners" : {
              "|click" : "function()\n{\n   \nnew Pman.Download({\n    url : baseURL + '/Roo/Core_email',\n    method : 'GET',\n    params : {\n        csvCols : '*',\n        csvTitles : '*'\n    }\n});\nRoo.MessageBox.alert(\"Notice\", \"Should be downloading now\");\n  \n}\n"
             },
             "text" : "Download to Excel",
             "xtype" : "Button",
             "$ xns" : "Roo.Toolbar"
            }
           ]
          },
          {
           "xtype" : "Toolbar",
           "$ xns" : "Roo",
           "* prop" : "toolbar",
           "items" : [
            {
             "listeners" : {
              "specialkey" : "function (_self, e)\n{\n  _this.grid.footer.onClick('first');\n}",
              "render" : "function (_self)\n{\n    _this.searchBox = _self;\n}"
             },
             "xtype" : "TextField",
             "$ xns" : "Roo.form"
            },
            {
             "listeners" : {
              "click" : "function (_self, e)\n{\n    _this.grid.footer.onClick('first');\n}"
             },
             "xtype" : "Button",
             "cls" : "x-btn-icon",
             "$ icon" : "rootURL + '/Pman/templates/images/search.gif'",
             "$ xns" : "Roo.Toolbar"
            },
            {
             "listeners" : {
              "click" : "function (_self, e)\n{\n    _this.searchBox.setValue('');\r\n    _this.grid.footer.onClick('first');\r\n}"
             },
             "xtype" : "Button",
             "cls" : "x-btn-icon",
             "$ icon" : "rootURL + '/Pman/templates/images/edit-clear.gif'",
             "$ xns" : "Roo.Toolbar"
            },
            {
             "xtype" : "Fill",
             "$ xns" : "Roo.Toolbar"
            },
            {
             "listeners" : {
              "|click" : "function()\n{\n  var sel = _this.grid.selModel.getSelected();\n  if (!sel) {\n        Roo.MessageBox.alert(\"Error\", \"Select a message to copy\");\n        return;\n    }\nnew Pman.Request({\n    url : baseURL + '/Roo/Core_email',\n    method : 'POST',\n    params : {\n        id : sel.data.id,\n        _make_copy : 1\n    },\n    success : function() {\n        _this.grid.footer.onClick('refresh');\n    }\n});\n  \n}\n"
             },
             "text" : "Copy",
             "xtype" : "Button",
             "cls" : "x-btn-text-icon",
             "$ icon" : "Roo.rootURL + 'images/default/dd/drop-add.gif'",
             "$ xns" : "Roo.Toolbar"
            },
            {
             "listeners" : {
              "|click" : "function()\n{\n    if (!_this.dialog) {\n         return;\n         }\n    _this.dialog.show( { id : 0, module : 'core_email' } , function() {\n        _this.grid.footer.onClick('first');\n   }); \n}\n"
             },
             "text" : "Add",
             "xtype" : "Button",
             "cls" : "x-btn-text-icon",
             "$ icon" : "Roo.rootURL + 'images/default/dd/drop-add.gif'",
             "$ xns" : "Roo.Toolbar"
            },
            {
             "xtype" : "Separator",
             "$ xns" : "Roo.Toolbar"
            },
            {
             "listeners" : {
              "|click" : "function()\n{\n    Pman.genericDelete(_this, 'core_email');\n    \n}\n"
             },
             "text" : "Delete",
             "xtype" : "Button",
             "cls" : "x-btn-text-icon",
             "$ icon" : "rootURL + '/Pman/templates/images/trash.gif'",
             "$ xns" : "Roo.Toolbar"
            }
           ]
          },
          {
           "xtype" : "ColumnModel",
           "header" : "Name",
           "width" : 250,
           "$ renderer" : "function(v) { return String.format('{0}', v); }",
           "$ xns" : "Roo.grid",
           "Boolean sortable" : true,
           "* prop" : "cm[]",
           "dataIndex" : "name"
          },
          {
           "xtype" : "ColumnModel",
           "header" : "Title",
           "width" : 300,
           "$ renderer" : "function(v) { return String.format('{0}', v); }",
           "$ xns" : "Roo.grid",
           "Boolean sortable" : true,
           "* prop" : "cm[]",
           "dataIndex" : "subject"
          },
          {
           "xtype" : "ColumnModel",
           "header" : "From Name",
           "width" : 400,
           "$ renderer" : "function(v) { return String.format('{0}', v); }",
           "$ xns" : "Roo.grid",
           "Boolean sortable" : true,
           "* prop" : "cm[]",
           "dataIndex" : "from_name"
          },
          {
           "xtype" : "ColumnModel",
           "width" : 400,
           "header" : "From Email",
           "$ renderer" : "function(v) { return String.format('{0}', v ? v : ''); }",
           "$ xns" : "Roo.grid",
           "Boolean sortable" : true,
           "* prop" : "cm[]",
           "dataIndex" : "from_email"
          },
          {
           "xtype" : "ColumnModel",
           "header" : "BCC Group",
           "width" : 400,
           "$ renderer" : "function(v) { return String.format('{0}', v ? v : ''); }",
           "$ xns" : "Roo.grid",
           "Boolean sortable" : true,
           "* prop" : "cm[]",
           "dataIndex" : "bcc_group_name"
          }
         ]
        }
       ]
      },
      {
       "listeners" : {
        "render" : "function (_self)\n{\n    _this.viewPanel = _self;\n}"
       },
       "autoScroll" : true,
       "fitToFrame" : true,
       "background" : false,
       "region" : "south",
       "title" : "View Message",
       "xtype" : "ContentPanel",
       "fitContainer" : true,
       "$ xns" : "Roo",
       "items" : [
        {
         "listeners" : {
          "preparedata" : "function (_self, data, i, rec)\n{\n   // Roo.log(data);\n    //Roo.apply(data, rec.json);\n}"
         },
         "$ tpl" : "new Roo.DomTemplate({url : rootURL+'/Pman/Crm/domtemplates/crm_mail.html'})",
         "xtype" : "View",
         "$ xns" : "Roo",
         "* prop" : "view",
         "items" : [
          {
           "listeners" : {
            "beforeload" : "function (_self, options)\n{\n    options.params = options.params || {};\n    var p = _this.grid.selModel.getSelected();\n    if (!p || !p.data.id) {\n        this.removeAll();\n        return false;\n    }\n   \n    options.params['id'] = p.data.id;\n \n}",
            "load" : "function (_self, records, options)\n{\n    var p = _this.grid.selModel.getSelected();\n  //  Roo.log(p);\n    if (!p || !p.data.id) {\n        this.removeAll();\n        return false;\n    }\n  /*  \n    new Pman.Request({\n        url : baseURL + '/Roo/crm_action.php',\n        method : 'GET',\n        params : {\n            person_id : p.data.id,\n            sort : 'action_dt',\n            dir : 'DESC'\n        },\n        success : function(res) {\n            if(res.success){\n                var el = _this.cpanel.el.select('.crm-history-content').first();\n                _this.historyTemplate.overwrite(el, res);\n                el.select('.crm-history-log').on('click', Pman.Crm.auditToggle);\n                //Roo.log(res);\n            }\n        },\n        failure : function(e) {\n            //Roo.log(e);\n          _this.grid.ds.load({});\n        }\n        \n    });\n    */\n\n//_this.historyTemplate = new Roo.DomTemplate({url : rootURL+'/Pman/Crm/domtemplates/crm_history.html'})\n\n/*\n  new pman request ([\n  \n  } successs(data)\n       el = _this.elemmnt.select('.services')\n       _this.serviceTemplate.overwite(el, data)\n  */\n}"
           },
           "xtype" : "Store",
           "$ xns" : "Roo.data",
           "* prop" : "store",
           "items" : [
            {
             "$ url" : "baseURL+'/Roo/Core_email.php'",
             "method" : "GET",
             "xtype" : "HttpProxy",
             "$ xns" : "Roo.data",
             "* prop" : "proxy"
            },
            {
             "id" : "id",
             "root" : "data",
             "xtype" : "JsonReader",
             "$ xns" : "Roo.data",
             "* prop" : "reader",
             "totalProperty" : "total"
            }
           ]
          }
         ]
        }
       ]
      }
     ]
    }
   ]
  }
 ]
}