{
 "items" : [
  {
   "$ xns" : "Roo.panel",
   "Boolean background" : true,
   "autoScroll" : true,
   "fitContainer" : true,
   "fitToframe" : true,
   "items" : [
    {
     "$ xns" : "Roo.grid",
     "* prop" : "grid",
     "autoExpandColumn" : "domain",
     "items" : [
      {
       "$ xns" : "Roo",
       "* prop" : "toolbar",
       "items" : [
        {
         "$ xns" : "Roo.Toolbar",
         "text" : "Search",
         "xtype" : "TextItem"
        },
        {
         "$ xns" : "Roo.form",
         "listeners" : {
          "render" : [
           "function (_self)",
           "{",
           "    _this.searchBox = _self;",
           "}"
          ],
          "specialkey" : [
           "function (_self, e)",
           "{",
           "  if (e.getKey() == 13) {",
           "    _this.domainGrid.footer.onClick('first');",
           "  }",
           "}"
          ]
         },
         "xtype" : "TextField"
        },
        {
         "$ icon" : "rootURL + '/Pman/templates/images/search.gif'",
         "$ xns" : "Roo.Toolbar",
         "cls" : "x-btn-icon",
         "listeners" : {
          "|click" : [
           "function (_self, e)",
           "{",
           "_this.domainGrid.footer.onClick('first');",
           "}"
          ]
         },
         "xtype" : "Button"
        },
        {
         "$ icon" : "rootURL + '/Pman/templates/images/edit-clear.gif'",
         "$ xns" : "Roo.Toolbar",
         "cls" : "x-btn-icon",
         "listeners" : {
          "|click" : [
           "function (_self, e)",
           "{",
           "    _this.searchBox.setValue('');",
           "    _this.domainGrid.footer.onClick('first');",
           "}"
          ]
         },
         "xtype" : "Button"
        },
        {
         "$ xns" : "Roo.form",
         "Number width" : 100,
         "allowBlank" : true,
         "displayField" : "value",
         "editable" : false,
         "items" : [
          {
           "$ data" : [
            "[",
            "    ",
            "     [ 'all', 'All' ],",
            "     [ 'valid_mx', \"Valid MX\" ],",
            "     [ 'invalid_mx', \"Invalid MX\" ]",
            "]"
           ],
           "$ fields" : "[ 'key', 'value']",
           "$ xns" : "Roo.data",
           "* prop" : "store",
           "xtype" : "SimpleStore"
          }
         ],
         "listeners" : {
          "|render" : [
           "function (_self)",
           "{",
           "    _this.statusSel = _self;",
           "}"
          ],
          "|select" : [
           "function (combo, record, index)",
           "{",
           "    _this.domainGrid.footer.onClick('first');",
           "}"
          ]
         },
         "mode" : "local",
         "triggerAction" : "all",
         "value" : "all",
         "valueField" : "key",
         "xtype" : "ComboBox"
        },
        {
         "$ xns" : "Roo.form",
         "Number width" : 125,
         "allowBlank" : true,
         "displayField" : "value",
         "editable" : false,
         "items" : [
          {
           "$ data" : [
            "[",
            "     [ 'all', 'All' ],",
            "     [ 'with_references', \"Has References\" ],",
            "     [ 'without_reference', \"No Reference\" ]",
            "]"
           ],
           "$ fields" : "[ 'key', 'value']",
           "$ xns" : "Roo.data",
           "* prop" : "store",
           "xtype" : "SimpleStore"
          }
         ],
         "listeners" : {
          "|render" : [
           "function (_self)",
           "{",
           "    _this.referenceSel = _self;",
           "}"
          ],
          "|select" : [
           "function (combo, record, index)",
           "{",
           "    _this.domainGrid.footer.onClick('first');",
           "}"
          ]
         },
         "mode" : "local",
         "triggerAction" : "all",
         "value" : "all",
         "valueField" : "key",
         "xtype" : "ComboBox"
        },
        {
         "$ xns" : "Roo.Toolbar",
         "listeners" : {
          "|click" : [
           "function()",
           "{",
           "    Pman.Dialog.AdminDomain.show({ id:0 });",
           "}",
           "        "
          ]
         },
         "text" : "Add",
         "xtype" : "Button"
        },
        {
         "$ xns" : "Roo.Toolbar",
         "listeners" : {
          "|click" : [
           "function()",
           "{",
           "    var el = _this.domainGrid.getSelections();",
           "    ",
           "    if(el.length < 1){",
           "        Roo.MessageBox.alert('Error', 'Please select the match first');",
           "        return;",
           "    }",
           "    Pman.Dialog.AdminDomain.show({ id: el[0].id });",
           "",
           "}",
           "        "
          ]
         },
         "text" : "Edit",
         "xtype" : "Button"
        },
        {
         "$ xns" : "Roo.Toolbar",
         "xtype" : "Fill"
        },
        {
         "$ xns" : "Roo.Toolbar",
         "items" : [
          {
           "$ xns" : "Roo.menu",
           "* prop" : "menu",
           "items" : [
            {
             "$ xns" : "Roo.menu",
             "listeners" : {
              "click" : [
               "function (_self, e)",
               "{",
               "    Roo.MessageBox.confirm(\"Confirm\", \"Are you sure you want to delete all matching domains?\", function(r) {",
               "        if (r!='yes') {",
               "            return;",
               "        }",
               "        ",
               "        var batchDeleteStart = 0;",
               "        var batchDeleteLimit = 25;",
               "        ",
               "        params = {",
               "            '_columns' : 'id',",
               "            'limit' : batchDeleteLimit",
               "        };",
               "        ",
               "        params = _this.grid.ds.setLoadParams(params);",
               "        ",
               "        var ids = [];",
               "        var total = 0;",
               "        ",
               "        var fetchBatch = function() {",
               "            //params['start'] = batchDeleteStart;",
               "            ",
               "            new Pman.Request({",
               "                url : baseURL + '/Roo/core_domain',",
               "                method : 'GET',",
               "                params : params,",
               "                success : function(res)",
               "                {",
               "                    ids = [];",
               "                    Roo.each(res.data, function(domain) {",
               "                        ids.push(domain.id);",
               "                    });",
               "                    if (total == 0) {",
               "                        total = res.total;",
               "                    }",
               "                    if(res.total == 0) {",
               "                        Roo.MessageBox.alert('Error', 'No matching domain');",
               "                        return;",
               "                    }",
               "                    deleteBatch();",
               "                }",
               "            });",
               "        }",
               "        ",
               "        var deleteBatch = function() {",
               "            new Pman.Request({",
               "                url : baseURL + '/Roo/clipping_domain',",
               "                method : 'POST',",
               "                params : {",
               "                    '_delete_ids' : ids.join(',')",
               "                },",
               "                success : function(res)",
               "                {",
               "                    batchDeleteStart += batchDeleteLimit;",
               "                    Roo.MessageBox.updateProgress(batchDeleteStart / total,",
               "                    batchDeleteStart + \" / \" + total + \" domains deleted\");",
               "                    if(batchDeleteStart >= total) {",
               "                        Roo.MessageBox.hide();",
               "                        _this.grid.footer.onClick('first');",
               "                        return;",
               "                    }",
               "                    fetchBatch();",
               "                }",
               "            });",
               "        };",
               "        ",
               "        Roo.MessageBox.progress(\"Deleting matching domains\", \"Starting\");",
               "        fetchBatch();",
               "    });",
               "}"
              ],
              "render" : [
               "function (_self)",
               "{",
               "    _this.deleteAllMatch = this;",
               "}"
              ]
             },
             "text" : "Delete All Match",
             "xtype" : "Item"
            }
           ],
           "listeners" : {
            "beforeshow" : [
             "function (_self)",
             "{",
             "    _this.deleteAllMatch.hide();",
             "    if(_this.statusSel.getValue() == 'unused') {",
             "        _this.deleteAllMatch.show();",
             "    }",
             "}"
            ]
           },
           "xtype" : "Menu"
          }
         ],
         "text" : "Bulk Update",
         "xtype" : "Button"
        },
        {
         "$ xns" : "Roo.Toolbar",
         "listeners" : {
          "|click" : [
           "function()",
           "{",
           "    Pman.Delete.simple(_this.domainPanel, 'core_domain');",
           "}"
          ]
         },
         "text" : "Delete",
         "xtype" : "Button"
        }
       ],
       "xtype" : "Toolbar"
      },
      {
       "$ sortInfo" : "{ field : 'domain', direction: 'ASC' }",
       "$ xns" : "Roo.data",
       "* prop" : "dataSource",
       "items" : [
        {
         "$ url" : "baseURL + '/Roo/Core_domain.php'",
         "$ xns" : "Roo.data",
         "* prop" : "proxy",
         "method" : "GET",
         "xtype" : "HttpProxy"
        },
        {
         "$ fields" : [
          "[",
          "    {",
          "        'name': 'id',",
          "        'type': 'int'",
          "    },",
          "    {",
          "        'name': 'name',",
          "        'type': 'string'",
          "    },",
          "    {",
          "        'name': 'match_regex',",
          "        'type': 'string'",
          "    }",
          "]"
         ],
         "$ xns" : "Roo.data",
         "* prop" : "reader",
         "id" : "id",
         "root" : "data",
         "totalProperty" : "total",
         "xtype" : "JsonReader"
        }
       ],
       "listeners" : {
        "beforeload" : [
         "function (_self, options)",
         "{",
         "    options.params = options.params || {};",
         "    options.params['query[domain]'] = _this.searchBox.getValue();",
         "    options.params['_status'] = _this.statusSel.getValue();",
         "    options.params['_with_reference_count'] = 1;",
         "    options.params['_reference_status'] = _this.referenceSel.getValue();",
         "}"
        ]
       },
       "remoteSort" : true,
       "xtype" : "Store",
       "| setLoadParams" : [
        "function() {",
        "",
        "}"
       ]
      },
      {
       "$ xns" : "Roo",
       "* prop" : "footer",
       "Boolean displayInfo" : true,
       "String displayMsg" : "Displaying email domains {0} - {1} of {2}",
       "String emptyMsg" : "No email domain found",
       "pageSize" : 50,
       "xtype" : "PagingToolbar"
      },
      {
       "$ renderer" : [
        "function(v, x, r) {",
        "    var format = \"{0}\";",
        "    if(",
        "        !(r.data.has_mx * 1) && ",
        "        r.data.mx_updated.format('Y-m-d H:i:s') !== '1000-01-01 00:00:00'",
        "    ) {",
        "        format = \"<span style='color:red;'>{0}</span>\";",
        "        var noMxDt = r.data.no_mx_dt.format('Y-m-d H:i:s'); ",
        "        if(noMxDt !== '1000-01-01 00:00:00') {",
        "            format = \"<span style='color:red;' qtip ='No MX since \" + noMxDt + \"'>{0}</span>\";",
        "        }",
        "    }",
        "    return String.format(format, v);",
        "}"
       ],
       "$ xns" : "Roo.grid",
       "* prop" : "colModel[]",
       "dataIndex" : "domain",
       "header" : "Domain",
       "sortable" : true,
       "width" : 200,
       "xtype" : "ColumnModel"
      },
      {
       "$ renderer" : [
        "function(v) {",
        "    return String.format('{0}', v ? v.format(\"Y-m-d H:i:s\")  : ''); ",
        "}",
        ""
       ],
       "$ xns" : "Roo.grid",
       "* prop" : "colModel[]",
       "dataIndex" : "mx_updated",
       "header" : "MX Last Updated",
       "sortable" : true,
       "width" : 120,
       "xtype" : "ColumnModel"
      },
      {
       "$ renderer" : [
        "function(v) {",
        "    return String.format('{0}', v); ",
        "}",
        ""
       ],
       "$ xns" : "Roo.grid",
       "* prop" : "colModel[]",
       "dataIndex" : "person_reference_count",
       "header" : "No. of references",
       "sortable" : true,
       "width" : 100,
       "xtype" : "ColumnModel"
      }
     ],
     "listeners" : {
      "|render" : [
       "function() ",
       "{",
       "    _this.domainGrid = this; ",
       "    if (_this.domainPanel.active) {",
       "       this.footer.onClick('first');",
       "    }",
       "}"
      ],
      "|rowdblclick" : [
       "function (_self, rowIndex, e)",
       "{",
       "   var el = _this.domainGrid.ds.getAt(rowIndex);",
       "",
       "   Pman.Dialog.AdminDomain.show({ id: el.id }, function() {",
       "        _this.domainGrid.footer.onClick('first');",
       "      });",
       "}",
       ""
      ]
     },
     "loadMask" : true,
     "xtype" : "Grid"
    }
   ],
   "listeners" : {
    "|activate" : [
     "function() {",
     "    _this.domainPanel = this;",
     "}"
    ]
   },
   "region" : "center",
   "tableName" : "core_domain",
   "title" : "Email Domains",
   "xtype" : "Grid"
  }
 ],
 "modOrder" : "9998",
 "name" : "Pman.Tab.AdminDomain",
 "parent" : "Pman.Tab.Admin",
 "path" : "/home/leon/gitlive/web.MediaOutreach/Pman/Admin/Pman.Tab.AdminDomain.bjs",
 "permname" : "",
 "strings" : {
  "13348442cc6a27032d2b4aa28b75a5d3" : "Search",
  "24e7d4799ecdbe08c291691323305006" : "Delete All Match",
  "6aa48f150b0d29138ab848a1d4e6792c" : "No. of references",
  "79ebd90228ae192321ca47951612dea5" : "Displaying email domains {0} - {1} of {2}",
  "7dce122004969d56ae2e0245cb754d35" : "Edit",
  "8f00afba26677da2da0b00ec8daf22bd" : "Email Domains",
  "9732d2a193579388e6d9138368554966" : "MX Last Updated",
  "996d8bde90930fead44cf1d6989e532a" : "No email domain found",
  "a181a603769c1f98ad927e7367c7aa51" : "all",
  "b18d852fa0d2465fe38b05b96dd5b736" : "Bulk Update",
  "eae639a70006feff484a39363c977e24" : "Domain",
  "ec211f7c20af43e742bf2570c3cb84f9" : "Add",
  "f2a6c498fb90ee345d997f888fce3b18" : "Delete"
 },
 "title" : "Domain"
}