{
 "name" : "Pman.Tab.PressReleaseDistribution",
 "parent" : "Pman.Tab.ReleaseJournalistTab",
 "title" : "Pman.Tab.PressReleaseDistribution",
 "path" : "/home/alan/gitlive/web.MediaOutreach/Pman/PressRelease/Pman.Tab.PressReleaseDistribution.bjs",
 "permname" : "",
 "modOrder" : "800",
 "strings" : {
  "6bd6beac1da76b2d2a9c3b7914ba034c" : "Publication",
  "f77f8c0e4a05a384a886554d76cbd6b1" : "Import XLS",
  "f2a6c498fb90ee345d997f888fce3b18" : "Delete",
  "326185f4d4dfc0ef9df05d4de4ad5b5e" : "Displaying pressrelease_contact{0} - {1} of {2}",
  "754e1e134bc554a0af39749edbb59b9f" : "Job Title",
  "8cd0d0c99b062b3d22e8c7188ba33ab2" : "Show All",
  "99f1888871e14cbf8bca1cd8db21e400" : "No pressrelease_contact found",
  "b1b8216a01f7fec51609d6ab603a2678" : "Publication Scope",
  "7dce122004969d56ae2e0245cb754d35" : "Edit",
  "8e00ca0fe378bbb01e656c1e7b4c4cff" : "Select Job Type",
  "9d9547134d119ba7ea10eb67db6da7c6" : "Job Type",
  "ce8ae9da5b7cd6c3df2929543a9af92d" : "Email",
  "ed75712b0eb1913c28a3872731ffd48d" : "Duplicate",
  "12e28060a861b508cec510804b77a5ef" : "Journalist Contacts",
  "ec211f7c20af43e742bf2570c3cb84f9" : "Add",
  "080041a74a22e43b60dd8592afc6ee22" : "Select Media Type",
  "1243daf593fa297e07ab03bf06d925af" : "Searching...",
  "3c1df4260ce594cb5594696461087f2f" : "Select Country",
  "6ab9375e8f8108c11f21ab43d913e79c" : "Tel.",
  "20db0bfeecd8fe60533206a2b5e9891a" : "First name",
  "0f3826dedd3d37a53eaa3aaffbc0dc65" : "Publ. Name",
  "bea37067b23b94efbe261d48afe12c39" : "Media List Download",
  "904062c33353866aa5234f35ed29e114" : "Download Results",
  "2750dfebe7e01be17a0aaadf6b5effcc" : "Category Tree",
  "2b2edc156a7f3e035b3d234fee57daf2" : "All Contacts",
  "9475887273d313badb0bd602d137d055" : "Restore Saved Search",
  "21dfb254ef22912f7e12236f245751fe" : "Manage Categories",
  "cee41f552b98c04de1623e556fcf14f0" : "Select Publication Name",
  "59716c97497eb9694541f7c3d37b1a4d" : "Country",
  "5ca219b54399500b176823f866ee1383" : "Media Type",
  "b4e1a66c9679eccc7fa6a5dd36f4bbb8" : "Reload Tree",
  "1f96b7ecf6ec7e9ce1d960453af38752" : "News Beat(s)",
  "a7f0ba4d77215ad8a7ca74781933c94f" : "Family Name",
  "e55458ac9b2afe0910d1ed25115ec02c" : "Right Click on Item to add/edit ",
  "fd8fd9dc60679287f17bb085a8f3752b" : "Show Bad Addresses",
  "55842c6c0d769b6008f3d957b4d0b5cd" : "Save Search",
  "37812357a4cd25b17d95104efe022401" : "Publ. Lang",
  "3a2144c282d31ed1c7d57a7140fcf96d" : "Select Publication Language",
  "5a6c05f48afd958dcb5989bd66ed4783" : "Add / Edit Contacts"
 },
 "items" : [
  {
   "background" : true,
   "region" : "center",
   "title" : "Journalist Contacts",
   "xtype" : "NestedLayoutPanel",
   "$ xns" : "Roo",
   "items" : [
    {
     "xtype" : "BorderLayout",
     "$ xns" : "Roo",
     "* prop" : "layout",
     "items" : [
      {
       "xtype" : "LayoutRegion",
       "width" : 200,
       "$ xns" : "Roo",
       "split" : true,
       "* prop" : "west"
      },
      {
       "xtype" : "LayoutRegion",
       "tabPosition" : "top",
       "$ xns" : "Roo",
       "* prop" : "center"
      },
      {
       "listeners" : {
        "|activate" : "function() {\n    _this.panel = this;\n    if (_this.grid) {\n        _this.grid.footer.onClick('first');\n    }\n}"
       },
       "fitToframe" : true,
       "background" : true,
       "region" : "center",
       "title" : "Add / Edit Contacts",
       "xtype" : "GridPanel",
       "fitContainer" : true,
       "$ xns" : "Roo",
       "tableName" : "pressrelease_contact",
       "items" : [
        {
         "listeners" : {
          "|rowdblclick" : "function (_self, rowIndex, e)\n{\n    if (!_this.dialog) return;\n    _this.dialog.show( this.getDataSource().getAt(rowIndex), function() {\n        _this.grid.footer.onClick('refresh');\n    }); \n}\n",
          "|render" : "function() \n{\n    _this.grid = this; \n    _this.dialog = Pman.Dialog.PressReleaseContact;\n    if (_this.panel.active) {\n       this.footer.onClick('first');\n    }\n}"
         },
         "autoExpandColumn" : "lastname",
         "multiSort" : true,
         "xtype" : "Grid",
         "loadMask" : true,
         "$ xns" : "Roo.grid",
         "* prop" : "grid",
         "items" : [
          {
           "listeners" : {
            "beforeload" : "function (_self, options)\n{\n    this.buildQuery(options);\n     \n    options.params['query[with_failed_flag]'] = 1;\n         \n}"
           },
           "multiSort" : true,
           "remoteSort" : true,
           "xtype" : "Store",
           "$ buildQuery" : "function(options) {\n    options.params =     options.params || {};\n    options.params['query[search_name]'] = _this.searchBox.getValue();\n    \n    \n    var ar = [ 'publication_name', 'publication_lang'  ];\n    var val = '';\n    Roo.each(ar, function(a) {\n        if (typeof( _this[a + '_combo']) == 'undefined') {\n            Roo.log('missing ' + a );\n            return;\n        }\n        val = _this[a + '_combo'].getValue();\n        if ((new String(val)).length > 0) {\n            options.params[a] = val;\n            return;\n        }\n        if (_this[a + '_combo'].el.dom.value == '??') {\n            options.params['search[' + a +']'] = '??';\n        }\n     });\n     options.params['search[role]'] =  _this.role_combo.getValue();  \n     options.params['search[category_media_id]'] =  _this.category_media_id_combo.getValue();  \n     options.params['search[country_ar]'] =  _this.country_ar_combo.getValue();  \n\n     if (_this.show_bad_addr) {\n         options.params['query[bad_only]'] = 1;\n     }\n         \n    \n\n    \n    // has something been selected in the tree..\n    // build members..\n\n\n    try {\n        var mem = {};\n        Roo.each(_this.treepanel.tree.getChecked(), function(n) {\n            var pn = n.parentNode.attributes.id;\n            mem[pn] = mem[pn] || [];\n            mem[pn].push(n.attributes.id);\n        \n        });\n        for (var m in mem) {\n            options.params['query[members]['+ m +']'] = mem[m].join(',');\n        }\n        \n    } catch (e) {\n        Roo.log('error building beat categories..');\n        Roo.log(e);\n    }\n    \n    options.params['query[_with_beats]'] = 1;\n     \n}\n",
           "$ sortInfo" : "{ field : 'lastname', direction: 'ASC' }",
           "$ xns" : "Roo.data",
           "* prop" : "dataSource",
           "items" : [
            {
             "$ url" : "baseURL + '/Roo/pressrelease_contact.php'",
             "method" : "GET",
             "xtype" : "HttpProxy",
             "$ xns" : "Roo.data",
             "* prop" : "proxy"
            },
            {
             "id" : "id",
             "root" : "data",
             "xtype" : "JsonReader",
             "$ xns" : "Roo.data",
             "$ fields" : "[\n    {\n        'name': 'id',\n        'type': 'int'\n    },\n    {\n        'name': 'category_type_id',\n        'type': 'int'\n    },\n    {\n        'name': 'honor',\n        'type': 'string'\n    },\n    {\n        'name': 'name',\n        'type': 'string'\n    },\n    {\n        'name': 'name_alt',\n        'type': 'string'\n    },\n    {\n        'name': 'company_id_name',\n        'type': 'string'\n    },\n    {\n        'name': 'role',\n        'type': 'string'\n    },\n    {\n        'name': 'email',\n        'type': 'string'\n    },\n    {\n        'name': 'email_personal',\n        'type': 'string'\n    },\n    {\n        'name': 'phone',\n        'type': 'string'\n    },\n    {\n        'name': 'fax',\n        'type': 'string'\n    },\n    {\n        'name': 'address',\n        'type': 'string'\n    },\n    {\n        'name': 'category_media_id',\n        'type': 'int'\n    },\n    {\n        'name': 'submission_time',\n        'type': 'string'\n    },\n    {\n        'name': 'media_language',\n        'type': 'string'\n    },\n    {\n        'name': 'url',\n        'type': 'string'\n    },\n    {\n        'name': 'remarks',\n        'type': 'string'\n    }\n]",
             "* prop" : "reader",
             "totalProperty" : "total"
            }
           ]
          },
          {
           "pageSize" : 25,
           "xtype" : "PagingToolbar",
           "emptyMsg" : "No pressrelease_contact found",
           "$ xns" : "Roo",
           "displayInfo" : true,
           "displayMsg" : "Displaying pressrelease_contact{0} - {1} of {2}",
           "* prop" : "footer",
           "items" : [
            {
             "listeners" : {
              "click" : "function (_self, e)\n{\n        Pman.Dialog.PressReleaseSearch.show({}, function(data) {\n            \n        // code from beforeload\n            var o = Roo.decode(data);\n           // Roo.log(data);\n\n            _this.searchBox.setValue(typeof(o['query[search_name]']) =='undefined'  ? '' : o['query[search_name]']);\n            \n            \n            \n            var ar = [ 'publication_name', 'publication_lang' , 'country', 'category_media_id', 'role' ];\n            var val = '';\n            Roo.each(ar, function(a) {\n                if (typeof( _this[a + '_combo']) == 'undefined') {\n                    Roo.log('missing ' + a );\n                    return;\n                }\n                var el = _this[a + '_combo'];\n                // needs more thought...\n                if (typeof(o[a]) == 'undefined') {\n                    el.setValue('');\n                }\n                if (['publication_lang' , 'country', 'category_media_id'].indexOf(a) < 0) {\n                    el.setValue(o[a]);\n                    return;\n                }\n                var d = {};\n                d[a] = o[a];\n                d[a+'_name'] = o[a+'_name'];\n                \n                el.setFromData( d);                // do clever crap...\n\n             });\n            // reset tree???\n            \n            var cid = typeof(o['query[category_id]']) == 'undefined' ? 0 : o['query[category_id]']*1;\n            _this.treepanel.tree.getSelectionModel().clearSelections();\n            if (!cid) {\n                _this.grid.footer.onClick('first');\n                return;\n            }\n            \n            // at this point we have to expand the tree to find the element we need..\n            var ar = o.category_id_parents;\n            ar.push(cid*1);\n            var t =  _this.treepanel.tree;\n            \n            function nodeHasChild(n, id) {\n                var match = false;\n                n.eachChild(function(cn) {\n                   // Roo.log(\"Checking: \" + cn.attributes.id + \" for \" + id);\n                    if ((cn.attributes.id*1) == (id*1)) {\n                        match = cn;\n                        return false;\n                    }\n                });\n              //  Roo.log(\"nodeHasChild \" + id  + \"=\" + (match ? 'Y' : 'N'));\n                return match;\n            }\n            //Roo.log(ar);\n            var runv = 0;\n            function expand_or_select()\n            {\n                \n                runv++;\n                if (runv > 10) {\n                   // Roo.log('oops');\n                    return;\n                }\n                var n = t.root;\n                var expand = false;\n                \n                Roo.each(ar, function(id) {\n                    var cn = nodeHasChild(n,id);\n                    id = id *1;\n                    if (!cn) {\n                        expand = n;\n                        return false;\n                    }\n                    if (id == cid) {\n                        n = cn;\n                        return false;\n                    }\n                    if (!n.isExpanded()) {\n                        expand = n;\n                        return false;\n                    }\n\n                    n = cn;\n                });\n                \n                \n                if (expand) {\n                    //Roo.log('expand');\n                    expand.expand(false, true, function() {\n                        expand_or_select();\n                    });\n                    return;\n                }\n                // n should now contain 'node that we want...'\n                \n                t.getSelectionModel().select(n);\n            \n               _this.grid.footer.onClick('first');  \n            }\n            \n            expand_or_select();\n            // = _this.treepanel.tree.getSelectionModel().\n            // has something been selected in the tree..\n\n        \n        });\n    }"
             },
             "text" : "Restore Saved Search",
             "xtype" : "Button",
             "$ xns" : "Roo.Toolbar"
            },
            {
             "listeners" : {
              "click" : "function (_self, e)\n{\n\n    options = {};\n    \n    \n        // code from beforeload\n    options.params =     options.params || {};\n    \n    options.params['query[search_name]'] = _this.searchBox.getValue();\n    \n    var ar = [ 'publication_name', 'publication_lang' , 'country', 'category_media_id', 'role' ];\n    var val = '';\n    Roo.each(ar, function(a) {\n        if (typeof( _this[a + '_combo']) == 'undefined') {\n            Roo.log('missing ' + a );\n            return;\n        }\n        val = _this[a + '_combo'].getValue();\n        if ((new String(val)).length > 0) {\n            options.params[a] = val;\n            return;\n        }\n        if (_this[a + '_combo'].el.dom.value == '??') {\n            options.params['search[' + a +']'] = '??';\n        }\n     });\n    \n    \n    // has something been selected in the tree..\n    var id = 0;\n    try {\n        id = _this.treepanel.tree.getSelectionModel().getSelectedNode().attributes.id;\n    } catch (e) {}\n    \n    if (!isNaN(id) && id) {\n        options.params['query[category_id]'] = id;\n    }\n    options.params['query[_with_beats]'] = 1;\n    \n    // END from beforeload..\n    \n    Roo.MessageBox.confirm(\"Save Search\", \"Do you want to save this search?\", function(r) {\n        if (r != 'yes') {\n            return;\n        }\n        \n        new Pman.Request({\n            url : baseURL + '/Roo/Pressrelease_search',\n            method : 'POST',\n            params : {\n                data : Roo.encode(options.params),\n                person_id : Pman.Login.authUser.id,\n            }\n        });\n        \n        \n    });\n    \n    \n    \n}"
             },
             "text" : "Save Search",
             "xtype" : "Button",
             "$ xns" : "Roo.Toolbar"
            },
            {
             "listeners" : {
              "click" : "function (_self, e)\n{\n        Pman.Dialog.Image.show({\n            _url : baseURL + '/PressRelease/Import/Journalist'\n        \n        }, function (d) {\n            //Roo.log(d);\n            \n            Pman.Dialog.PressReleaseJournalistImport.show({\n                data:d\n             });\n    \n        });\n}"
             },
             "text" : "Import XLS",
             "xtype" : "Button",
             "$ xns" : "Roo.Toolbar"
            },
            {
             "listeners" : {
              "click" : "function (_self, e)\n{\n          /* csvCols[0] csvCols[1]....    = .... column titles for CSV output\n         * \n         * csvTitles[0], csvTitles[1] ....  = columns to use for CSV output\n         *\n         * sort        = sort column (',' comma delimited)\n         * dir         = sort direction ?? in future comma delimited...\n         * limit       = limit number \n         */\n         if (!Pman.Login.inGroup('Administrators')) {\n            Roo.MesssageBox.alert(\"Sorry\", \"This is only available for adminstrators\");\n            return;\n            \n         }\n        var o = {};\n        _this.grid.ds.buildQuery(o);\n         \n         \n        var params = o.params;\n    \n        var ar = []\n        var i = 0;\n        Roo.each(_this.grid.cm.config, function (o,l) {\n          switch (o.dataIndex) {\n                case 'phone' : \n                    params['csvTitles[' + i +']'] = \"Phone\";\n                    params['csvCols[' + i +']'] = o.dataIndex;\n                    break;\n\n                case 'country' : \n                    params['csvTitles[' + i +']'] = \"Country\";\n                    params['csvCols[' + i +']'] = 'country_name';\n                    break;\n                    \n                default: \n                    params['csvCols[' + i +']'] = o.dataIndex;\n                    params['csvTitles[' + i +']'] = o.header;\n                    break;\n          }\n\n          \n          i++;\n          \n        });\n\n    \n\n        params['csvCols[' + i +']'] = 'phone_mobile';\n        params['csvTitles[' +i  +']'] = \"Mobile\";\n        i++;\n        \n        params['csvCols[' + i +']'] = 'phone_direct';\n        params['csvTitles[' +i  +']'] = \"Direct Line\";\n        i++;\n         \n        params.limit = 9999;\n        params['sort'] = _this.grid.ds.sortOrder[0];\n        params.dir = 'ASC';\n        \n        \n        new Pman.Download({\n            url : baseURL + '/Roo/pressrelease_contact.php',\n            method : 'GET',\n            params : params\n            \n        \n        });\n        Roo.MessageBox.alert(\"Downloading\", \"Your report is downloading\");\n}"
             },
             "text" : "Download Results",
             "xtype" : "Button",
             "$ xns" : "Roo.Toolbar"
            },
            {
             "listeners" : {
              "click" : "function (_self, e)\n{\n         Pman.Dialog.PressReleaseMediaList.show({});\n}"
             },
             "text" : "Media List Download",
             "xtype" : "Button",
             "$ xns" : "Roo.Toolbar"
            }
           ]
          },
          {
           "xtype" : "Toolbar",
           "$ xns" : "Roo",
           "* prop" : "toolbar",
           "items" : [
            {
             "listeners" : {
              "specialkey" : "function (_self, e)\n{\n\n    if (e.getCharCode() == 13) {\n        _this.grid.footer.onClick('first');\n    }\n}",
              "render" : "function (_self)\n{\n  _this.searchBox = _self;\n}"
             },
             "xtype" : "TextField",
             "$ xns" : "Roo.form",
             "width" : 100
            },
            {
             "listeners" : {
              "|click" : "function (_self, e)\n{\n_this.grid.footer.onClick('first');\n}"
             },
             "xtype" : "Button",
             "cls" : "x-btn-icon",
             "$ icon" : "rootURL + '/Pman/templates/images/search.gif'",
             "$ xns" : "Roo.Toolbar",
             "items" : [
              {
               "xtype" : "Menu",
               "$ xns" : "Roo.menu",
               "* prop" : "menu",
               "items" : [
                {
                 "listeners" : {
                  "activate" : "function (_self)\n{\n    _this.show_bad_addr = false;\n    _this.grid.footer.onClick('first');\n}"
                 },
                 "text" : "Show All",
                 "xtype" : "Item",
                 "$ xns" : "Roo.menu"
                },
                {
                 "listeners" : {
                  "activate" : "function (_self)\n{\n    _this.show_bad_addr = true;\n    _this.grid.footer.onClick('first');\n}"
                 },
                 "text" : "Show Bad Addresses",
                 "xtype" : "Item",
                 "$ xns" : "Roo.menu"
                }
               ]
              }
             ]
            },
            {
             "listeners" : {
              "|click" : "function (_self, e)\n{\n    _this.searchBox.setValue('');\n    _this.publication_name_combo.setValue('');\n    _this.publication_lang_combo.setValue('');\n    \n    _this.country_ar_combo.reset();\n    \n    _this.category_media_id_combo.reset();\n    _this.role_combo.reset();      \n\n    // clear the tree..\n    \n     Roo.each(_this.treepanel.tree.getChecked(), function(n) {\n            n.ui.checkbox.checked = false;\n            n.attributes.checked = false;\n      });\n      \n    _this.grid.footer.onClick('first');\n}"
             },
             "xtype" : "Button",
             "cls" : "x-btn-icon",
             "$ icon" : "rootURL + '/Pman/templates/images/edit-clear.gif'",
             "$ xns" : "Roo.Toolbar"
            },
            {
             "listeners" : {
              "render" : "function (_self)\n{\n    _this.publication_name_combo = _self;\n}",
              "beforeselect" : "function (combo, record, index)\n{\n  _this.grid.footer.onClick.defer(100, _this.grid.footer,[ 'first' ]);\n}"
             },
             "alwaysQuery" : false,
             "listWidth" : 200,
             "triggerAction" : "all",
             "forceSelection" : true,
             "selectOnFocus" : true,
             "pageSize" : 25,
             "displayField" : "publication_name",
             "emptyText" : "Publ. Name",
             "minChars" : 2,
             "valueField" : "publication_name",
             "xtype" : "ComboBox",
             "typeAhead" : true,
             "editable" : true,
             "width" : 120,
             "$ xns" : "Roo.form",
             "qtip" : "Select Publication Name",
             "queryParam" : "search[publication_name]",
             "tpl" : "<div class=\"x-grid-cell-text x-btn button\"><b>{publication_name}</b> </div>",
             "loadingText" : "Searching...",
             "items" : [
              {
               "listeners" : {
                "|beforeload" : "function (_self, o){\n    o.params = o.params || {};\n    // set more here\n    o.params['_distinct'] = 'publication_name';\n    o.params['_columns'] = 'publication_name';\n}\n"
               },
               "xtype" : "Store",
               "remoteSort" : true,
               "$ sortInfo" : "{ direction : 'ASC', field: 'publication_name' }",
               "$ xns" : "Roo.data",
               "* prop" : "store",
               "items" : [
                {
                 "$ url" : "baseURL + '/Roo/pressrelease_contact.php'",
                 "method" : "GET",
                 "xtype" : "HttpProxy",
                 "$ xns" : "Roo.data",
                 "* prop" : "proxy"
                },
                {
                 "id" : "id",
                 "root" : "data",
                 "xtype" : "JsonReader",
                 "$ xns" : "Roo.data",
                 "$ fields" : "[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"honor\",\"type\":\"string\"}]",
                 "* prop" : "reader",
                 "totalProperty" : "total"
                }
               ]
              }
             ]
            },
            {
             "listeners" : {
              "render" : "function (_self)\n{\n  _this.publication_lang_combo = _self;\n}",
              "beforeselect" : "function (combo, record, index)\n{\n  _this.grid.footer.onClick.defer(100, _this.grid.footer,[ 'first' ]);\n}"
             },
             "alwaysQuery" : true,
             "listWidth" : 200,
             "triggerAction" : "all",
             "forceSelection" : true,
             "selectOnFocus" : true,
             "pageSize" : 25,
             "displayField" : "publication_lang_name",
             "emptyText" : "Publ. Lang",
             "minChars" : 2,
             "valueField" : "publication_lang",
             "xtype" : "ComboBox",
             "typeAhead" : true,
             "editable" : false,
             "width" : 120,
             "$ xns" : "Roo.form",
             "qtip" : "Select Publication Language",
             "queryParam" : "search[publication_lang]",
             "tpl" : "<div class=\"x-grid-cell-text x-btn button\"><b>{publication_lang_name}</b> </div>",
             "loadingText" : "Searching...",
             "items" : [
              {
               "listeners" : {
                "|beforeload" : "function (_self, o){\n    o.params = o.params || {};\n    // set more here\n    o.params['_distinct'] = 'publication_lang';\n    o.params['_columns'] = 'publication_lang,publication_lang_name';\n}\n"
               },
               "xtype" : "Store",
               "remoteSort" : true,
               "$ sortInfo" : "{ direction : 'ASC', field: 'publication_lang_name' }",
               "$ xns" : "Roo.data",
               "* prop" : "store",
               "items" : [
                {
                 "$ url" : "baseURL + '/Roo/pressrelease_contact.php'",
                 "method" : "GET",
                 "xtype" : "HttpProxy",
                 "$ xns" : "Roo.data",
                 "* prop" : "proxy"
                },
                {
                 "id" : "id",
                 "root" : "data",
                 "xtype" : "JsonReader",
                 "$ xns" : "Roo.data",
                 "$ fields" : "[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"honor\",\"type\":\"string\"}]",
                 "* prop" : "reader",
                 "totalProperty" : "total"
                }
               ]
              }
             ]
            },
            {
             "listeners" : {
              "render" : "function (_self)\n{\n  _this.country_ar_combo = _self;\n}",
              "change" : "function (combo, record, index)\n{\n  _this.grid.footer.onClick.defer(100, _this.grid.footer,[ 'first' ]);\n}"
             },
             "alwaysQuery" : true,
             "listWidth" : 300,
             "triggerAction" : "all",
             "forceSelection" : false,
             "selectOnFocus" : true,
             "pageSize" : 999,
             "displayField" : "country_name",
             "emptyText" : "Country",
             "hiddenName" : "country",
             "minChars" : 2,
             "valueField" : "country",
             "xtype" : "ComboCheck",
             "typeAhead" : true,
             "editable" : false,
             "width" : 120,
             "$ xns" : "Roo.form",
             "qtip" : "Select Country",
             "queryParam" : "search[country_name]",
             "loadingText" : "Searching...",
             "items" : [
              {
               "listeners" : {
                "|beforeload" : "function (_self, o){\n    o.params = o.params || {};\n    // set more here\n    o.params['_distinct'] = 'country';\n    o.params['_with_country_name'] =1;\n    o.params['_columns'] = 'country_name,country';\n}\n"
               },
               "xtype" : "Store",
               "remoteSort" : true,
               "$ sortInfo" : "{ direction : 'ASC', field: 'country_name'  }",
               "$ xns" : "Roo.data",
               "* prop" : "store",
               "items" : [
                {
                 "$ url" : "baseURL + '/Roo/pressrelease_contact.php'",
                 "method" : "GET",
                 "xtype" : "HttpProxy",
                 "$ xns" : "Roo.data",
                 "* prop" : "proxy"
                },
                {
                 "id" : "id",
                 "root" : "data",
                 "xtype" : "JsonReader",
                 "$ xns" : "Roo.data",
                 "$ fields" : "[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"honor\",\"type\":\"string\"}]",
                 "* prop" : "reader",
                 "totalProperty" : "total"
                }
               ]
              }
             ]
            },
            {
             "listeners" : {
              "render" : "function (_self)\n{\n  _this.category_media_id_combo = _self;\n}",
              "change" : "function (combo, record, index)\n{\n  _this.grid.footer.onClick.defer(100, _this.grid.footer,[ 'first' ]);\n}"
             },
             "alwaysQuery" : true,
             "listWidth" : 300,
             "triggerAction" : "all",
             "forceSelection" : false,
             "selectOnFocus" : true,
             "pageSize" : 999,
             "displayField" : "category_media_id_name",
             "emptyText" : "Media Type",
             "hiddenName" : "category_media_id_name",
             "minChars" : 2,
             "valueField" : "category_media_id",
             "xtype" : "ComboCheck",
             "typeAhead" : true,
             "editable" : false,
             "width" : 120,
             "$ xns" : "Roo.form",
             "qtip" : "Select Media Type",
             "queryParam" : "search[category_media_id_name]",
             "loadingText" : "Searching...",
             "items" : [
              {
               "listeners" : {
                "|beforeload" : "function (_self, o){\n    o.params = o.params || {};\n    // set more here\n    o.params['_distinct'] = 'category_media_id';\n    o.params['_columns'] = 'category_media_id_name,category_media_id';\n}\n"
               },
               "xtype" : "Store",
               "remoteSort" : true,
               "$ sortInfo" : "{ direction : 'ASC', field: 'category_media_id_name' }",
               "$ xns" : "Roo.data",
               "* prop" : "store",
               "items" : [
                {
                 "$ url" : "baseURL + '/Roo/pressrelease_contact.php'",
                 "method" : "GET",
                 "xtype" : "HttpProxy",
                 "$ xns" : "Roo.data",
                 "* prop" : "proxy"
                },
                {
                 "id" : "id",
                 "root" : "data",
                 "xtype" : "JsonReader",
                 "$ xns" : "Roo.data",
                 "$ fields" : "[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"honor\",\"type\":\"string\"}]",
                 "* prop" : "reader",
                 "totalProperty" : "total"
                }
               ]
              }
             ]
            },
            {
             "listeners" : {
              "render" : "function (_self)\n{\n  _this.role_combo = _self;\n}",
              "change" : "function (combo, record, index)\n{\n  _this.grid.footer.onClick.defer(100, _this.grid.footer,[ 'first' ]);\n}"
             },
             "alwaysQuery" : true,
             "listWidth" : 300,
             "triggerAction" : "all",
             "forceSelection" : false,
             "selectOnFocus" : true,
             "pageSize" : 999,
             "displayField" : "role",
             "emptyText" : "Job Type",
             "hiddenName" : "role",
             "minChars" : 2,
             "valueField" : "role",
             "xtype" : "ComboCheck",
             "typeAhead" : true,
             "editable" : false,
             "width" : 120,
             "$ xns" : "Roo.form",
             "qtip" : "Select Job Type",
             "queryParam" : "search[role]",
             "loadingText" : "Searching...",
             "items" : [
              {
               "listeners" : {
                "|beforeload" : "function (_self, o){\n    o.params = o.params || {};\n    // set more here\n    o.params['_distinct'] = 'role';\n    o.params['_columns'] = 'role';\n}\n"
               },
               "xtype" : "Store",
               "remoteSort" : true,
               "$ sortInfo" : "{ direction : 'ASC', field: 'role' }",
               "$ xns" : "Roo.data",
               "* prop" : "store",
               "items" : [
                {
                 "$ url" : "baseURL + '/Roo/pressrelease_contact.php'",
                 "method" : "GET",
                 "xtype" : "HttpProxy",
                 "$ xns" : "Roo.data",
                 "* prop" : "proxy"
                },
                {
                 "id" : "id",
                 "root" : "data",
                 "xtype" : "JsonReader",
                 "$ xns" : "Roo.data",
                 "$ fields" : "[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"honor\",\"type\":\"string\"}]",
                 "* prop" : "reader",
                 "totalProperty" : "total"
                }
               ]
              }
             ]
            },
            {
             "xtype" : "Fill",
             "$ xns" : "Roo.Toolbar"
            },
            {
             "listeners" : {
              "|click" : "function()\n{\n    if (!_this.dialog) return;\n    _this.dialog.show( { id : 0 } , function() {\n        _this.grid.footer.onClick('first');\n   }); \n}\n"
             },
             "text" : "Add",
             "xtype" : "Button",
             "cls" : "x-btn-text-icon",
             "$ icon" : "Roo.rootURL + 'images/default/dd/drop-add.gif'",
             "$ xns" : "Roo.Toolbar"
            },
            {
             "listeners" : {
              "|click" : "function()\n{\n    var s = _this.grid.getSelectionModel().getSelections();\n    if (!s.length || (s.length > 1))  {\n        Roo.MessageBox.alert(\"Error\", s.length ? \"Select only one Row\" : \"Select a Row\");\n        return;\n    }\n    if (!_this.dialog) return;\n    \n    var data = {};\n    Roo.apply(data,s[0].data);\n    data.id = 0;\n    data.firstname = '';\n    data.lastname = '';\n    data.firstname_alt = '';\n    data.lastname_alt = '';\n    data.email = '';\n    \n    _this.dialog.show(data, function() {\n        _this.grid.footer.onClick('refresh');\n    }); \n    \n}"
             },
             "text" : "Duplicate",
             "xtype" : "Button",
             "cls" : "x-btn-text-icon",
             "$ icon" : "Roo.rootURL + 'images/default/tree/leaf.gif'",
             "$ xns" : "Roo.Toolbar"
            },
            {
             "listeners" : {
              "|click" : "function()\n{\n    var s = _this.grid.getSelectionModel().getSelections();\n    if (!s.length || (s.length > 1))  {\n        Roo.MessageBox.alert(\"Error\", s.length ? \"Select only one Row\" : \"Select a Row\");\n        return;\n    }\n    if (!_this.dialog) return;\n    _this.dialog.show(s[0].data, function() {\n        _this.grid.footer.onClick('refresh');\n    }); \n    \n}\n"
             },
             "text" : "Edit",
             "xtype" : "Button",
             "cls" : "x-btn-text-icon",
             "$ icon" : "Roo.rootURL + 'images/default/tree/leaf.gif'",
             "$ xns" : "Roo.Toolbar"
            },
            {
             "listeners" : {
              "|click" : "function()\n{\n     Pman.genericDelete(_this, 'pressrelease_contact'); \n}\n        "
             },
             "text" : "Delete",
             "xtype" : "Button",
             "cls" : "x-btn-text-icon",
             "$ icon" : "rootURL + '/Pman/templates/images/trash.gif'",
             "$ xns" : "Roo.Toolbar"
            }
           ]
          },
          {
           "xtype" : "ColumnModel",
           "sortable" : true,
           "header" : "First name",
           "width" : 100,
           "$ renderer" : "function(v,x,r) { \n    var d = r.data;\n    if (d.firstname_alt.length) {\n    \n        return String.format('{0} ({1})', d.firstname, d.firstname_alt ); \n    }\n    return String.format('{0}', d.firstname); \n}",
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "dataIndex" : "firstname"
          },
          {
           "xtype" : "ColumnModel",
           "sortable" : true,
           "header" : "Family Name",
           "width" : 150,
           "$ renderer" : "function(v,x,r) { \n    var d = r.data;\n    if (d.lastname_alt.length) {\n    \n        return String.format('{0} ({1})', d.lastname, d.lastname_alt ); \n    }\n    return String.format('{0}', d.lastname); \n}",
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "dataIndex" : "lastname"
          },
          {
           "xtype" : "ColumnModel",
           "sortable" : true,
           "header" : "Job Title",
           "width" : 100,
           "$ renderer" : "function(v) { return String.format('{0}', v); }",
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "dataIndex" : "role"
          },
          {
           "xtype" : "ColumnModel",
           "sortable" : true,
           "header" : "Publication",
           "width" : 150,
           "$ renderer" : "function(v) { return String.format('{0}', v); }",
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "dataIndex" : "publication_name"
          },
          {
           "xtype" : "ColumnModel",
           "sortable" : true,
           "header" : "Publication Scope",
           "width" : 100,
           "$ renderer" : "function(v) { return String.format('{0}', v); }",
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "dataIndex" : "category_scope_id_name"
          },
          {
           "xtype" : "ColumnModel",
           "header" : "News Beat(s)",
           "width" : 200,
           "$ renderer" : "function(v) { return String.format('{0}',v).split(',').join('<BR/>'); }",
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "dataIndex" : "beats"
          },
          {
           "xtype" : "ColumnModel",
           "sortable" : true,
           "header" : "Country",
           "width" : 100,
           "$ renderer" : "function(v) { return String.format('{0}', v ? Pman.I18n.toName('c', v) : ''); }",
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "dataIndex" : "country"
          },
          {
           "xtype" : "ColumnModel",
           "header" : "Email",
           "width" : 200,
           "$ renderer" : "function(v,x,r) {\n\n      \n    var f = (\n            r.data.email_fails > 0 ? '<span style=\"color:red\">{0}</span>' : '{0}'\n        ) + (\n        r.data.email2.length > 0 ? \n            (r.data.email2_fails > 0 ? '<br/><span style=\"color:red\">{1}</span>' : '<br/>{1}')    : ''\n        ) + (\n        r.data.email3.length > 0 ? \n            (r.data.email3_fails > 0 ? '<br/><span style=\"color:red\">{2}</span>' : '<br/>{2}')    : ''\n        );\n        \n        \n    \n    return String.format(f, v, r.data.email2, r.data.email3); \n    \n}\n ",
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "dataIndex" : "email"
          },
          {
           "xtype" : "ColumnModel",
           "header" : "Tel.",
           "width" : 200,
           "$ renderer" : "function(v,x,r) { \n\n    var map =  {\n        phone : 'Phone',\n        phone_mobile : 'Mobile',\n        phone_direct: 'Direct Line'\n    }\n    var ret = [];\n    for (var i in map) {\n        if (r.data[i].length) {\n            ret.push( map[i]+': ' +  String.format('{0}' , r.data[i]))\n        }\n    }\n\n    return ret.join('<BR/>');\n    \n}",
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "dataIndex" : "phone"
          }
         ]
        }
       ]
      },
      {
       "listeners" : {
        "activate" : "function (_self)\n{\n    \n    _this.treepanel = _self;\n}"
       },
       "autoScroll" : true,
       "region" : "west",
       "fitToFrame" : true,
       "title" : "Category Tree",
       "xtype" : "TreePanel",
       "$ xns" : "Roo",
       "items" : [
        {
         "xtype" : "Toolbar",
         "$ xns" : "Roo",
         "* prop" : "toolbar",
         "items" : [
          {
           "text" : "Manage Categories",
           "xtype" : "Button",
           "$ xns" : "Roo.Toolbar",
           "items" : [
            {
             "xtype" : "Menu",
             "$ xns" : "Roo.menu",
             "* prop" : "menu",
             "items" : [
              {
               "text" : "Right Click on Item to add/edit ",
               "xtype" : "Item",
               "$ icon" : "Roo.rootURL + 'images/default/tree/drop-add.gif'",
               "$ xns" : "Roo.menu"
              },
              {
               "xtype" : "Separator",
               "$ xns" : "Roo.menu"
              },
              {
               "listeners" : {
                "click" : "function (_self, e)\n{\n   _this.treepanel.tree.root.reload();\n}"
               },
               "text" : "Reload Tree",
               "xtype" : "Item",
               "$ xns" : "Roo.menu"
              }
             ]
            }
           ]
          }
         ]
        },
        {
         "listeners" : {
          "beforenodedrop" : "function (dropEvent)\n{\n    //Roo.log('beforenodedrop');\n    Roo.log(dropEvent);\n    // comming from grid..\n    if (dropEvent.data.grid) {\n        // comming from grid..\n         if (!dropEvent.data.selections.length) {\n             return false;\n         }\n        // prevents dropping onto top level\n         if (isNaN(parseInt(dropEvent.target.id))) {\n             return false;\n         }\n\n         if (dropEvent.point !='append') {\n            return false; \n         }\n         var ids = [];\n         Roo.each(dropEvent.data.selections, function(d) {\n            ids.push(d.data.id)\n         });\n         /*\n         Roo.Ajax.request({\n            method : 'POST',\n            params : {\n                _ids : ids.join(','),\n                category_id : dropEvent.target.id\n            },\n            url : baseURL + '/Roo/Product.php',\n            success : function(r, o) { \n                dropEvent.data.grid.footer.onClick('refresh');\n            },\n            failure : function () {\n                Roo.messageBox.alert('Error', 'Error updating categories');\n            }\n        });\n         */\n         \n         \n         return true;\n    }\n    \n \n    \n    \n    \n    \n    return true;\n}",
          "contextmenu" : "function (node, e)\n{\n    \n    _this.treepanel.tree.selModel.select(node);\n    var menu = Roo.factory(_this.treepanel.menu);\n    _this.cxnode = node;\n    menu.showAt(e.getXY());\n}",
          "checkchange" : "function (node, checked)\n{\n    \n    //Roo.log(this.getChecked('id'));\n    \n     (function() {\n       _this.grid.footer.onClick('first');\n    }).defer(200);\n    \n}",
          "nodedragover" : "function (dragOverEvent)\n{\n     Roo.log('nodedragover');\n     Roo.log(dragOverEvent);     \n     \n     if (dragOverEvent.data.grid) {\n        // comming from grid..\n         if (!dragOverEvent.data.selections.length) {\n             return false;\n         }\n       \n         if (isNaN(parseInt(dragOverEvent.target.id))) {\n            return false;\n         }\n\n         if (dragOverEvent.point !='append') {\n            return false; \n         }\n         return true;\n    }\n    // only allow append..\n     if (dragOverEvent.point !='append') {\n         return false; \n     }\n     // drop onto top level.\n     if (dragOverEvent.target.attributes &&\n         isNaN(parseInt(dragOverEvent.target.attributes.id))) {\n         return false;\n      }\n      // dragging top level node....\n      if (dragOverEvent.dropNode && dragOverEvent.dropNode.attributes.parent_id * 1 < 1) {\n            return false;\n     }\n    \n}",
          "nodedrop" : "function (dropEvent)\n{\n   // now handle node drop..\n    // if it fails, we just reload the tree..  a bit messy, but acceptable..\n    var _t = this;\n    \n    Roo.Ajax.request({\n        method : 'POST',\n        params : {\n            id : dropEvent.dropNode.id,\n            parent_id : dropEvent.target.id\n        },\n        url : baseURL + '/Roo/Pressrelease_category.php',\n        success : function(r, o) { \n            \n            // do nothing..\n        },\n        failure : function () {\n            Roo.messageBox.alert('Error', 'Error updating categories');\n            _this.root.reload()\n        }\n    });\n     \n}",
          "click" : "function (node, e)\n{\n   if (node.ui.checkbox) {\n       node.ui.checkbox.checked = !node.ui.checkbox.checked;\n       node.ui.onCheckChange();\n   }\n   \n    // (function() {\n    //   _this.grid.footer.onClick('first');\n   // }).defer(200);\n}"
         },
         "enableDrop" : true,
         "xtype" : "TreePanel",
         "enableDrag" : false,
         "ddGroup" : "contactsDD",
         "$ xns" : "Roo.tree",
         "* prop" : "tree",
         "items" : [
          {
           "text" : "All Contacts",
           "xtype" : "AsyncTreeNode",
           "$ xns" : "Roo.tree",
           "* prop" : "root"
          },
          {
           "listeners" : {
            "create" : "function (self, attr)\n{\n    //Roo.log(attr);\n    attr.text = (attr.hgroup ?  attr.hgroup +' : ' : '' ) + attr.name;\n\n    attr.allowChildren = attr.parent_id * 1 ? false : true;\n    \n    attr.leaf   = attr.parent_id * 1 ? true : false;\n    \n    \n    attr.checked = attr.leaf ? false : undefined;\n    \n    if (attr.name == 'Regional') {\n        attr.allowChildren = true;\n        attr.leaf = false;\n         attr.checked  = undefined;\n    }\n    \n}"
           },
           "$ baseParams" : "{ _tree: 1, limit: 9999, sort: 'hgroup,name', dir : 'ASC'  }",
           "root" : "data",
           "xtype" : "TreeLoader",
           "requestMethod" : "GET",
           "$ xns" : "Roo.tree",
           "* prop" : "loader",
           "queryParam" : "parent_id",
           "$ dataUrl" : "baseURL + '/Roo/Pressrelease_category.php'"
          },
          {
           "listeners" : {
            "beforeselect" : "function (_self, node, node)\n{\n    Roo.log(\"before select\");\n      return false;\n}"
           },
           "xtype" : "DefaultSelectionModel",
           "$ xns" : "Roo.tree",
           "* prop" : "selModel"
          }
         ]
        },
        {
         "xtype" : "Menu",
         "$ xns" : "Roo.menu",
         "* prop" : "menu",
         "items" : [
          {
           "listeners" : {
            "click" : "function (_self, e)\n{\n\n    var sel = _this.cxnode;\n    var id =  (!sel || isNaN(parseInt(sel.id))) ? 0 : sel.id;\n    if (!id) {\n        Roo.MessageBox.alert(\"Error\", \"Select a category to add a item to\");\n        return;\n        var sel = _this.treepanel.tree.root;\n    }\n\n \n    Pman.Dialog.PressReleaseCategory.show(\n         { id : 0 , parent_id : id }, \n         function(r)\n        {\n           \n           //Roo.log(r);\n            if (r && r.name) {\n                if(sel.reload) {\n                    sel.reload();\n                    return;\n                }\n                // otherwise it's a treenode, and needs replacing...\n                var attr = sel.attributes;\n                attr.leaf = false;\n                var repnode = new Roo.tree.AsyncTreeNode(attr);\n                sel.parentNode.replaceChild(repnode, sel);\n                repnode.expand();\n           }\n    });\n}"
           },
           "text" : "Add",
           "xtype" : "Item",
           "$ icon" : "Roo.rootURL + 'images/default/tree/drop-add.gif'",
           "$ xns" : "Roo.menu"
          },
          {
           "listeners" : {
            "click" : "function (_self, e)\n{\n\n   \n    var sel = _this.cxnode;\n    if (!sel || isNaN(parseInt(sel.id))) {\n        Roo.MessageBox.alert(\"Error\", \"select a category to edit\");\n        return;\n    }\n  \n   Pman.Dialog.PressReleaseCategory.show( sel.attributes  , function(attr)\n    {\n       if (attr && attr.name) {\n             \n            sel.setText((attr.hgroup ? attr.hgroup + ' : ' : '' ) + attr.name);\n       }\n    });\n}"
           },
           "text" : "Edit",
           "xtype" : "Item",
           "$ icon" : "Roo.rootURL + 'images/default/tree/leaf.gif'",
           "$ xns" : "Roo.menu"
          },
          {
           "xtype" : "Separator",
           "$ xns" : "Roo.menu"
          },
          {
           "listeners" : {
            "click" : "function (_self, e)\n{\n    var sel = _this.cxnode;\n    if (!sel || isNaN(parseInt(sel.id))) {\n        Roo.MessageBox.alert(\"Error\", \"you can not delete that category\");\n        return;\n    }\n    var par = sel.parentNode;\n    Roo.MessageBox.confirm(\"Confirm\", \"Are you sure you want to delete that?\", function(b)\n    {\n       // console.log(b);\n        if (b!='yes') {\n            return;\n        }\n\n          new Pman.request({\n            method : 'POST',\n            params : {\n                _delete : sel.id\n            },\n            url : baseURL + '/Roo/Pressrelease_category.php',\n            success : function(r, o) { \n                par.removeChild(sel);\n                // do nothing..\n            } \n        });\n        \n    });\n         \n    \n}"
           },
           "text" : "Delete",
           "xtype" : "Item",
           "$ xns" : "Roo.menu"
          },
          {
           "xtype" : "Separator",
           "$ xns" : "Roo.menu"
          },
          {
           "listeners" : {
            "click" : "function (_self, e)\n{\n   _this.treepanel.tree.root.reload();\n}"
           },
           "text" : "Reload Tree",
           "xtype" : "Item",
           "$ xns" : "Roo.menu"
          }
         ]
        }
       ]
      }
     ]
    }
   ]
  }
 ]
}