{
 "name" : "Pman.Tab.ReaderArticle",
 "parent" : "Pman.Tab.PressReleaseTab",
 "title" : "",
 "path" : "/home/alan/gitlive/web.MediaOutreach/Pman/PressRelease/Pman.Tab.ReaderArticle.bjs",
 "permname" : "",
 "modOrder" : "999",
 "strings" : {
  "59716c97497eb9694541f7c3d37b1a4d" : "Country",
  "490aa6e856ccf208a054389e47ce0d06" : "Id",
  "4994a8ffeba4ac3140beb89e8d41f174" : "Language",
  "8444e81d652b084d70c71cd7d19ac0cf" : "Displaying Person{0} - {1} of {2}",
  "13348442cc6a27032d2b4aa28b75a5d3" : "Search",
  "b841c326ce2658d34b4430a9dc46c0e4" : "Rebuild & Download",
  "479e527f94b9416c7c642519be65f1f2" : "Reader Article",
  "b718adec73e04ce3ec720dd11a06a308" : "ID",
  "f00a1d99f6f47917006e88a803ecde1f" : "Campaign",
  "1243daf593fa297e07ab03bf06d925af" : "Searching...",
  "07f366f8c885267f837f79170f05a990" : "Build feeds",
  "a2ceb7c17a391cb351d6f4b084fc9c3d" : "reader_sub",
  "5a7b0bf7386b00815019c1381be4f425" : "Last Fetch",
  "30232180c3389e421452954d1790036e" : "Reader Articles",
  "5da618e8e4b89c66fe86e32cdafde142" : "From",
  "24f27bda5dd2c488aa9bc7700ba98c34" : "Select Projects",
  "ac101b32dda4448cf13a93fe283dddd8" : "Body",
  "a80425472d94ae02c836da5b6f205b7b" : "Feed",
  "0553dc409f5f786ede7dc1dd1f94c2d8" : "Diff Article",
  "689252537fba5b4613c47664625652b0" : "Fetched",
  "ac78da22726179c0aca7474021f77977" : "Link Check",
  "175b08878b33de0ba64fb8072292c69d" : "Download Article",
  "c6568e77f61109390e82d035aaacaef0" : "Headline",
  "e6b391a8d2c4d45902a23a8b6585703d" : "URL"
 },
 "items" : [
  {
   "background" : true,
   "region" : "center",
   "title" : "Reader Articles",
   "xtype" : "NestedLayoutPanel",
   "$ xns" : "Roo",
   "items" : [
    {
     "xtype" : "BorderLayout",
     "$ xns" : "Roo",
     "* prop" : "layout",
     "items" : [
      {
       "xtype" : "LayoutRegion",
       "$ xns" : "Roo",
       "* prop" : "center"
      },
      {
       "xtype" : "LayoutRegion",
       "$ xns" : "Roo",
       "split" : true,
       "* prop" : "south",
       "height" : 300
      },
      {
       "listeners" : {
        "|activate" : "function() {\n    _this.feedpanel = this;\n    if (_this.feedgrid) {\n        _this.feedgrid.ds.load({});\n    }\n}"
       },
       "fitToframe" : true,
       "background" : true,
       "region" : "center",
       "title" : "reader_sub",
       "xtype" : "GridPanel",
       "fitContainer" : true,
       "$ xns" : "Roo",
       "tableName" : "reader_sub",
       "items" : [
        {
         "listeners" : {
          "|rowdblclick" : "function (_self, rowIndex, e)\n{\n    if (!_this.dialog) return;\n    _this.dialog.show( this.getDataSource().getAt(rowIndex).data, function() {\n        _this.grid.footer.onClick('first');\n    }); \n}\n",
          "|render" : "function() \n{\n    _this.feedgrid = this; \n    //_this.dialog = Pman.Dialog.FILL_IN\n    if (_this.feedpanel.active) {\n    \n        this.ds.load({});\n\n    }\n}"
         },
         "autoExpandColumn" : "supplier_id_code",
         "xtype" : "Grid",
         "loadMask" : true,
         "$ xns" : "Roo.grid",
         "* prop" : "grid",
         "items" : [
          {
           "listeners" : {
            "afterselectionchange" : "function (_self)\n{\n    _this.grid.footer.onClick('first');\n}"
           },
           "xtype" : "RowSelectionModel",
           "singleSelect" : true,
           "$ xns" : "Roo.grid",
           "* prop" : "sm"
          },
          {
           "listeners" : {
            "beforeload" : "function (_self, o)\n{\n    o.params = o.params || {};\n    o.params.limit = 100;\n    o.params.project_id = _this.projectCombo.getValue();\n    if (!    o.params.project_id ) {\n        return false;\n    }\n    \n    \n}"
           },
           "xtype" : "Store",
           "remoteSort" : true,
           "$ sortInfo" : "{ field : '', direction: 'ASC' }",
           "$ xns" : "Roo.data",
           "* prop" : "dataSource",
           "items" : [
            {
             "$ url" : "baseURL + '/Roo/CampaignAssign.php'",
             "xtype" : "HttpProxy",
             "method" : "GET",
             "$ xns" : "Roo.data",
             "* prop" : "proxy"
            },
            {
             "id" : "id",
             "root" : "data",
             "xtype" : "JsonReader",
             "$ xns" : "Roo.data",
             "$ fields" : "[\n    {\n        'name': 'id',\n        'type': 'int'\n    },\n    {\n        'name': 'person_id',\n        'type': 'int'\n    },\n    {\n        'name': 'feed_id',\n        'type': 'int'\n    },\n    {\n        'name': 'campaign_assign_id',\n        'type': 'int'\n    },\n    {\n        'name': 'person_id_id',\n        'type': 'int'\n    },\n    {\n        'name': 'person_id_office_id',\n        'type': 'int'\n    },\n    {\n        'name': 'person_id_name',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_phone',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_fax',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_email',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_alt_email',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_company_id',\n        'type': 'int'\n    },\n    {\n        'name': 'person_id_role',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_active',\n        'type': 'int'\n    },\n    {\n        'name': 'person_id_remarks',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_passwd',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_owner_id',\n        'type': 'int'\n    },\n    {\n        'name': 'person_id_lang',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_no_reset_sent',\n        'type': 'int'\n    },\n    {\n        'name': 'person_id_action_type',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_project_id',\n        'type': 'int'\n    },\n    {\n        'name': 'person_id_deleted_by',\n        'type': 'int'\n    },\n    {\n        'name': 'person_id_deleted_dt',\n        'type': 'date'\n    },\n    {\n        'name': 'person_id_firstname',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_lastname',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_name_facebook',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_url_blog',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_url_twitter',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_url_linkedin',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_phone_mobile',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_phone_direct',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_honor',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_countries',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_addr_state',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_country_id',\n        'type': 'int'\n    },\n    {\n        'name': 'person_id_city_id',\n        'type': 'int'\n    },\n    {\n        'name': 'person_id_chosen_title',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_url_google_plus',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_url_blog2',\n        'type': 'string'\n    },\n    {\n        'name': 'person_id_url_blog3',\n        'type': 'string'\n    },\n    {\n        'name': 'feed_id_id',\n        'type': 'int'\n    },\n    {\n        'name': 'feed_id_name',\n        'type': 'string'\n    },\n    {\n        'name': 'feed_id_url',\n        'type': 'string'\n    },\n    {\n        'name': 'feed_id_lastfetch_dt',\n        'type': 'date'\n    },\n    {\n        'name': 'feed_id_description',\n        'type': 'string'\n    },\n    {\n        'name': 'feed_id_parser',\n        'type': 'string'\n    },\n    {\n        'name': 'feed_id_params',\n        'type': 'string'\n    },\n    {\n        'name': 'feed_id_country',\n        'type': 'string'\n    },\n    {\n        'name': 'campaign_assign_id_id',\n        'type': 'int'\n    },\n    {\n        'name': 'campaign_assign_id_supplier_id',\n        'type': 'int'\n    },\n    {\n        'name': 'campaign_assign_id_assigntype',\n        'type': 'string'\n    },\n    {\n        'name': 'campaign_assign_id_languages',\n        'type': 'string'\n    },\n    {\n        'name': 'campaign_assign_id_countries',\n        'type': 'string'\n    },\n    {\n        'name': 'campaign_assign_id_description',\n        'type': 'string'\n    },\n    {\n        'name': 'campaign_assign_id_project_id',\n        'type': 'int'\n    },\n    {\n        'name': 'campaign_assign_id_sourcelanguages',\n        'type': 'string'\n    },\n    {\n        'name': 'campaign_assign_id_assignimage_id',\n        'type': 'int'\n    },\n    {\n        'name': 'campaign_assign_id_remote_username',\n        'type': 'string'\n    },\n    {\n        'name': 'campaign_assign_id_remote_password',\n        'type': 'string'\n    },\n    {\n        'name': 'campaign_assign_id_delivery_time',\n        'type': 'string'\n    },\n    {\n        'name': 'campaign_assign_id_search_terms',\n        'type': 'string'\n    }\n]",
             "* prop" : "reader",
             "totalProperty" : "total"
            }
           ]
          },
          {
           "xtype" : "Toolbar",
           "$ xns" : "Roo",
           "* prop" : "toolbar",
           "items" : [
            {
             "listeners" : {
              "render" : "function (_self)\n{\n    _this.projectCombo = _self;\n}",
              "select" : "function (combo, record, index)\n{\n   _this.feedgrid.ds.load({});\n}"
             },
             "listWidth" : 400,
             "triggerAction" : "all",
             "forceSelection" : true,
             "selectOnFocus" : true,
             "pageSize" : 20,
             "displayField" : "name",
             "emptyText" : "Select Projects",
             "minChars" : 2,
             "valueField" : "id",
             "xtype" : "ComboBox",
             "allowBlank" : true,
             "typeAhead" : true,
             "editable" : false,
             "width" : 300,
             "$ xns" : "Roo.form",
             "qtip" : "Select Projects",
             "queryParam" : "",
             "tpl" : "<div class=\"x-grid-cell-text x-btn button\"><b>#{pressrelease_id} {name}</b></div>",
             "loadingText" : "Searching...",
             "items" : [
              {
               "listeners" : {
                "|beforeload" : "function (_self, o){\n    o.params = o.params || {};\n    // set more here\n    o.params['query[project_indaterange]'] = 'C';\n    \n}\n"
               },
               "xtype" : "Store",
               "remoteSort" : true,
               "$ sortInfo" : "{ direction : 'DESC', field: 'pressrelease_id' }",
               "$ xns" : "Roo.data",
               "* prop" : "store",
               "items" : [
                {
                 "$ url" : "baseURL + '/Roo/Projects.php'",
                 "method" : "GET",
                 "xtype" : "HttpProxy",
                 "$ xns" : "Roo.data",
                 "* prop" : "proxy"
                },
                {
                 "id" : "id",
                 "root" : "data",
                 "xtype" : "JsonReader",
                 "$ xns" : "Roo.data",
                 "$ fields" : "[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"}]",
                 "* prop" : "reader",
                 "totalProperty" : "total"
                }
               ]
              }
             ]
            },
            {
             "xtype" : "Fill",
             "$ xns" : "Roo.Toolbar"
            },
            {
             "listeners" : {
              "|click" : "function()\n{\n \n    \n    new Pman.Request({\n\n        url : baseURL + '/Roo/Pressrelease_entry',\n        method  : 'GET',\n        params : {\n            _build_feed :     _this.projectCombo.getValue()\n        },\n        success : function () {\n             _this.feedgrid.ds.load({});\n        }\n        \n\n    });\n    \n}\n"
             },
             "text" : "Build feeds",
             "xtype" : "Button",
             "$ xns" : "Roo.Toolbar"
            }
           ]
          },
          {
           "xtype" : "ColumnModel",
           "header" : "Id",
           "width" : 50,
           "$ renderer" : "function(v) { return String.format('{0}', v); }",
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "dataIndex" : "id"
          },
          {
           "xtype" : "ColumnModel",
           "header" : "Last Fetch",
           "width" : 130,
           "$ renderer" : "function(v) { return String.format('{0}', v); }",
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "dataIndex" : "lastfetched"
          },
          {
           "xtype" : "ColumnModel",
           "header" : "Feed",
           "width" : 200,
           "$ renderer" : "function(v) { return String.format('{0}', v); }",
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "dataIndex" : "supplier_id_code"
          },
          {
           "xtype" : "ColumnModel",
           "header" : "Country",
           "width" : 50,
           "$ renderer" : "function(v) { return String.format('{0}', v); }",
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "dataIndex" : "countries"
          },
          {
           "xtype" : "ColumnModel",
           "header" : "Language",
           "width" : 150,
           "$ renderer" : "function(v) { return String.format('{0}', v); }",
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "dataIndex" : "languages"
          }
         ]
        }
       ]
      },
      {
       "listeners" : {
        "|activate" : "function() {\n    _this.panel = this;\n    if (_this.grid) {\n        _this.grid.footer.onClick('first');\n    }\n}"
       },
       "autoScroll" : true,
       "background" : false,
       "fitToframe" : true,
       "region" : "south",
       "title" : "Reader Article",
       "xtype" : "GridPanel",
       "fitContainer" : true,
       "$ xns" : "Roo",
       "tableName" : "reader_article",
       "items" : [
        {
         "listeners" : {
          "|rowdblclick" : "function (_self, rowIndex, e)\n{\n    return;\n    if (!_this.dialog) return;\n    _this.dialog.show( this.getDataSource().getAt(rowIndex), function() {\n        _this.grid.footer.onClick('first');\n    }); \n}\n",
          "cellclick" : "function (_self, rowIndex, columnIndex, e)\n{\n    return;\n        var di = this.colModel.getDataIndex(columnIndex);\n        if (di != 'active') {\n            return;\n        }\n         \n        var rec = _this.grid.ds.getAt(rowIndex);\n        \n        rec.set('active', rec.data.active ? 0 : 1);\n        rec.commit();\n         \n        \n}",
          "|render" : "function() \n{\n    _this.grid = this; \n    if (!_this.dialog) {\n        _this.dialog = Pman.Dialog.PersonEdit;\n        \n    }\n    //_this.dialog = Pman.Dialog.FILL_IN\n    if (_this.panel.active) {\n       this.footer.onClick('first');\n    }\n}"
         },
         "autoExpandColumn" : "headline",
         "xtype" : "Grid",
         "loadMask" : true,
         "$ xns" : "Roo.grid",
         "* prop" : "grid",
         "items" : [
          {
           "listeners" : {
            "update" : "function (_self, record, operation)\n{\n    if (operation != 'commit') {\n        return;\n    }\n    // only used to change active status.\n    \n    new Pman.Request({\n        url : baseURL + '/Roo/Person.php',\n        method :'POST',\n        params : {\n            id : record.data.id,\n            active: record.data.active\n            \n        },\n        success : function() {\n            // do nothing\n            \n            _this.grid.ds.remove(record);\n            \n        },\n        failure : function() \n        {\n            Roo.MessageBox.alert(\"Error\", \"saving failed\", function() {\n                _this.grid.footer.onClick('first');\n            });\n        }\n    });\n}",
            "beforeload" : "function (_self, o)\n{\n    if (!_this.feedgrid) {\n        return false;\n    }\n    \n    o.params = o.params || {};\n    \n    var pr = _this.projectCombo.getValue();\n    if (pr *1 > 0 ) {\n        o.params.campaign_id = pr;\n    }\n    \n    o.params._search = _this.searchBox.getValue();\n\n    var fg = _this.feedgrid.selModel.getSelected();\n    if (fg) {\n        o.params.src_id = fg.data.id;\n    }\n    \n}"
           },
           "xtype" : "Store",
           "remoteSort" : true,
           "$ sortInfo" : "{ field : 'id', direction: 'DESC' }",
           "$ xns" : "Roo.data",
           "* prop" : "dataSource",
           "items" : [
            {
             "$ url" : "baseURL + '/Roo/Reader_article.php'",
             "xtype" : "HttpProxy",
             "method" : "GET",
             "$ xns" : "Roo.data",
             "* prop" : "proxy"
            },
            {
             "id" : "id",
             "root" : "data",
             "xtype" : "JsonReader",
             "$ xns" : "Roo.data",
             "$ fields" : "[\n    {\n        'name': 'id',\n        'type': 'int'\n    },\n    {\n        'name': 'office_id',\n        'type': 'int'\n    },\n    {\n        'name': 'name',\n        'type': 'string'\n    },\n    {\n        'name': 'phone',\n        'type': 'string'\n    },\n    {\n        'name': 'fax',\n        'type': 'string'\n    },\n    {\n        'name': 'email',\n        'type': 'string'\n    },\n    {\n        'name': 'company_id',\n        'type': 'int'\n    },\n    {\n        'name': 'role',\n        'type': 'string'\n    },\n    {\n        'name': 'active',\n        'type': 'int'\n    },\n    {\n        'name': 'remarks',\n        'type': 'string'\n    },\n    {\n        'name': 'passwd',\n        'type': 'string'\n    },\n    {\n        'name': 'owner_id',\n        'type': 'int'\n    },\n    {\n        'name': 'lang',\n        'type': 'string'\n    },\n    {\n        'name': 'no_reset_sent',\n        'type': 'int'\n    },\n    {\n        'name': 'action_type',\n        'type': 'string'\n    },\n    {\n        'name': 'project_id',\n        'type': 'int'\n    },\n    {\n        'name': 'office_id_id',\n        'type': 'int'\n    },\n    {\n        'name': 'office_id_company_id',\n        'type': 'int'\n    },\n    {\n        'name': 'office_id_name',\n        'type': 'string'\n    },\n    {\n        'name': 'office_id_address',\n        'type': 'string'\n    },\n    {\n        'name': 'office_id_phone',\n        'type': 'string'\n    },\n    {\n        'name': 'office_id_fax',\n        'type': 'string'\n    },\n    {\n        'name': 'office_id_email',\n        'type': 'string'\n    },\n    {\n        'name': 'office_id_role',\n        'type': 'string'\n    },\n    {\n        'name': 'company_id_code',\n        'type': 'string'\n    },\n    {\n        'name': 'company_id_name',\n        'type': 'string'\n    },\n    {\n        'name': 'company_id_remarks',\n        'type': 'string'\n    },\n    {\n        'name': 'company_id_owner_id',\n        'type': 'int'\n    },\n    {\n        'name': 'company_id_address',\n        'type': 'string'\n    },\n    {\n        'name': 'company_id_tel',\n        'type': 'string'\n    },\n    {\n        'name': 'company_id_fax',\n        'type': 'string'\n    },\n    {\n        'name': 'company_id_email',\n        'type': 'string'\n    },\n    {\n        'name': 'company_id_id',\n        'type': 'int'\n    },\n    {\n        'name': 'company_id_isOwner',\n        'type': 'int'\n    },\n    {\n        'name': 'company_id_logo_id',\n        'type': 'int'\n    },\n    {\n        'name': 'company_id_background_color',\n        'type': 'string'\n    },\n    {\n        'name': 'company_id_comptype',\n        'type': 'string'\n    },\n    {\n        'name': 'company_id_url',\n        'type': 'string'\n    },\n    {\n        'name': 'company_id_main_office_id',\n        'type': 'int'\n    },\n    {\n        'name': 'company_id_created_by',\n        'type': 'int'\n    },\n    {\n        'name': 'company_id_created_dt',\n        'type': 'date'\n    },\n    {\n        'name': 'company_id_updated_by',\n        'type': 'int'\n    },\n    {\n        'name': 'company_id_updated_dt',\n        'type': 'date'\n    },\n    {\n        'name': 'company_id_passwd',\n        'type': 'string'\n    },\n    {\n        'name': 'project_id_id',\n        'type': 'int'\n    },\n    {\n        'name': 'project_id_name',\n        'type': 'string'\n    },\n    {\n        'name': 'project_id_remarks',\n        'type': 'string'\n    },\n    {\n        'name': 'project_id_owner_id',\n        'type': 'int'\n    },\n    {\n        'name': 'project_id_code',\n        'type': 'string'\n    },\n    {\n        'name': 'project_id_active',\n        'type': 'int'\n    },\n    {\n        'name': 'project_id_type',\n        'type': 'string'\n    },\n    {\n        'name': 'project_id_client_id',\n        'type': 'int'\n    },\n    {\n        'name': 'project_id_team_id',\n        'type': 'int'\n    },\n    {\n        'name': 'project_id_file_location',\n        'type': 'string'\n    },\n    {\n        'name': 'project_id_open_date',\n        'type': 'date'\n    },\n    {\n        'name': 'project_id_open_by',\n        'type': 'int'\n    },\n    {\n        'name': 'project_id_close_date',\n        'type': 'date'\n    },\n    {\n        'name': 'project_id_countries',\n        'type': 'string'\n    },\n    {\n        'name': 'project_id_languages',\n        'type': 'string'\n    },\n    {\n        'name': 'project_id_agency_id',\n        'type': 'int'\n    },\n    {\n        'name': 'owner_id_id',\n        'type': 'int'\n    },\n    {\n        'name': 'owner_id_office_id',\n        'type': 'int'\n    },\n    {\n        'name': 'owner_id_name',\n        'type': 'string'\n    },\n    {\n        'name': 'owner_id_phone',\n        'type': 'string'\n    },\n    {\n        'name': 'owner_id_fax',\n        'type': 'string'\n    },\n    {\n        'name': 'owner_id_email',\n        'type': 'string'\n    },\n    {\n        'name': 'owner_id_company_id',\n        'type': 'int'\n    },\n    {\n        'name': 'owner_id_role',\n        'type': 'string'\n    },\n    {\n        'name': 'owner_id_active',\n        'type': 'int'\n    },\n    {\n        'name': 'owner_id_remarks',\n        'type': 'string'\n    },\n    {\n        'name': 'owner_id_passwd',\n        'type': 'string'\n    },\n    {\n        'name': 'owner_id_owner_id',\n        'type': 'int'\n    },\n    {\n        'name': 'owner_id_lang',\n        'type': 'string'\n    },\n    {\n        'name': 'owner_id_no_reset_sent',\n        'type': 'int'\n    },\n    {\n        'name': 'owner_id_action_type',\n        'type': 'string'\n    },\n    {\n        'name': 'owner_id_project_id',\n        'type': 'int'\n    }\n]",
             "* prop" : "reader",
             "totalProperty" : "total"
            }
           ]
          },
          {
           "pageSize" : 100,
           "xtype" : "PagingToolbar",
           "$ xns" : "Roo",
           "displayMsg" : "Displaying Person{0} - {1} of {2}",
           "displayInfo" : true,
           "* prop" : "footer"
          },
          {
           "xtype" : "Toolbar",
           "$ xns" : "Roo",
           "* prop" : "toolbar",
           "items" : [
            {
             "text" : "Search",
             "xtype" : "TextItem",
             "$ xns" : "Roo.Toolbar"
            },
            {
             "listeners" : {
              "specialkey" : "function (_self, e)\n{\n  if (e.getKey() == 13) {\n    _this.grid.footer.onClick('first');\n  }\n}",
              "show" : "function (_self,e)\n{\n    if (e.getCharCode() != 13) {\n        return;\n    }\n    _this.grid.footer.onClick('first');\n}",
              "render" : "function (_self)\n{\n    _this.searchBox = _self;\n}"
             },
             "xtype" : "TextField",
             "$ xns" : "Roo.form"
            },
            {
             "listeners" : {
              "|click" : "function (_self, e)\n{\n_this.grid.footer.onClick('first');\n}"
             },
             "xtype" : "Button",
             "cls" : "x-btn-icon",
             "$ icon" : "rootURL + '/Pman/templates/images/search.gif'",
             "$ xns" : "Roo.Toolbar"
            },
            {
             "listeners" : {
              "|click" : "function (_self, e)\n{\n_this.searchBox.setValue('');\n    _this.grid.footer.onClick('first');\n}"
             },
             "xtype" : "Button",
             "cls" : "x-btn-icon",
             "$ icon" : "rootURL + '/Pman/templates/images/edit-clear.gif'",
             "$ xns" : "Roo.Toolbar"
            },
            {
             "xtype" : "Fill",
             "$ xns" : "Roo.Toolbar"
            },
            {
             "listeners" : {
              "|click" : "function()\n{\n    var sels= _this.grid.selModel.getSelections();\n    \n    if (!sels || !sels.length) {\n        Roo.MessageBox.alert(\"Error\", \"Select some documents\");\n        return;\n    }\n    \n    if(sels.length > 1){\n        Roo.MessageBox.alert('Error', 'you can only select one document');\n        return;\n    }\n    var d = sels[0].data;\n    \n    //Roo.MessageBox.prompt('Debugging Diff', 'Fill in the release id', function(e, v){\n    \n        new Pman.Request({\n            url : baseURL + '/PressRelease/Import/Debug.php',\n            method :'GET',\n            params : {\n                action: '_linkcheck',\n                reader_id : d.id,\n                project_id: _this.projectCombo.getValue()\n            },\n            success : function(res) {\n                // do nothing\n                Roo.MessageBox.alert('Done', res.data+'% Matched');\n            },\n            failure : function() \n            {\n                Roo.MessageBox.alert(\"Error\", \"saving failed\", function() {\n                    _this.grid.footer.onClick('first');\n                });\n            }\n        });\n        \n       // });\n    \n    \n    \n    \n    \n}\n        "
             },
             "text" : "Link Check",
             "xtype" : "Button",
             "$ xns" : "Roo.Toolbar"
            },
            {
             "listeners" : {
              "|click" : "function()\n{\n    var sels= _this.grid.selModel.getSelections();\n    \n    if (!sels || !sels.length) {\n        Roo.MessageBox.alert(\"Error\", \"Select some documents\");\n        return;\n    }\n    \n    if(sels.length > 1){\n        Roo.MessageBox.alert('Error', 'you can only select one document');\n        return;\n    }\n    var d = sels[0].data;\n    \n    //Roo.MessageBox.prompt('Debugging Diff', 'Fill in the release id', function(e, v){\n    \n        new Pman.Request({\n            url : baseURL + '/PressRelease/Import/Debug.php',\n            method :'GET',\n            params : {\n                action: '_diff',\n                reader_id : d.id,\n                project_id: _this.projectCombo.getValue()\n            },\n            success : function(res) {\n                // do nothing\n                Roo.MessageBox.alert('Done', res.data+'% Matched');\n            },\n            failure : function() \n            {\n                Roo.MessageBox.alert(\"Error\", \"saving failed\", function() {\n                    _this.grid.footer.onClick('first');\n                });\n            }\n        });\n        \n       // });\n    \n    \n    \n    \n    \n}\n        "
             },
             "text" : "Diff Article",
             "xtype" : "Button",
             "$ xns" : "Roo.Toolbar"
            },
            {
             "listeners" : {
              "|click" : "function()\n{\n    var sels= _this.grid.selModel.getSelections();\n    \n    if (!sels || !sels.length) {\n        Roo.MessageBox.alert(\"Error\", \"Select some documents\");\n        return;\n    }\n    \n    if(sels.length > 1){\n        Roo.MessageBox.alert('Error', 'you can only select one document');\n        return;\n    }\n    var d = sels[0].data;\n    \n    \n    new Pman.Download({\n        newWindow: true,\n        url : baseURL + '/PressRelease/Import/Debug.php',\n        params : {\n            action: '_download',\n            reader_id : d.id\n        }\n    });\n    \n}\n"
             },
             "text" : "Download Article",
             "xtype" : "Button",
             "$ xns" : "Roo.Toolbar"
            },
            {
             "listeners" : {
              "|click" : "function()\n{\n    var sels= _this.grid.selModel.getSelections();\n    \n    if (!sels || !sels.length) {\n        Roo.MessageBox.alert(\"Error\", \"Select some documents\");\n        return;\n    }\n    \n    if(sels.length > 1){\n        Roo.MessageBox.alert('Error', 'you can only select one document');\n        return;\n    }\n    var d = sels[0].data;\n    \n    \n    new Pman.Download({\n        newWindow: true,\n        url : baseURL + '/PressRelease/Import/Debug.php',\n        params : {\n            action: '_rebuild',\n            reader_id : d.id\n        }\n    });\n    \n}\n"
             },
             "text" : "Rebuild & Download",
             "xtype" : "Button",
             "$ xns" : "Roo.Toolbar"
            }
           ]
          },
          {
           "xtype" : "ColumnModel",
           "sortable" : true,
           "header" : "ID",
           "width" : 50,
           "$ renderer" : "function(v,x,r) {\n    return String.format('{0}', v); \n}",
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "dataIndex" : "id"
          },
          {
           "xtype" : "ColumnModel",
           "header" : "Fetched",
           "width" : 50,
           "$ renderer" : "function(v,x,r) { \n    return String.format('{0}', r.data.fetched * 1 ? v.format('h:i d/M') : '-'); \n}",
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "dataIndex" : "fetched_dt"
          },
          {
           "xtype" : "ColumnModel",
           "sortable" : true,
           "header" : "Campaign",
           "width" : 50,
           "$ renderer" : "function(v,x,r) {\n    return String.format('{0}', v); \n}",
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "dataIndex" : "campaign_id_name"
          },
          {
           "xtype" : "ColumnModel",
           "sortable" : true,
           "header" : "Headline",
           "width" : 150,
           "$ renderer" : "function(v,x,r) {\n    \n    return String.format('{0}', v); \n}",
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "dataIndex" : "headline"
          },
          {
           "xtype" : "ColumnModel",
           "sortable" : true,
           "header" : "Body",
           "width" : 200,
           "$ renderer" : "function(v) { return String.format('{0}', v); }",
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "dataIndex" : "body"
          },
          {
           "xtype" : "ColumnModel",
           "header" : "From",
           "width" : 100,
           "$ renderer" : "function(v) { return String.format('{0}', v); }",
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "dataIndex" : "src_id_description"
          },
          {
           "xtype" : "ColumnModel",
           "header" : "URL",
           "width" : 200,
           "$ renderer" : "function(v,x,r) { return String.format('<a href=\"{0}\" target=\"_new\">{0}</a>', v.length ? v : r.data.url ); }",
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "dataIndex" : "real_url"
          },
          {
           "xtype" : "ColumnModel",
           "header" : "Language",
           "width" : 50,
           "$ renderer" : "function(v) { return String.format('{0}', v); }",
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "dataIndex" : "language"
          }
         ]
        }
       ]
      }
     ]
    }
   ]
  }
 ]
}