{
 "gen_extended" : false,
 "items" : [
  {
   "$ xns" : "Roo.panel",
   "Boolean background" : true,
   "String region" : "center",
   "String title" : "Pulldown Options",
   "items" : [
    {
     "$ xns" : "Roo",
     "* prop" : "layout",
     "items" : [
      {
       "$ xns" : "Roo",
       "* prop" : "west",
       "Boolean split" : true,
       "Number width" : 200,
       "xtype" : "LayoutRegion"
      },
      {
       "$ xns" : "Roo",
       "* prop" : "center",
       "xtype" : "LayoutRegion"
      },
      {
       "$ xns" : "Roo.panel",
       "Boolean background" : true,
       "items" : [
        {
         "$ xns" : "Roo.grid",
         "* prop" : "grid",
         "autoExpandColumn" : "display_name",
         "clicksToEdit" : 1,
         "items" : [
          {
           "$ sortInfo" : "{ field : 'display_name', direction: 'ASC' }",
           "$ xns" : "Roo.data",
           "* prop" : "dataSource",
           "items" : [
            {
             "$ url" : "baseURL + '/Roo/core_enum.php'",
             "$ xns" : "Roo.data",
             "* prop" : "proxy",
             "method" : "GET",
             "xtype" : "HttpProxy"
            },
            {
             "$ fields" : [
              "[",
              "    {",
              "        'name': 'id',",
              "        'type': 'int'",
              "    },",
              "    {",
              "        'name': 'etype',",
              "        'type': 'string'",
              "    },",
              "    {",
              "        'name': 'name',",
              "        'type': 'string'",
              "    },",
              "    {",
              "        'name': 'active',",
              "        'type': 'int'",
              "    },",
              "    {",
              "        'name': 'seqid',",
              "        'type': 'int'",
              "    }",
              "]"
             ],
             "$ xns" : "Roo.data",
             "* prop" : "reader",
             "id" : "id",
             "root" : "data",
             "totalProperty" : "total",
             "xtype" : "JsonReader"
            }
           ],
           "listeners" : {
            "beforeload" : [
             "function (_self, o)",
             "{",
             "    o.params['query[empty_etype]'] = 1; ",
             "  ",
             "}"
            ],
            "update" : [
             "function (_self, record, operation)",
             "{",
             "    if (operation != Roo.data.Record.COMMIT) {",
             "        return;",
             "    }",
             "    // got commit..",
             "    new Pman.Request({",
             "        url : baseURL + '/Roo/Core_enum.php',",
             "        method : 'POST',",
             "        params : {",
             "            id : record.data.id,",
             "            etype : _this.grid.ds.getById(record.id).data.etype,",
             "            name : record.data.name,",
             "            active : record.data.active,",
             "            seqid : record.data.seqid,",
             "            display_name : record.data.display_name",
             "        }, ",
             "        success : function(res) {",
             "            //Roo.log(data);",
             "            // update the ID if it's not set..",
             "            if (record.data.id * 1 < 1) {",
             "                record.set('id', res.data.id);",
             "            }",
             "        }",
             "    });",
             "    ",
             "}"
            ]
           },
           "remoteSort" : true,
           "xtype" : "Store"
          },
          {
           "$ xns" : "Roo.grid",
           "* prop" : "sm",
           "listeners" : {
            "selectionchange" : [
             "function (_self, selection)",
             "{",
             "    _this.grid.footer.onClick('first');",
             "}"
            ]
           },
           "xtype" : "CellSelectionModel"
          },
          {
           "$ xns" : "Roo",
           "* prop" : "footer",
           "displayInfo" : false,
           "displayMsg" : " ",
           "emptyMsg" : "No core_enum found",
           "pageSize" : 100,
           "xtype" : "PagingToolbar"
          },
          {
           "$ xns" : "Roo",
           "* prop" : "toolbar",
           "items" : [
            {
             "$ icon" : "Roo.rootURL + 'images/default/dd/drop-add.gif'",
             "$ xns" : "Roo.Toolbar",
             "cls" : "x-btn-text-icon",
             "listeners" : {
              "|click" : [
               "function()",
               "{",
               "    ",
               "    var data = {",
               "        active:1,",
               "        display_name:'',",
               "        etype:'',",
               "        name:''",
               "    };",
               "    Pman.Dialog.AdminEnumType.show(data,function(){",
               "        ",
               "        _this.egrid.footer.onClick('first');",
               "    });",
               "         ",
               "         ",
               "",
               "}",
               ""
              ]
             },
             "text" : "Add new pulldown list",
             "xtype" : "Button"
            }
           ],
           "xtype" : "Toolbar"
          },
          {
           "$ renderer" : [
            "function(v,x,r) { ",
            "",
            "",
            "    return String.format('<span qtip=\"{1}\">{0}</span>', (''+v).length ? v : r.data.name, r.data.name); ",
            "}"
           ],
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "dataIndex" : "display_name",
           "header" : "Pulldown",
           "width" : 200,
           "xtype" : "ColumnModel"
          },
          {
           "$ renderer" : [
            "function(v) {  ",
            "    var state = v> 0 ?  '-checked' : '';",
            "",
            "    return '<img class=\"x-grid-check-icon' + state + '\" src=\"' + Roo.BLANK_IMAGE_URL + '\"/>';",
            "                ",
            " }"
           ],
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "dataIndex" : "active",
           "header" : "Active",
           "width" : 50,
           "xtype" : "ColumnModel"
          }
         ],
         "listeners" : {
          "afteredit" : [
           "function (e)",
           "{",
           "   e.record.commit();     ",
           "}"
          ],
          "beforeedit" : [
           "function (e)",
           "{",
           "    if(e.field == 'name' && e.record.data.is_system_enum*1 == 1){",
           "        return false;",
           "    }",
           "}"
          ],
          "cellclick" : [
           "function (_self, rowIndex, columnIndex, e)",
           "{",
           "",
           "        var di = this.colModel.getDataIndex(columnIndex);",
           "        if (di != 'active') {",
           "            return;",
           "        }",
           "         ",
           "        var rec = _this.grid.ds.getAt(rowIndex);",
           "        ",
           "        rec.set('active', rec.data.active ? 0 : 1);",
           "        rec.commit();",
           "         ",
           "        ",
           "}"
          ],
          "celldblclick" : [
           "function (_self, rowIndex, columnIndex, e)",
           "{",
           "    var rec = _this.egrid.ds.getAt(rowIndex);",
           "    Pman.Dialog.AdminEnumType.show(rec.data,function(){",
           "        ",
           "        _this.egrid.footer.onClick('first');",
           "    });",
           "}"
          ],
          "|render" : [
           "function() ",
           "{",
           "    _this.egrid = this; ",
           "    //_this.dialog = Pman.Dialog.FILL_IN",
           "    if (_this.epanel.active) {",
           "       this.footer.onClick('first');",
           "    }",
           "}"
          ]
         },
         "loadMask" : true,
         "xtype" : "EditorGrid"
        }
       ],
       "listeners" : {
        "|activate" : [
         "function() {",
         "    _this.epanel = this;",
         "    //if (_this.egrid) {",
         "    //    _this.egrid.footer.onClick('first');",
         "    //}",
         "}"
        ]
       },
       "region" : "west",
       "tableName" : "core_enum",
       "title" : "Pulldown Options",
       "xtype" : "Grid"
      },
      {
       "$ xns" : "Roo.panel",
       "boolean background" : true,
       "fitToframe" : true,
       "items" : [
        {
         "$ xns" : "Roo.grid",
         "* prop" : "grid",
         "autoExpandColumn" : "display_name",
         "clicksToEdit" : 1,
         "items" : [
          {
           "$ sortInfo" : "{ field : 'etype', direction: 'ASC' }",
           "$ xns" : "Roo.data",
           "* prop" : "dataSource",
           "items" : [
            {
             "$ url" : "baseURL + '/Roo/core_enum.php'",
             "$ xns" : "Roo.data",
             "* prop" : "proxy",
             "method" : "GET",
             "xtype" : "HttpProxy"
            },
            {
             "$ fields" : [
              "[",
              "    {",
              "        'name': 'id',",
              "        'type': 'int'",
              "    },",
              "    {",
              "        'name': 'etype',",
              "        'type': 'string'",
              "    },",
              "    {",
              "        'name': 'name',",
              "        'type': 'string'",
              "    },",
              "    {",
              "        'name': 'active',",
              "        'type': 'int'",
              "    },",
              "    {",
              "        'name': 'seqid',",
              "        'type': 'int'",
              "    }",
              "]"
             ],
             "$ xns" : "Roo.data",
             "* prop" : "reader",
             "id" : "id",
             "root" : "data",
             "totalProperty" : "total",
             "xtype" : "JsonReader"
            }
           ],
           "listeners" : {
            "beforeload" : [
             "function (_self, options)",
             "{",
             "",
             "    var s =     _this.egrid.getSelectionModel().getSelectedCell();",
             "    ",
             "",
             "    if (!s) {",
             "        return false;",
             "    }",
             "    var d = _this.egrid.dataSource.getAt(s[0]);",
             "    ",
             "    options.params.etype = d.data.name;",
             "    options.params['query[search]'] = _this.searchBox.getValue();",
             "    if (!options.params.etype.length) {",
             "        return false;",
             "    }",
             "}"
            ],
            "update" : [
             "function (_self, record, operation)",
             "{",
             "    if (operation != Roo.data.Record.COMMIT) {",
             "        return;",
             "    }",
             "    // got commit..",
             "    new Pman.Request({",
             "        url : baseURL + '/Roo/Core_enum.php',",
             "        method : 'POST',",
             "        params : {",
             "            id : record.data.id,",
             "            etype : _this.grid.ds.getById(record.id).data.etype,",
             "            name : record.data.name,",
             "            active : record.data.active,",
             "            seqid : record.data.seqid,",
             "            display_name : record.data.display_name",
             "        }, ",
             "        success : function(res) {",
             "            //Roo.log(data);",
             "            // update the ID if it's not set..",
             "            if (record.data.id * 1 < 1) {",
             "                record.set('id', res.data.id);",
             "            }",
             "        }",
             "    });",
             "    ",
             "}"
            ]
           },
           "remoteSort" : true,
           "xtype" : "Store"
          },
          {
           "$ xns" : "Roo",
           "* prop" : "footer",
           "displayInfo" : true,
           "displayMsg" : "Displaying core_enum{0} - {1} of {2}",
           "emptyMsg" : "No core_enum found",
           "items" : [
            {
             "$ xns" : "Roo.Toolbar",
             "listeners" : {
              "click" : [
               "function (_self, e)",
               "{",
               "    new Pman.Download({",
               "        grid : _this.grid",
               "    });",
               "    Roo.MessageBox.alert(\"Downloading\", \"File is downloading\");",
               "}"
              ]
             },
             "text" : "Download",
             "xtype" : "Button"
            },
            {
             "$ xns" : "Roo.Toolbar",
             "listeners" : {
              "click" : [
               "function (_self, e)",
               "{",
               "",
               "  var s =     _this.egrid.getSelectionModel().getSelectedCell();",
               "    ",
               "",
               "    if (!s) {",
               "        Roo.MessageBox.alert(\"Error\", \"Select a pulldown\");",
               "    }",
               "    ",
               "    var d = _this.egrid.dataSource.getAt(s[0]);",
               " ",
               "",
               "    var etype = d.data.name;",
               "    ",
               "    if(!etype.length){",
               "        Roo.MessageBox.alert('Error', 'Please select a pulldown');",
               "        return;",
               "    }",
               "    ",
               "    Pman.Dialog.Image.show(",
               "       {",
               "            _url : baseURL+'/Admin/Import/Enum?' + Roo.urlEncode({'etype' : etype})",
               "        ",
               "       },",
               "       function () {",
               "            _this.grid.footer.onClick('first');",
               "       }",
               "   );",
               "}"
              ]
             },
             "text" : "Upload Values",
             "xtype" : "Button"
            }
           ],
           "pageSize" : 25,
           "xtype" : "PagingToolbar"
          },
          {
           "$ xns" : "Roo",
           "* prop" : "toolbar",
           "items" : [
            {
             "$ icon" : "rootURL + '/Pman/templates/images/search.gif'",
             "$ xns" : "Roo.Toolbar",
             "cls" : "x-btn-text-icon",
             "listeners" : {
              "|click" : [
               "function()",
               "{",
               "    ",
               "    // if we do not have a selected type... - what should we show..?",
               "    ",
               "    ",
               "    var s =     _this.egrid.getSelectionModel().getSelectedCell();",
               "    ",
               "",
               "    if (!s) {",
               "        Roo.MessageBox.alert(\"Error\", \"Select a pulldown\");",
               "    }",
               "    ",
               "    var d = _this.egrid.dataSource.getAt(s[0]);",
               " ",
               "",
               "    var ds = _this.grid.getDataSource();",
               "",
               "    var add = ds.reader.newRow({    ",
               "             id: 0, ",
               "             display_name : '', ",
               "             name : '', ",
               "             etype: d.data.name, ",
               "             active: 1, ",
               "             seqid: 0",
               "      });",
               "",
               "    ds.insert(0  , add);  ",
               "    ",
               "    _this.grid.startEditing(0, _this.grid.colModel.findColumnIndex('name')); // name... ",
               "}",
               ""
              ]
             },
             "text" : "Add Value",
             "xtype" : "Button"
            },
            {
             "$ icon" : "Roo.rootURL + 'images/default/dd/drop-add.gif'",
             "$ xns" : "Roo.Toolbar",
             "cls" : "x-btn-text-icon",
             "listeners" : {
              "|click" : [
               "function()",
               "{",
               "    ",
               "    // if we do not have a selected type... - what should we show..?",
               "    /*",
               "    var et = _this.etypeCombo.getValue();",
               "    ",
               "    if (!et) {",
               "        Roo.MessageBox.alert(\"Error\", \"Select a pulldown\");",
               "        return;",
               "    }",
               "    */",
               "    ",
               "    var sc = _this.egrid.getSelectionModel().getSelectedCell();",
               "    ",
               "    if (!sc) {",
               "        Roo.MessageBox.alert(\"Error\", \"Select a pulldown\");",
               "        return;",
               "    }",
               "    ",
               "    var ds = _this.egrid.ds.getAt(sc[0]);",
               "    ",
               "    if (!ds) {",
               "        Roo.MessageBox.alert(\"Error\", \"Select enum\");",
               "        return;",
               "    }",
               "    ",
               "    Roo.log(ds);",
               "    Pman.Dialog.AdminEnumImages.show({onid:ds.data.id}, function(){",
               "        _this.grid.footer.onClick('first');",
               "    });",
               "    ",
               "}",
               ""
              ]
             },
             "text" : "Add Image",
             "xtype" : "Button"
            },
            {
             "$ xns" : "Roo.form",
             "String fieldLabel" : "Search",
             "String name" : "search",
             "listeners" : {
              "render" : [
               "function (_self)",
               "{",
               "    _this.searchBox = this;",
               "}"
              ]
             },
             "xtype" : "TextField"
            },
            {
             "$ icon" : "rootURL + '/Pman/templates/images/search.gif'",
             "$ xns" : "Roo.Toolbar",
             "String cls" : "x-btn-icon",
             "listeners" : {
              "click" : [
               "function (_self, e)",
               "{",
               "    _this.grid.footer.onClick('first');",
               "}"
              ]
             },
             "xtype" : "Button"
            },
            {
             "$ icon" : "rootURL + '/Pman/templates/images/edit-clear.gif'",
             "$ xns" : "Roo.Toolbar",
             "String cls" : "x-btn-icon",
             "listeners" : {
              "click" : [
               "function (_self, e)",
               "{",
               "     _this.searchBox.setValue('');",
               "     _this.grid.footer.onClick('first');",
               "}"
              ]
             },
             "xtype" : "Button"
            },
            {
             "$ xns" : "Roo.Toolbar",
             "xtype" : "Fill"
            },
            {
             "$ icon" : "rootURL + '/Pman/templates/images/trash.gif'",
             "$ xns" : "Roo.Toolbar",
             "cls" : "x-btn-text-icon",
             "listeners" : {
              "|click" : [
               "function()",
               "{",
               "    var ids = [];",
               "    _this.grid.dataSource.each(function(rr) {",
               "        if (rr.selected) {",
               "            ids.push(rr.data.id);",
               "        }",
               "    });   ",
               "    if (!ids.length) {",
               "        Roo.MessageBox.alert(\"Error\", \"Select rows by clicking on the Internal# column\");",
               "        return;",
               "    }",
               "    ",
               "    Roo.MessageBox.confirm(",
               "        \"Confirm\", ",
               "        \"Confirm Deletion of selected rows (some rows can not be deleted if they are referenced elsewhere\", ",
               "        function(res) {",
               "            if(res != 'yes') {",
               "                return;",
               "            }",
               "            new Pman.Request({",
               "                method : 'POST',",
               "                url : baseURL + '/Roo/Core_enum',",
               "                params : {",
               "                    _delete  : ids.join(',')",
               "                },",
               "                success : function() {",
               "                    _this.grid.footer.onClick('refresh');",
               "                }",
               "            });",
               "        }",
               "    );",
               "    ",
               "    ",
               "}",
               "",
               "        "
              ]
             },
             "text" : "Delete",
             "xtype" : "Button"
            },
            {
             "$ xns" : "Roo.Toolbar",
             "xtype" : "Separator"
            },
            {
             "$ icon" : "Roo.rootURL + 'images/default/tree/leaf.gif'",
             "$ xns" : "Roo.Toolbar",
             "cls" : "x-btn-text-icon",
             "listeners" : {
              "|click" : [
               "function()",
               "{",
               "",
               "    var s = _this.grid.getSelectionModel().getSelectedCell();",
               "",
               "    if (!s.length)  {",
               "        Roo.MessageBox.alert(\"Error\", \"Select a Row\");",
               "        return;",
               "    }",
               "    ",
               "    var d = _this.grid.ds.getAt(s[0]);",
               "    console.log(Pman.Dialog);",
               "    Pman.Dialog.AdminEnumMerge.show(d.data, function() {",
               "        _this.grid.footer.onClick('refresh');",
               "    }); ",
               "    ",
               "}",
               ""
              ]
             },
             "text" : "Merge Option",
             "xtype" : "Button"
            }
           ],
           "xtype" : "Toolbar"
          },
          {
           "$ renderer" : [
            "function(v,x,r) { ",
            "    var fmt = '{0}';",
            "    if (r.selected) {",
            "        fmt = '<span style=\"color:orange;font-weight:bold;\">{0}</span>';",
            "    }",
            "    return String.format(fmt, v); }"
           ],
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "Boolean sortable" : true,
           "dataIndex" : "id",
           "header" : "Internal #",
           "width" : 75,
           "xtype" : "ColumnModel"
          },
          {
           "$ renderer" : "function(v,x,r) { return String.format('<img src=\"{0}/Images/Thumb/25/{1}/{2}\" width=\"25\" height=\"25\">', baseURL, v, r.data.images_id_filename); }",
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "dataIndex" : "images_id_id",
           "header" : "Image",
           "width" : 75,
           "xtype" : "ColumnModel"
          },
          {
           "$ renderer" : "function(v) { return String.format('{0}', v); }",
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "Boolean sortable" : true,
           "dataIndex" : "name",
           "header" : "Name",
           "items" : [
            {
             "$ xns" : "Roo.grid",
             "* prop" : "editor",
             "items" : [
              {
               "$ xns" : "Roo.form",
               "* prop" : "field",
               "xtype" : "TextField"
              }
             ],
             "xtype" : "GridEditor"
            }
           ],
           "width" : 200,
           "xtype" : "ColumnModel"
          },
          {
           "$ renderer" : "function(v) { return String.format('{0}', v); }",
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "Boolean sortable" : true,
           "dataIndex" : "display_name",
           "header" : "Display Name",
           "items" : [
            {
             "$ xns" : "Roo.grid",
             "* prop" : "editor",
             "items" : [
              {
               "$ xns" : "Roo.form",
               "* prop" : "field",
               "xtype" : "TextField"
              }
             ],
             "xtype" : "GridEditor"
            }
           ],
           "width" : 200,
           "xtype" : "ColumnModel"
          },
          {
           "$ renderer" : [
            "function(v) {  ",
            "    var state = v> 0 ?  '-checked' : '';",
            "",
            "    return '<img class=\"x-grid-check-icon' + state + '\" src=\"' + Roo.BLANK_IMAGE_URL + '\"/>';",
            "                ",
            " }"
           ],
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "Boolean sortable" : true,
           "dataIndex" : "active",
           "header" : "Active",
           "width" : 75,
           "xtype" : "ColumnModel"
          },
          {
           "$ renderer" : "function(v) { return String.format('{0}', v); }",
           "$ xns" : "Roo.grid",
           "* prop" : "colModel[]",
           "dataIndex" : "seqid",
           "header" : "Order #",
           "items" : [
            {
             "$ xns" : "Roo.grid",
             "* prop" : "editor",
             "items" : [
              {
               "$ xns" : "Roo.form",
               "* prop" : "field",
               "allowDecimals" : false,
               "allowNegative" : true,
               "decimalPrecision" : 0,
               "xtype" : "NumberField"
              }
             ],
             "xtype" : "GridEditor"
            }
           ],
           "sortable" : true,
           "width" : 75,
           "xtype" : "ColumnModel"
          }
         ],
         "listeners" : {
          "afteredit" : [
           "function (e)",
           "{",
           "   e.record.commit();     ",
           "}"
          ],
          "beforeedit" : [
           "function (e)",
           "{",
           "    if(e.field == 'name' && e.record.data.is_system_enum*1 == 1){",
           "        return false;",
           "    }",
           "}"
          ],
          "cellclick" : [
           "function (_self, rowIndex, columnIndex, e)",
           "{",
           "",
           "        var di = this.colModel.getDataIndex(columnIndex);",
           "        var rec = _this.grid.ds.getAt(rowIndex);",
           "            ",
           "        if (di == 'active') {",
           "            ",
           "            rec.set('active', rec.data.active ? 0 : 1);",
           "            rec.commit();",
           "            return;",
           "        }",
           "        if (di == 'id' ) {",
           "            ",
           "            if (!e.ctrlKey && !e.shiftKey) { // shift or control not pressed -clear selection.",
           "            ",
           "                this.dataSource.each(function(rr) {",
           "                    rr.selected = 0;",
           "                    rr.set('sel', 0);",
           "                });",
           "            }",
           "            ",
           "            if (this.last_selected && e.shiftKey) {",
           "                // the highlight all the lines between the one last selected, and this one.",
           "                var s = this.dataSource.indexOf(this.last_selected);",
           "                var e = this.dataSource.indexOf(rec);",
           "                var ss = Math.min(s,e);",
           "                var ee = Math.max(s,e) +1;",
           "                for(var i = ss; i < ee; i++) {",
           "                    var rr = this.dataSource.getAt(i);",
           "                    rr.selected = 1;",
           "                    rr.set('sel', 1);",
           "                }",
           "                this.last_selected = rec;",
           "                return;",
           "",
           "            }",
           "            ",
           "            rec.selected = rec.selected ? 0 : 1;",
           "            this.last_selected = rec.selected ? rec : false;",
           "            rec.set('sel', rec.data.sel ? 0 : 1);",
           "        }",
           "         ",
           "",
           "         ",
           "        ",
           "}"
          ],
          "keypress" : [
           "function (e)",
           "{",
           "    if(e.keyCode == 13){",
           "        _this.grid.footer.onClick('first');",
           "    }",
           "}"
          ],
          "|render" : [
           "function() ",
           "{",
           "    _this.grid = this; ",
           "    //_this.dialog = Pman.Dialog.FILL_IN",
           "    if (_this.panel.active) {",
           "       this.footer.onClick('first');",
           "    }",
           "}"
          ]
         },
         "loadMask" : true,
         "xtype" : "EditorGrid"
        }
       ],
       "listeners" : {
        "|activate" : [
         "function() {",
         "    _this.panel = this;",
         "    if (_this.grid) {",
         "        _this.grid.footer.onClick('first');",
         "    }",
         "}"
        ]
       },
       "region" : "center",
       "tableName" : "core_enum",
       "title" : "Pulldown Options",
       "xtype" : "Grid"
      }
     ],
     "xtype" : "BorderLayout"
    }
   ],
   "xtype" : "NestedLayout"
  }
 ],
 "modOrder" : "500",
 "name" : "Pman.Tab.AdminEnum",
 "named_strings" : {
  "search_fieldLabel" : "13348442cc6a27032d2b4aa28b75a5d3"
 },
 "parent" : "Pman.Tab.Admin",
 "permname" : "",
 "strings" : {
  "1206eb8aea05be4625371c9c12818785" : "Pulldown",
  "13348442cc6a27032d2b4aa28b75a5d3" : "Search",
  "1a87a3d29199e3435b8fb314624c008f" : "Merge Option",
  "1ba4d808fc7b27a7f60ce2ff75a8af3a" : "No core_enum found",
  "2df80d5febcde0c10a66818488622b7c" : "Pulldown Options",
  "49ee3087348e8d44e1feda1917443987" : "Name",
  "4d3d769b812b6faa6b76e1a8abaece2d" : "Active",
  "510bc6e58593b2b8002c9fe0c21f3fde" : "Displaying core_enum{0} - {1} of {2}",
  "7af54708cf5a4286cf0cfa58ff5148a8" : "Internal #",
  "801ab24683a4a8c433c6eb40c48bcd9d" : "Download",
  "b48968e1c912da07df5e8d6d246291ec" : "Display Name",
  "b9c49611cfda3259a2b837b39489e650" : "Add Image",
  "be53a0541a6d36f6ecb879fa2c584b08" : "Image",
  "c550aeed26e71a81a88360c1889245ab" : "Upload Values",
  "d1228f5476d15142b1358ae4b5fa2454" : "Order #",
  "d41d8cd98f00b204e9800998ecf8427e" : " ",
  "d9ec74f5aa29ceef6bf7b45f7fec5d0f" : "Add Value",
  "f2a6c498fb90ee345d997f888fce3b18" : "Delete",
  "fdff10eac021dfbb69e9c38204237fdc" : "Add new pulldown list"
 },
 "title" : "Pman.Tab.AdminEnum"
}