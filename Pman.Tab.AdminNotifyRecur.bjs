{
 "items" : [
  {
   "$ xns" : "Roo",
   "background" : true,
   "fitContainer" : true,
   "fitToframe" : true,
   "items" : [
    {
     "$ xns" : "Roo.grid",
     "* prop" : "grid",
     "autoExpandColumn" : "person_id_name",
     "items" : [
      {
       "$ xns" : "Roo",
       "* prop" : "toolbar",
       "items" : [
        {
         "$ xns" : "Roo.form",
         "allowBlank" : true,
         "displayField" : "person_id_name",
         "editable" : true,
         "emptyText" : "Select person",
         "forceSelection" : true,
         "hiddenName" : "id",
         "items" : [
          {
           "$ sortInfo" : "{ direction : 'ASC', field: 'person_id_name' }",
           "$ xns" : "Roo.data",
           "* prop" : "store",
           "items" : [
            {
             "$ url" : "baseURL + '/Roo/core_notify_recur.php'",
             "$ xns" : "Roo.data",
             "* prop" : "proxy",
             "method" : "GET",
             "xtype" : "HttpProxy"
            },
            {
             "$ fields" : "[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"ontable\",\"type\":\"string\"}]",
             "$ xns" : "Roo.data",
             "* prop" : "reader",
             "id" : "id",
             "root" : "data",
             "totalProperty" : "total",
             "xtype" : "JsonReader"
            }
           ],
           "listeners" : {
            "|beforeload" : [
             "function (_self, o){",
             "    o.params = o.params || {};",
             "    o.params._distinct='person_id';",
             "    o.params._columns='person_id,person_id_name,person_id_email';",
             "    o.params['!person_id_name'] = '';",
             "    ",
             "    // set more here",
             "}",
             ""
            ]
           },
           "remoteSort" : true,
           "xtype" : "Store"
          }
         ],
         "listWidth" : 400,
         "listeners" : {
          "render" : [
           "function (_self)",
           "{",
           "   _this.personCombo = _self;",
           "}"
          ],
          "select" : [
           "function (combo, record, index)",
           "{",
           "   (function() { _this.grid.footer.onClick('first'); }).defer(100);",
           "}"
          ]
         },
         "loadingText" : "Searching...",
         "minChars" : 2,
         "name" : "name",
         "pageSize" : 20,
         "qtip" : "Select core_notify",
         "queryParam" : "query[person_id_name]",
         "selectOnFocus" : true,
         "tpl" : "<div class=\"x-grid-cell-text x-btn button\"><b>{person_id_name}</b> {person_id_email}</div>",
         "triggerAction" : "all",
         "valueField" : "person_id",
         "width" : 300,
         "xtype" : "ComboBox"
        },
        {
         "$ xns" : "Roo.Toolbar",
         "xtype" : "Fill"
        },
        {
         "$ icon" : "Roo.rootURL + 'images/default/dd/drop-add.gif'",
         "$ xns" : "Roo.Toolbar",
         "cls" : "x-btn-text-icon",
         "listeners" : {
          "|click" : [
           "function()",
           "{",
           "    Pman.Dialog.AdminNotifyRecur.show( { id : 0 } , function() {",
           "        _this.grid.footer.onClick('first');",
           "   }); ",
           "}"
          ]
         },
         "text" : "Add",
         "xtype" : "Button"
        },
        {
         "$ icon" : "rootURL + '/Pman/templates/images/trash.gif'",
         "$ xns" : "Roo.Toolbar",
         "cls" : "x-btn-text-icon",
         "listeners" : {
          "|click" : [
           "function()",
           "{",
           "     Pman.genericDelete(_this, 'core_notify_recur'); ",
           "}",
           "        "
          ]
         },
         "text" : "Delete",
         "xtype" : "Button"
        }
       ],
       "xtype" : "Toolbar"
      },
      {
       "$ sortInfo" : "{ field : 'person_id_name', direction: 'ASC' }",
       "$ xns" : "Roo.data",
       "* prop" : "dataSource",
       "items" : [
        {
         "$ url" : "baseURL + '/Roo/core_notify_recur.php'",
         "$ xns" : "Roo.data",
         "* prop" : "proxy",
         "method" : "GET",
         "xtype" : "HttpProxy"
        },
        {
         "$ fields" : [
          "[",
          "    {",
          "        'name': 'id',",
          "        'type': 'int'",
          "    },",
          "    {",
          "        'name': 'person_id',",
          "        'type': 'int'",
          "    },",
          "    {",
          "        'name': 'dtstart',",
          "        'type': 'date',",
          "        'dateFormat': 'Y-m-d'",
          "    },",
          "    {",
          "        'name': 'dtend',",
          "        'type': 'date',",
          "        'dateFormat': 'Y-m-d'",
          "    },",
          "    {",
          "        'name': 'max_applied_dt',",
          "        'type': 'date',",
          "        'dateFormat': 'Y-m-d'",
          "    },",
          "    {",
          "        'name': 'updated_dt',",
          "        'type': 'date',",
          "        'dateFormat': 'Y-m-d'",
          "    },",
          "    {",
          "        'name': 'last_applied_dt',",
          "        'type': 'date',",
          "        'dateFormat': 'Y-m-d'",
          "    },",
          "    {",
          "        'name': 'tz',",
          "        'type': 'string'",
          "    },",
          "    {",
          "        'name': 'freq',",
          "        'type': 'string'",
          "    },",
          "    {",
          "        'name': 'freq_day',",
          "        'type': 'string'",
          "    },",
          "    {",
          "        'name': 'freq_hour',",
          "        'type': 'string'",
          "    },",
          "    {",
          "        'name': 'onid',",
          "        'type': 'int'",
          "    },",
          "    {",
          "        'name': 'ontable',",
          "        'type': 'string'",
          "    },",
          "    {",
          "        'name': 'last_event_id',",
          "        'type': 'int'",
          "    },",
          "    {",
          "        'name': 'method',",
          "        'type': 'string'",
          "    }",
          "]"
         ],
         "$ xns" : "Roo.data",
         "* prop" : "reader",
         "id" : "id",
         "root" : "data",
         "totalProperty" : "total",
         "xtype" : "JsonReader"
        }
       ],
       "listeners" : {
        "beforeload" : [
         "function (_self, options)",
         "{",
         "    if (!_this.personCombo) {",
         "        return false;",
         "    }",
         "    var p = _this.personCombo.getValue();",
         "    if (p*1) { ",
         "        options.params.person_id = p;",
         "    }",
         "}"
        ]
       },
       "remoteSort" : true,
       "xtype" : "Store"
      },
      {
       "$ xns" : "Roo",
       "* prop" : "footer",
       "displayInfo" : true,
       "displayMsg" : "Displaying core_notify_recur{0} - {1} of {2}",
       "emptyMsg" : "No core_notify_recur found",
       "pageSize" : 25,
       "xtype" : "PagingToolbar"
      },
      {
       "$ renderer" : [
        "function(v,x,r) { ",
        "    return String.format('{0} <a href=\"mailto:{1}\">{1}</a>', v,r.data.person_id_email); ",
        "}"
       ],
       "$ xns" : "Roo.grid",
       "* prop" : "colModel[]",
       "dataIndex" : "person_id_name",
       "header" : "Person",
       "width" : 75,
       "xtype" : "ColumnModel"
      },
      {
       "$ renderer" : "function(v) { return String.format('{0}', v ? v.format('d/M/Y') : ''); }",
       "$ xns" : "Roo.grid",
       "* prop" : "colModel[]",
       "dataIndex" : "dtstart",
       "header" : "Dtstart",
       "width" : 75,
       "xtype" : "ColumnModel"
      },
      {
       "$ renderer" : "function(v) { return String.format('{0}', v ? v.format('d/M/Y') : ''); }",
       "$ xns" : "Roo.grid",
       "* prop" : "colModel[]",
       "dataIndex" : "dtend",
       "header" : "Dtend",
       "width" : 75,
       "xtype" : "ColumnModel"
      },
      {
       "$ renderer" : "function(v) { return String.format('{0}', v); }",
       "$ xns" : "Roo.grid",
       "* prop" : "colModel[]",
       "dataIndex" : "freq_day",
       "header" : "Freq day",
       "width" : 200,
       "xtype" : "ColumnModel"
      },
      {
       "$ renderer" : "function(v) { return String.format('{0}', v); }",
       "$ xns" : "Roo.grid",
       "* prop" : "colModel[]",
       "dataIndex" : "freq_hour",
       "header" : "Freq hour",
       "width" : 200,
       "xtype" : "ColumnModel"
      },
      {
       "$ renderer" : [
        "function(v) {",
        "    return String.format('{0}', v);",
        " }"
       ],
       "$ xns" : "Roo.grid",
       "* prop" : "colModel[]",
       "dataIndex" : "medium",
       "header" : "What happens",
       "width" : 300,
       "xtype" : "ColumnModel"
      },
      {
       "$ renderer" : "function(v,x,r) { return String.format('{0}', v); }",
       "$ xns" : "Roo.grid",
       "* prop" : "colModel[]",
       "dataIndex" : "onid",
       "header" : "On ID",
       "width" : 75,
       "xtype" : "ColumnModel"
      }
     ],
     "listeners" : {
      "|render" : [
       "function() ",
       "{",
       "    _this.grid = this; ",
       "    //_this.dialog = Pman.Dialog.FILL_IN",
       "    if (_this.panel.active) {",
       "       this.footer.onClick('first');",
       "    }",
       "}"
      ],
      "|rowdblclick" : [
       "function (_self, rowIndex, e)",
       "{",
       "    Pman.Dialog.AdminNotifyRecur.show( this.getDataSource().getAt(rowIndex).data, function() {",
       "        _this.grid.footer.onClick('first');",
       "    }); ",
       "}",
       ""
      ]
     },
     "loadMask" : true,
     "xtype" : "Grid"
    }
   ],
   "listeners" : {
    "|activate" : [
     "function() {",
     "    _this.panel = this;",
     "    if (_this.grid) {",
     "        _this.grid.footer.onClick('first');",
     "    }",
     "}"
    ]
   },
   "region" : "center",
   "tableName" : "core_notify_recur",
   "title" : "Recurrent Notifications",
   "xtype" : "GridPanel"
  }
 ],
 "modOrder" : "800",
 "name" : "Pman.Tab.AdminNotifyRecur",
 "named_strings" : {
  "name_emptyText" : "c956c97343a45cca5d492e70c56daa8e",
  "name_loadingText" : "1243daf593fa297e07ab03bf06d925af",
  "name_qtip" : "04df30d61712300fd31c24e2c7c8f9bc"
 },
 "parent" : "Pman.Tab.AdminWatchNotify",
 "path" : "/home/leon/gitlive/web.MediaOutreach/Pman/Admin/Pman.Tab.AdminNotifyRecur.bjs",
 "permname" : "",
 "strings" : {
  "04df30d61712300fd31c24e2c7c8f9bc" : "Select core_notify",
  "1243daf593fa297e07ab03bf06d925af" : "Searching...",
  "21bddcad370deebd6d6544016b18ed23" : "On ID",
  "25af45209313b11d55424103567a1347" : "Dtend",
  "40bed7cf9b3d4bb3a3d7a7e3eb18c5eb" : "Person",
  "56abc507eda6d3226af192bf9b0e5d1f" : "What happens",
  "6ffde0d71e2b678e619e4a642d0b22a6" : "Freq hour",
  "83b9a425d6b152330823ab8357f441ae" : "Dtstart",
  "ac2c474467a60fa4e2c88158a6d2abf9" : "Freq day",
  "be3c26f9baf09972ddc410c5c7c63403" : "Displaying core_notify_recur{0} - {1} of {2}",
  "c348b06d2667edd048ded3c1b1878cc1" : "Recurrent Notifications",
  "c956c97343a45cca5d492e70c56daa8e" : "Select person",
  "ec211f7c20af43e742bf2570c3cb84f9" : "Add",
  "effad6ff1d36887ce57d05300912bf61" : "No core_notify_recur found",
  "f2a6c498fb90ee345d997f888fce3b18" : "Delete"
 },
 "title" : "Pman.Tab.AdminNotifyRecur"
}