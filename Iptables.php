<?php
/***
 * how this might work..
 *
 * a) login - if it's a new IP not seen that day
 * --> touch /tmp/run_pman_admin_iptables
 *
 * cron every minute... ?? << could do some kind of IPC?!?
 *
 * if file exists -> run this code.
 *
 * This code finds all the IP's used in the last 24 hours.
 * and opens the firew all for them.
 *
 *
 *
 */

require_once 'Pman.php';

class Pman_Admin_Iptables extends Pman {
    
    static $cli_desc = "Read ip addresses that have been used to log in, and add them to the iptables list..";
    
   
    
    function getAuth()
    {
        if (!$this->bootLoader->cli) {
            die("cli only");
        }
     }
    function get()
    {
        // find IP's that have been used to log in.
        // dump them to the iptables file.
        // if it's different - apply it...
        //DB_DataObject::debugLevel(1);
        // need to get a list of users who have Admin.Iptables rights..
        /*$gr = DB_DataObject::factory('group_rights');
        $grps = $gr->groupsWithRights('Admin.Iptables', 'S');
        
        $gr = DB_DataObject::factory('groups');
        $gr->get('name', 'Administrators');
        $grps[] = $gr->id;
        
        $gm = DB_DataObject::factory('group_members');
        $gm->whereAddIn('group_id', $grps, 'int');
        $gm->selectAdd();
        $gm->selectAdd('distinct(user_id) as user_id');
        $peps = $gm->fetchAll('user_id');
        
        
        */
        
        
        $p = DB_DataObject::Factory('Person');
        $p->autoJoin();
        $p->whereAdd("join_company_id_id.comptype = 'OWNER'");
        $p->selectAdd();
        $p->selectAdd("{$p->tableName()}.id as  id");
        
        $peps = $p->fetchAll('id');
        
        
        $e = DB_DataObject::factory('Events');
        $e->action = 'LOGIN';
        $e->selectAdd();
        $e->selectAdd('distinct(ipaddr) as ipaddr');
        $e->person_table = DB_DataObject::factory('person')->tableName();
        $e->whereAddIn('person_id', $peps, 'int');
        switch( $e->getDatabaseConnection()->phptype) {
            case 'mysql':
                $e->whereAdd("event_when > NOW() - INTERVAL 1 DAY");
                break;
            case 'pgsql':
                $e->whereAdd("event_when > NOW() - INTERVAL '1 DAY'");
                break;   
        }
        $ips = $e->fetchAll('ipaddr');


    }
    function output()
    {
        $out = "
# Generated by Pman/Admin/Iptables
*filter
:INPUT ACCEPT [85:8612]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [50:29080]
:postgres - [0:0]
-A INPUT -p udp -m udp --dport 5432 -j postgres
-A INPUT -p tcp -m tcp --dport 5432 -j postgres
";

        foreach($this->ips as $ip) {
            $out. = "-A postgres -s {$ip}/32 -j ACCEPT\n";
        }
-A postgres -s 175.139.168.140/32 -j ACCEPT
-A postgres -s 202.156.125.54/32 -j ACCEPT
-A postgres -s 58.248.38.177/32 -j ACCEPT
-A postgres -s 121.6.143.9/32 -j ACCEPT
-A postgres -s 118.101.201.42/32 -j ACCEPT
-A postgres -s 124.13.188.60/32 -j ACCEPT
-A postgres -s 180.216.52.6/32 -j ACCEPT
-A postgres -s 121.6.139.249/32 -j ACCEPT
-A postgres -s 203.45.151.97/32 -j ACCEPT
-A postgres -s 219.92.254.97/32 -j ACCEPT
-A postgres -s 219.92.253.105/32 -j ACCEPT
-A postgres -s 202.156.8.10/32 -j ACCEPT
-A postgres -s 116.14.194.117/32 -j ACCEPT
-A postgres -s 116.14.194.50/32 -j ACCEPT
-A postgres -s 116.15.103.139/32 -j ACCEPT
-A postgres -s 116.15.103.249/32 -j ACCEPT
-A postgres -s 124.13.206.21/32 -j ACCEPT
-A postgres -s 202.156.120.64/32 -j ACCEPT
-A postgres -s 202.156.121.99/32 -j ACCEPT
-A postgres -s 202.81.246.113/32 -j ACCEPT
-A postgres -s 203.198.125.197/32 -j ACCEPT
-A postgres -s 203.198.151.192/32 -j ACCEPT
-A postgres -s 220.255.1.0/24 -j ACCEPT
-A postgres -s 121.6.177.126/32 -j ACCEPT 
-A postgres -s 121.6.144.200/32 -j ACCEPT 
-A postgres -s 121.6.221.249/32 -j ACCEPT
-A postgres -s 202.81.255.1/32 -j ACCEPT 
-A postgres -s 202.156.125.202/32 -j ACCEPT
-A postgres -s 127.0.0.1/32 -j ACCEPT
-A postgres -m limit --limit 2/min -j LOG --log-prefix "IPTables-Dropped: " --log-level 4
-A postgres -j DROP
COMMIT
# Completed on Sun Feb  3 17:14:43 2013

        
        print_r($ips);exit;
        
         

        
    }
    
}