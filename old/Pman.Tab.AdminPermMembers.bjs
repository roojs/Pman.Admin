{
 "name" : "Pman.Tab.AdminPermMembers",
 "parent" : "Pman.Tab.AdminPermManager",
 "title" : "Pman.Tab.AdminPermMembers",
 "path" : "/home/khlau/gitlive/web.coba/Pman.Admin/old/Pman.Tab.AdminPermMembers.bjs",
 "permname" : "",
 "modOrder" : "001",
 "strings" : {
  "1c76cbfe21c6f44c1d1e59d54f3e4420" : "Company",
  "ce8ae9da5b7cd6c3df2929543a9af92d" : "Email",
  "8444e81d652b084d70c71cd7d19ac0cf" : "Displaying Person{0} - {1} of {2}",
  "ec211f7c20af43e742bf2570c3cb84f9" : "Add",
  "13348442cc6a27032d2b4aa28b75a5d3" : "Search",
  "9e727fdd3aec8274f46685441900280d" : "Project",
  "7dce122004969d56ae2e0245cb754d35" : "Edit",
  "4110db87ce3ac86d603d03d691616b1e" : "Drag person to add or remove from group",
  "bcc254b55c4a1babdf1dcb82c207506b" : "Phone",
  "40bed7cf9b3d4bb3a3d7a7e3eb18c5eb" : "Person",
  "f1174ecbbc232f948717979daf04cf08" : "No Person found",
  "a93806efd0cc7a149f0f03e2b9a0f862" : "Bulk Add",
  "a1fa27779242b4902f7ae3bdd5c6d508" : "Type",
  "49ee3087348e8d44e1feda1917443987" : "Name",
  "bbbabdbe1b262f75d99d62880b953be1" : "Role",
  "4d3d769b812b6faa6b76e1a8abaece2d" : "Active",
  "d4d25ad0a12e8d30e9d8d35230f6d1d3" : "Show Removed",
  "9810aa2b9f44401be4bf73188ef2b67d" : "Fax"
 },
 "items" : [
  {
   "listeners" : {
    "|activate" : "function() {\n    _this.panel = this;\n    if (_this.grid) {\n        _this.grid.footer.onClick('first');\n    }\n}"
   },
   "autoScroll" : true,
   "fitToframe" : true,
   "background" : true,
   "region" : "center",
   "title" : "Person",
   "xtype" : "GridPanel",
   "fitContainer" : true,
   "$ xns" : "Roo",
   "tableName" : "Person",
   "items" : [
    {
     "listeners" : {
      "|rowdblclick" : "function (_self, rowIndex, e)\n{\n    if (!_this.dialog) return;\n    _this.dialog.show( this.getDataSource().getAt(rowIndex), function() {\n        _this.grid.footer.onClick('first');\n    }); \n}\n",
      "|render" : "function() \n{\n    _this.grid = this; \n    if (!_this.dialog) {\n        _this.dialog = Pman.Dialog.PersonEdit;\n        \n    }\n    //_this.dialog = Pman.Dialog.FILL_IN\n    if (_this.panel.active) {\n       this.footer.onClick('first');\n    }\n}",
      "cellclick" : "function (_self, rowIndex, columnIndex, e)\n{\n\n        var di = this.colModel.getDataIndex(columnIndex);\n        if (di != 'active') {\n            return;\n        }\n         \n        var rec = _this.grid.ds.getAt(rowIndex);\n        \n        rec.set('active', rec.data.active ? 0 : 1);\n        rec.commit();\n        Roo.select('.x-grid-row-selected').item(1).addClass('fadeout');\n        (function(){\n            _this.grid.footer.onClick('first');\n        }).defer(5000)();\n        \n}"
     },
     "autoExpandColumn" : "name",
     "xtype" : "Grid",
     "ddGroup" : "groupDD",
     "enableDrag" : true,
     "loadMask" : true,
     "$ xns" : "Roo.grid",
     "* prop" : "grid",
     "items" : [
      {
       "listeners" : {
        "update" : "function (_self, record, operation)\n{\n    if (operation != 'commit') {\n        return;\n    }\n    // only used to change active status.\n    \n    new Pman.Request({\n        url : baseURL + '/Roo/core_person',\n        method :'POST',\n        params : {\n            id : record.data.id,\n            active: record.data.active\n            \n        },\n        success : function() {\n            // do nothing\n            \n            _this.grid.ds.remove(record);\n            \n        },\n        failure : function() \n        {\n            Roo.MessageBox.alert(\"Error\", \"saving failed\", function() {\n                _this.grid.footer.onClick('first');\n            });\n        }\n    });\n}",
        "beforeload" : "function (_self, o)\n{\n  \n   // technically we may allow non-owner's to be in the group..\n   // need to work out how that will work...\n   // \n   \n    //o.params['company_id_comptype'] = 'OWNER';\n    o.params['query[search]'] = _this.searchBox.getValue();\n    \n    if (!_this.activeButton) {return; false;}\n    \n    \n    o.params.active = _this.activeButton.pressed ? 0 : 1;\n    if (!Pman.Tab.AdminPermManager) { \n        return false;\n    }\n    \n    \n    if (Pman.Tab.AdminPermManager && Pman.Tab.AdminPermManager.grid) {\n        var tms = Pman.Tab.AdminPermManager.grid.getSelectionModel().getSelected();\n        \n        if (!tms) {\n            return false;\n        }\n        o.params['query[in_group]'] = tms.data.id;\n        o.params['query[type]'] = 0; // group type..\n        \n    }\n    //o.params['query[name]'] = _this.searchBox.getValue();\n  \n    \n}"
       },
       "xtype" : "Store",
       "remoteSort" : true,
       "$ sortInfo" : "{ field : 'name', direction: 'ASC' }",
       "$ xns" : "Roo.data",
       "* prop" : "dataSource",
       "items" : [
        {
         "$ url" : "baseURL + '/Roo/core_person'",
         "xtype" : "HttpProxy",
         "method" : "GET",
         "$ xns" : "Roo.data",
         "* prop" : "proxy"
        },
        {
         "id" : "id",
         "root" : "data",
         "xtype" : "JsonReader",
         "$ xns" : "Roo.data",
         "$ fields" : "[\n    {\n        'name': 'id',\n        'type': 'int'\n    },\n    {\n        'name': 'office_id',\n        'type': 'int'\n    },\n    {\n        'name': 'name',\n        'type': 'string'\n    },\n    {\n        'name': 'phone',\n        'type': 'string'\n    },\n    {\n        'name': 'fax',\n        'type': 'string'\n    },\n    {\n        'name': 'email',\n        'type': 'string'\n    },\n    {\n        'name': 'company_id',\n        'type': 'int'\n    },\n    {\n        'name': 'role',\n        'type': 'string'\n    },\n    {\n        'name': 'active',\n        'type': 'int'\n    },\n    {\n        'name': 'remarks',\n        'type': 'string'\n    },\n    {\n        'name': 'passwd',\n        'type': 'string'\n    },\n    {\n        'name': 'owner_id',\n        'type': 'int'\n    },\n    {\n        'name': 'lang',\n        'type': 'string'\n    },\n    {\n        'name': 'no_reset_sent',\n        'type': 'int'\n    },\n    {\n        'name': 'action_type',\n        'type': 'string'\n    },\n    {\n        'name': 'project_id',\n        'type': 'int'\n    },\n    {\n        'name': 'office_id_id',\n        'type': 'int'\n    },\n    {\n        'name': 'office_id_company_id',\n        'type': 'int'\n    },\n    {\n        'name': 'office_id_name',\n        'type': 'string'\n    },\n    {\n        'name': 'office_id_address',\n        'type': 'string'\n    },\n    {\n        'name': 'office_id_phone',\n        'type': 'string'\n    },\n    {\n        'name': 'office_id_fax',\n        'type': 'string'\n    },\n    {\n        'name': 'office_id_email',\n        'type': 'string'\n    },\n    {\n        'name': 'office_id_role',\n        'type': 'string'\n    },\n    {\n        'name': 'company_id_code',\n        'type': 'string'\n    },\n    {\n        'name': 'company_id_name',\n        'type': 'string'\n    },\n    {\n        'name': 'company_id_remarks',\n        'type': 'string'\n    },\n    {\n        'name': 'company_id_owner_id',\n        'type': 'int'\n    },\n    {\n        'name': 'company_id_address',\n        'type': 'string'\n    },\n    {\n        'name': 'company_id_tel',\n        'type': 'string'\n    },\n    {\n        'name': 'company_id_fax',\n        'type': 'string'\n    },\n    {\n        'name': 'company_id_email',\n        'type': 'string'\n    },\n    {\n        'name': 'company_id_id',\n        'type': 'int'\n    },\n    {\n        'name': 'company_id_isOwner',\n        'type': 'int'\n    },\n    {\n        'name': 'company_id_logo_id',\n        'type': 'int'\n    },\n    {\n        'name': 'company_id_background_color',\n        'type': 'string'\n    },\n    {\n        'name': 'company_id_comptype',\n        'type': 'string'\n    },\n    {\n        'name': 'company_id_url',\n        'type': 'string'\n    },\n    {\n        'name': 'company_id_main_office_id',\n        'type': 'int'\n    },\n    {\n        'name': 'company_id_created_by',\n        'type': 'int'\n    },\n    {\n        'name': 'company_id_created_dt',\n        'type': 'date'\n    },\n    {\n        'name': 'company_id_updated_by',\n        'type': 'int'\n    },\n    {\n        'name': 'company_id_updated_dt',\n        'type': 'date'\n    },\n    {\n        'name': 'company_id_passwd',\n        'type': 'string'\n    },\n    {\n        'name': 'project_id_id',\n        'type': 'int'\n    },\n    {\n        'name': 'project_id_name',\n        'type': 'string'\n    },\n    {\n        'name': 'project_id_remarks',\n        'type': 'string'\n    },\n    {\n        'name': 'project_id_owner_id',\n        'type': 'int'\n    },\n    {\n        'name': 'project_id_code',\n        'type': 'string'\n    },\n    {\n        'name': 'project_id_active',\n        'type': 'int'\n    },\n    {\n        'name': 'project_id_type',\n        'type': 'string'\n    },\n    {\n        'name': 'project_id_client_id',\n        'type': 'int'\n    },\n    {\n        'name': 'project_id_team_id',\n        'type': 'int'\n    },\n    {\n        'name': 'project_id_file_location',\n        'type': 'string'\n    },\n    {\n        'name': 'project_id_open_date',\n        'type': 'date'\n    },\n    {\n        'name': 'project_id_open_by',\n        'type': 'int'\n    },\n    {\n        'name': 'project_id_close_date',\n        'type': 'date'\n    },\n    {\n        'name': 'project_id_countries',\n        'type': 'string'\n    },\n    {\n        'name': 'project_id_languages',\n        'type': 'string'\n    },\n    {\n        'name': 'project_id_agency_id',\n        'type': 'int'\n    },\n    {\n        'name': 'owner_id_id',\n        'type': 'int'\n    },\n    {\n        'name': 'owner_id_office_id',\n        'type': 'int'\n    },\n    {\n        'name': 'owner_id_name',\n        'type': 'string'\n    },\n    {\n        'name': 'owner_id_phone',\n        'type': 'string'\n    },\n    {\n        'name': 'owner_id_fax',\n        'type': 'string'\n    },\n    {\n        'name': 'owner_id_email',\n        'type': 'string'\n    },\n    {\n        'name': 'owner_id_company_id',\n        'type': 'int'\n    },\n    {\n        'name': 'owner_id_role',\n        'type': 'string'\n    },\n    {\n        'name': 'owner_id_active',\n        'type': 'int'\n    },\n    {\n        'name': 'owner_id_remarks',\n        'type': 'string'\n    },\n    {\n        'name': 'owner_id_passwd',\n        'type': 'string'\n    },\n    {\n        'name': 'owner_id_owner_id',\n        'type': 'int'\n    },\n    {\n        'name': 'owner_id_lang',\n        'type': 'string'\n    },\n    {\n        'name': 'owner_id_no_reset_sent',\n        'type': 'int'\n    },\n    {\n        'name': 'owner_id_action_type',\n        'type': 'string'\n    },\n    {\n        'name': 'owner_id_project_id',\n        'type': 'int'\n    }\n]",
         "* prop" : "reader",
         "totalProperty" : "total"
        }
       ]
      },
      {
       "pageSize" : 25,
       "xtype" : "PagingToolbar",
       "emptyMsg" : "No Person found",
       "$ xns" : "Roo",
       "displayInfo" : true,
       "displayMsg" : "Displaying Person{0} - {1} of {2}",
       "* prop" : "footer",
       "items" : [
        {
         "text" : "Drag person to add or remove from group",
         "xtype" : "TextItem",
         "$ xns" : "Roo.Toolbar"
        }
       ]
      },
      {
       "xtype" : "Toolbar",
       "$ xns" : "Roo",
       "* prop" : "toolbar",
       "items" : [
        {
         "listeners" : {
          "|click" : "function()\n{\n    \n    _this.dialog.show( { id : 0 } , function() {\n        _this.grid.footer.onClick('first');\n   }); \n}\n"
         },
         "text" : "Add",
         "xtype" : "Button",
         "cls" : "x-btn-text-icon",
         "$ icon" : "Roo.rootURL + 'images/default/dd/drop-add.gif'",
         "$ xns" : "Roo.Toolbar"
        },
        {
         "listeners" : {
          "|click" : "function()\n{\n    \n    Pman.Dialog.PersonBulkAdd.show( { id : 0 } , function() {\n        _this.grid.footer.onClick('first');\n   }); \n}\n"
         },
         "text" : "Bulk Add",
         "xtype" : "Button",
         "cls" : "x-btn-text-icon",
         "$ icon" : "Roo.rootURL + 'images/default/dd/drop-add.gif'",
         "$ xns" : "Roo.Toolbar"
        },
        {
         "listeners" : {
          "|click" : "function()\n{\n    var s = _this.grid.getSelectionModel().getSelections();\n    if (!s.length || (s.length > 1))  {\n        Roo.MessageBox.alert(\"Error\", s.length ? \"Select only one Row\" : \"Select a Row\");\n        return;\n    }\n  \n    _this.dialog.show(s[0].data, function() {\n        _this.grid.footer.onClick('first');\n    }); \n    \n}\n"
         },
         "text" : "Edit",
         "xtype" : "Button",
         "cls" : "x-btn-text-icon",
         "$ icon" : "Roo.rootURL + 'images/default/tree/leaf.gif'",
         "$ xns" : "Roo.Toolbar"
        },
        {
         "xtype" : "Separator",
         "$ xns" : "Roo.Toolbar"
        },
        {
         "text" : "Search",
         "xtype" : "TextItem",
         "$ xns" : "Roo.Toolbar"
        },
        {
         "listeners" : {
          "specialkey" : "function (_self, e)\n{\n  if (e.getKey() == 13) {\n    _this.grid.footer.onClick('first');\n  }\n}",
          "show" : "function (_self,e)\n{\n    if (e.getCharCode() != 13) {\n        return;\n    }\n    _this.grid.footer.onClick('first');\n}",
          "render" : "function (_self)\n{\n    _this.searchBox = _self;\n}"
         },
         "xtype" : "TextField",
         "$ xns" : "Roo.form"
        },
        {
         "listeners" : {
          "|click" : "function (_self, e)\n{\n_this.grid.footer.onClick('first');\n}"
         },
         "xtype" : "Button",
         "cls" : "x-btn-icon",
         "$ icon" : "rootURL + '/Pman/templates/images/search.gif'",
         "$ xns" : "Roo.Toolbar"
        },
        {
         "listeners" : {
          "|click" : "function (_self, e)\n{\n_this.searchBox.setValue('');\n    _this.grid.footer.onClick('first');\n}"
         },
         "xtype" : "Button",
         "cls" : "x-btn-icon",
         "$ icon" : "rootURL + '/Pman/templates/images/edit-clear.gif'",
         "$ xns" : "Roo.Toolbar"
        },
        {
         "xtype" : "Fill",
         "$ xns" : "Roo.Toolbar"
        },
        {
         "listeners" : {
          "toggle" : "function (_self, pressed)\n{\n   _this.grid.footer.onClick('first');\n   this.setText(pressed ? \"Show Active\" : \"Show Removed\");\n   \n   \n}",
          "render" : "function (_self)\n{\n  _this.activeButton = _self;\n}"
         },
         "text" : "Show Removed",
         "enableToggle" : true,
         "xtype" : "Button",
         "$ xns" : "Roo.Toolbar"
        }
       ]
      },
      {
       "hidden" : true,
       "xtype" : "ColumnModel",
       "sortable" : true,
       "header" : "Project",
       "width" : 75,
       "$ renderer" : "function(v,x,r) { \n      return String.format('<span qtip=\"{0}\">{1}</span>', \n                    r.data.project_id_name,\n                    v);\n }",
       "$ xns" : "Roo.grid",
       "* prop" : "colModel[]",
       "dataIndex" : "project_id_code"
      },
      {
       "xtype" : "ColumnModel",
       "sortable" : true,
       "header" : "Type",
       "width" : 50,
       "$ renderer" : "function(v,x,r) {\n    if (r.data.office_id) {\n        return String.format('{0} - {1}', v, r.data.office_id_name); \n    } \n    return String.format('{0}', v); \n}",
       "$ xns" : "Roo.grid",
       "* prop" : "colModel[]",
       "dataIndex" : "company_id_comptype"
      },
      {
       "xtype" : "ColumnModel",
       "sortable" : true,
       "header" : "Company",
       "width" : 150,
       "$ renderer" : "function(v,x,r) {\n    if (r.data.office_id) {\n        return String.format('{0} - {1}', v, r.data.office_id_name); \n    } \n    return String.format('{0}', v); \n}",
       "$ xns" : "Roo.grid",
       "* prop" : "colModel[]",
       "dataIndex" : "company_id_name"
      },
      {
       "xtype" : "ColumnModel",
       "sortable" : true,
       "header" : "Name",
       "width" : 200,
       "$ renderer" : "function(v,p,r) { \n    if(r.data.active != 1){\n        return String.format('<div style=\"text-decoration:line-through\">{0}</div>', v); \n    }\n    return String.format('{0}', v); \n}",
       "$ xns" : "Roo.grid",
       "* prop" : "colModel[]",
       "dataIndex" : "name"
      },
      {
       "xtype" : "ColumnModel",
       "width" : 100,
       "header" : "Role",
       "$ renderer" : "function(v) { return String.format('{0}', v); }",
       "$ xns" : "Roo.grid",
       "* prop" : "colModel[]",
       "dataIndex" : "role"
      },
      {
       "xtype" : "ColumnModel",
       "width" : 100,
       "header" : "Phone",
       "$ renderer" : "function(v) { return String.format('{0}', v); }",
       "$ xns" : "Roo.grid",
       "* prop" : "colModel[]",
       "dataIndex" : "phone"
      },
      {
       "xtype" : "ColumnModel",
       "width" : 100,
       "header" : "Fax",
       "$ renderer" : "function(v) { return String.format('{0}', v); }",
       "$ xns" : "Roo.grid",
       "* prop" : "colModel[]",
       "dataIndex" : "fax"
      },
      {
       "xtype" : "ColumnModel",
       "sortable" : true,
       "header" : "Email",
       "width" : 200,
       "$ renderer" : "function(v) {\n   return (v.length && v.indexOf('@') > 0 ) ? \n                    String.format('<a href=\"mailto:{0}\">{0}</a>',v) : v;\n }",
       "$ xns" : "Roo.grid",
       "* prop" : "colModel[]",
       "dataIndex" : "email"
      },
      {
       "xtype" : "ColumnModel",
       "width" : 75,
       "header" : "Active",
       "$ renderer" : "function(v) {  \n    var state = v> 0 ?  '-checked' : '';\n\n    return '<img class=\"x-grid-check-icon' + state + '\" src=\"' + Roo.BLANK_IMAGE_URL + '\"/>';\n                \n }",
       "$ xns" : "Roo.grid",
       "* prop" : "colModel[]",
       "dataIndex" : "active"
      }
     ]
    }
   ]
  }
 ]
}